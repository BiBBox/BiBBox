/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package at.graz.meduni.liferay.portlet.bibbox.kdssmp.service.model.impl;

import at.graz.meduni.liferay.portlet.bibbox.kdssmp.service.model.KdssmpPatient;
import at.graz.meduni.liferay.portlet.bibbox.kdssmp.service.model.KdssmpPatientModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the KdssmpPatient service. Represents a row in the &quot;kdssmp.patient&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link at.graz.meduni.liferay.portlet.bibbox.kdssmp.service.model.KdssmpPatientModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link KdssmpPatientImpl}.
 * </p>
 *
 * @author reihsr
 * @see KdssmpPatientImpl
 * @see at.graz.meduni.liferay.portlet.bibbox.kdssmp.service.model.KdssmpPatient
 * @see at.graz.meduni.liferay.portlet.bibbox.kdssmp.service.model.KdssmpPatientModel
 * @generated
 */
public class KdssmpPatientModelImpl extends BaseModelImpl<KdssmpPatient>
	implements KdssmpPatientModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a kdssmp patient model instance should use the {@link at.graz.meduni.liferay.portlet.bibbox.kdssmp.service.model.KdssmpPatient} interface instead.
	 */
	public static final String TABLE_NAME = "kdssmp.patient";
	public static final Object[][] TABLE_COLUMNS = {
			{ "patientId", Types.BIGINT },
			{ "organizationId", Types.BIGINT },
			{ "firstname", Types.VARCHAR },
			{ "lastname", Types.VARCHAR },
			{ "gender", Types.VARCHAR },
			{ "dateofbirth", Types.TIMESTAMP },
			{ "dateofdeath", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table kdssmp.patient (patientId LONG not null primary key,organizationId LONG,firstname VARCHAR(75) null,lastname VARCHAR(75) null,gender VARCHAR(75) null,dateofbirth DATE null,dateofdeath DATE null)";
	public static final String TABLE_SQL_DROP = "drop table kdssmp.patient";
	public static final String ORDER_BY_JPQL = " ORDER BY kdssmpPatient.patientId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY kdssmp.patient.patientId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.at.graz.meduni.liferay.portlet.bibbox.kdssmp.service.model.KdssmpPatient"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.at.graz.meduni.liferay.portlet.bibbox.kdssmp.service.model.KdssmpPatient"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.at.graz.meduni.liferay.portlet.bibbox.kdssmp.service.model.KdssmpPatient"),
			true);
	public static long ORGANIZATIONID_COLUMN_BITMASK = 1L;
	public static long PATIENTID_COLUMN_BITMASK = 2L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.at.graz.meduni.liferay.portlet.bibbox.kdssmp.service.model.KdssmpPatient"));

	public KdssmpPatientModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _patientId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setPatientId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _patientId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return KdssmpPatient.class;
	}

	@Override
	public String getModelClassName() {
		return KdssmpPatient.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("patientId", getPatientId());
		attributes.put("organizationId", getOrganizationId());
		attributes.put("firstname", getFirstname());
		attributes.put("lastname", getLastname());
		attributes.put("gender", getGender());
		attributes.put("dateofbirth", getDateofbirth());
		attributes.put("dateofdeath", getDateofdeath());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long patientId = (Long)attributes.get("patientId");

		if (patientId != null) {
			setPatientId(patientId);
		}

		Long organizationId = (Long)attributes.get("organizationId");

		if (organizationId != null) {
			setOrganizationId(organizationId);
		}

		String firstname = (String)attributes.get("firstname");

		if (firstname != null) {
			setFirstname(firstname);
		}

		String lastname = (String)attributes.get("lastname");

		if (lastname != null) {
			setLastname(lastname);
		}

		String gender = (String)attributes.get("gender");

		if (gender != null) {
			setGender(gender);
		}

		Date dateofbirth = (Date)attributes.get("dateofbirth");

		if (dateofbirth != null) {
			setDateofbirth(dateofbirth);
		}

		Date dateofdeath = (Date)attributes.get("dateofdeath");

		if (dateofdeath != null) {
			setDateofdeath(dateofdeath);
		}
	}

	@Override
	public long getPatientId() {
		return _patientId;
	}

	@Override
	public void setPatientId(long patientId) {
		_patientId = patientId;
	}

	@Override
	public long getOrganizationId() {
		return _organizationId;
	}

	@Override
	public void setOrganizationId(long organizationId) {
		_columnBitmask |= ORGANIZATIONID_COLUMN_BITMASK;

		if (!_setOriginalOrganizationId) {
			_setOriginalOrganizationId = true;

			_originalOrganizationId = _organizationId;
		}

		_organizationId = organizationId;
	}

	public long getOriginalOrganizationId() {
		return _originalOrganizationId;
	}

	@Override
	public String getFirstname() {
		if (_firstname == null) {
			return StringPool.BLANK;
		}
		else {
			return _firstname;
		}
	}

	@Override
	public void setFirstname(String firstname) {
		_firstname = firstname;
	}

	@Override
	public String getLastname() {
		if (_lastname == null) {
			return StringPool.BLANK;
		}
		else {
			return _lastname;
		}
	}

	@Override
	public void setLastname(String lastname) {
		_lastname = lastname;
	}

	@Override
	public String getGender() {
		if (_gender == null) {
			return StringPool.BLANK;
		}
		else {
			return _gender;
		}
	}

	@Override
	public void setGender(String gender) {
		_gender = gender;
	}

	@Override
	public Date getDateofbirth() {
		return _dateofbirth;
	}

	@Override
	public void setDateofbirth(Date dateofbirth) {
		_dateofbirth = dateofbirth;
	}

	@Override
	public Date getDateofdeath() {
		return _dateofdeath;
	}

	@Override
	public void setDateofdeath(Date dateofdeath) {
		_dateofdeath = dateofdeath;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			KdssmpPatient.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public KdssmpPatient toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (KdssmpPatient)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		KdssmpPatientImpl kdssmpPatientImpl = new KdssmpPatientImpl();

		kdssmpPatientImpl.setPatientId(getPatientId());
		kdssmpPatientImpl.setOrganizationId(getOrganizationId());
		kdssmpPatientImpl.setFirstname(getFirstname());
		kdssmpPatientImpl.setLastname(getLastname());
		kdssmpPatientImpl.setGender(getGender());
		kdssmpPatientImpl.setDateofbirth(getDateofbirth());
		kdssmpPatientImpl.setDateofdeath(getDateofdeath());

		kdssmpPatientImpl.resetOriginalValues();

		return kdssmpPatientImpl;
	}

	@Override
	public int compareTo(KdssmpPatient kdssmpPatient) {
		long primaryKey = kdssmpPatient.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof KdssmpPatient)) {
			return false;
		}

		KdssmpPatient kdssmpPatient = (KdssmpPatient)obj;

		long primaryKey = kdssmpPatient.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		KdssmpPatientModelImpl kdssmpPatientModelImpl = this;

		kdssmpPatientModelImpl._originalOrganizationId = kdssmpPatientModelImpl._organizationId;

		kdssmpPatientModelImpl._setOriginalOrganizationId = false;

		kdssmpPatientModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<KdssmpPatient> toCacheModel() {
		KdssmpPatientCacheModel kdssmpPatientCacheModel = new KdssmpPatientCacheModel();

		kdssmpPatientCacheModel.patientId = getPatientId();

		kdssmpPatientCacheModel.organizationId = getOrganizationId();

		kdssmpPatientCacheModel.firstname = getFirstname();

		String firstname = kdssmpPatientCacheModel.firstname;

		if ((firstname != null) && (firstname.length() == 0)) {
			kdssmpPatientCacheModel.firstname = null;
		}

		kdssmpPatientCacheModel.lastname = getLastname();

		String lastname = kdssmpPatientCacheModel.lastname;

		if ((lastname != null) && (lastname.length() == 0)) {
			kdssmpPatientCacheModel.lastname = null;
		}

		kdssmpPatientCacheModel.gender = getGender();

		String gender = kdssmpPatientCacheModel.gender;

		if ((gender != null) && (gender.length() == 0)) {
			kdssmpPatientCacheModel.gender = null;
		}

		Date dateofbirth = getDateofbirth();

		if (dateofbirth != null) {
			kdssmpPatientCacheModel.dateofbirth = dateofbirth.getTime();
		}
		else {
			kdssmpPatientCacheModel.dateofbirth = Long.MIN_VALUE;
		}

		Date dateofdeath = getDateofdeath();

		if (dateofdeath != null) {
			kdssmpPatientCacheModel.dateofdeath = dateofdeath.getTime();
		}
		else {
			kdssmpPatientCacheModel.dateofdeath = Long.MIN_VALUE;
		}

		return kdssmpPatientCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(15);

		sb.append("{patientId=");
		sb.append(getPatientId());
		sb.append(", organizationId=");
		sb.append(getOrganizationId());
		sb.append(", firstname=");
		sb.append(getFirstname());
		sb.append(", lastname=");
		sb.append(getLastname());
		sb.append(", gender=");
		sb.append(getGender());
		sb.append(", dateofbirth=");
		sb.append(getDateofbirth());
		sb.append(", dateofdeath=");
		sb.append(getDateofdeath());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(25);

		sb.append("<model><model-name>");
		sb.append(
			"at.graz.meduni.liferay.portlet.bibbox.kdssmp.service.model.KdssmpPatient");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>patientId</column-name><column-value><![CDATA[");
		sb.append(getPatientId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>organizationId</column-name><column-value><![CDATA[");
		sb.append(getOrganizationId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>firstname</column-name><column-value><![CDATA[");
		sb.append(getFirstname());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>lastname</column-name><column-value><![CDATA[");
		sb.append(getLastname());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>gender</column-name><column-value><![CDATA[");
		sb.append(getGender());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dateofbirth</column-name><column-value><![CDATA[");
		sb.append(getDateofbirth());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dateofdeath</column-name><column-value><![CDATA[");
		sb.append(getDateofdeath());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = KdssmpPatient.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			KdssmpPatient.class
		};
	private long _patientId;
	private long _organizationId;
	private long _originalOrganizationId;
	private boolean _setOriginalOrganizationId;
	private String _firstname;
	private String _lastname;
	private String _gender;
	private Date _dateofbirth;
	private Date _dateofdeath;
	private long _columnBitmask;
	private KdssmpPatient _escapedModel;
}