/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package at.meduni.liferay.portlet.bbmriat.model.impl;

import at.meduni.liferay.portlet.bbmriat.model.History;
import at.meduni.liferay.portlet.bbmriat.model.HistoryModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the History service. Represents a row in the &quot;history&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link at.meduni.liferay.portlet.bbmriat.model.HistoryModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link HistoryImpl}.
 * </p>
 *
 * @author Robert Reihs
 * @see HistoryImpl
 * @see at.meduni.liferay.portlet.bbmriat.model.History
 * @see at.meduni.liferay.portlet.bbmriat.model.HistoryModel
 * @generated
 */
public class HistoryModelImpl extends BaseModelImpl<History>
	implements HistoryModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a history model instance should use the {@link at.meduni.liferay.portlet.bbmriat.model.History} interface instead.
	 */
	public static final String TABLE_NAME = "history";
	public static final Object[][] TABLE_COLUMNS = {
			{ "id", Types.BIGINT },
			{ "action", Types.BIGINT },
			{ "time_", Types.TIMESTAMP },
			{ "histo_id", Types.BIGINT },
			{ "workplace_id", Types.BIGINT },
			{ "order_id", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table history (id LONG not null primary key,action LONG,time_ DATE null,histo_id LONG,workplace_id LONG,order_id LONG)";
	public static final String TABLE_SQL_DROP = "drop table history";
	public static final String ORDER_BY_JPQL = " ORDER BY history.historyId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY history.id ASC";
	public static final String DATA_SOURCE = "ylogDataSource";
	public static final String SESSION_FACTORY = "ylogSessionFactory";
	public static final String TX_MANAGER = "ylogTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.at.meduni.liferay.portlet.bbmriat.model.History"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.at.meduni.liferay.portlet.bbmriat.model.History"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.at.meduni.liferay.portlet.bbmriat.model.History"));

	public HistoryModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _historyId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setHistoryId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _historyId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return History.class;
	}

	@Override
	public String getModelClassName() {
		return History.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("historyId", getHistoryId());
		attributes.put("action", getAction());
		attributes.put("time", getTime());
		attributes.put("histo_id", getHisto_id());
		attributes.put("workplace_id", getWorkplace_id());
		attributes.put("order_id", getOrder_id());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long historyId = (Long)attributes.get("historyId");

		if (historyId != null) {
			setHistoryId(historyId);
		}

		Long action = (Long)attributes.get("action");

		if (action != null) {
			setAction(action);
		}

		Date time = (Date)attributes.get("time");

		if (time != null) {
			setTime(time);
		}

		Long histo_id = (Long)attributes.get("histo_id");

		if (histo_id != null) {
			setHisto_id(histo_id);
		}

		Long workplace_id = (Long)attributes.get("workplace_id");

		if (workplace_id != null) {
			setWorkplace_id(workplace_id);
		}

		Long order_id = (Long)attributes.get("order_id");

		if (order_id != null) {
			setOrder_id(order_id);
		}
	}

	@Override
	public long getHistoryId() {
		return _historyId;
	}

	@Override
	public void setHistoryId(long historyId) {
		_historyId = historyId;
	}

	@Override
	public long getAction() {
		return _action;
	}

	@Override
	public void setAction(long action) {
		_action = action;
	}

	@Override
	public Date getTime() {
		return _time;
	}

	@Override
	public void setTime(Date time) {
		_time = time;
	}

	@Override
	public long getHisto_id() {
		return _histo_id;
	}

	@Override
	public void setHisto_id(long histo_id) {
		_histo_id = histo_id;
	}

	@Override
	public long getWorkplace_id() {
		return _workplace_id;
	}

	@Override
	public void setWorkplace_id(long workplace_id) {
		_workplace_id = workplace_id;
	}

	@Override
	public long getOrder_id() {
		return _order_id;
	}

	@Override
	public void setOrder_id(long order_id) {
		_order_id = order_id;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			History.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public History toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (History)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		HistoryImpl historyImpl = new HistoryImpl();

		historyImpl.setHistoryId(getHistoryId());
		historyImpl.setAction(getAction());
		historyImpl.setTime(getTime());
		historyImpl.setHisto_id(getHisto_id());
		historyImpl.setWorkplace_id(getWorkplace_id());
		historyImpl.setOrder_id(getOrder_id());

		historyImpl.resetOriginalValues();

		return historyImpl;
	}

	@Override
	public int compareTo(History history) {
		long primaryKey = history.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof History)) {
			return false;
		}

		History history = (History)obj;

		long primaryKey = history.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<History> toCacheModel() {
		HistoryCacheModel historyCacheModel = new HistoryCacheModel();

		historyCacheModel.historyId = getHistoryId();

		historyCacheModel.action = getAction();

		Date time = getTime();

		if (time != null) {
			historyCacheModel.time = time.getTime();
		}
		else {
			historyCacheModel.time = Long.MIN_VALUE;
		}

		historyCacheModel.histo_id = getHisto_id();

		historyCacheModel.workplace_id = getWorkplace_id();

		historyCacheModel.order_id = getOrder_id();

		return historyCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(13);

		sb.append("{historyId=");
		sb.append(getHistoryId());
		sb.append(", action=");
		sb.append(getAction());
		sb.append(", time=");
		sb.append(getTime());
		sb.append(", histo_id=");
		sb.append(getHisto_id());
		sb.append(", workplace_id=");
		sb.append(getWorkplace_id());
		sb.append(", order_id=");
		sb.append(getOrder_id());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(22);

		sb.append("<model><model-name>");
		sb.append("at.meduni.liferay.portlet.bbmriat.model.History");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>historyId</column-name><column-value><![CDATA[");
		sb.append(getHistoryId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>action</column-name><column-value><![CDATA[");
		sb.append(getAction());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>time</column-name><column-value><![CDATA[");
		sb.append(getTime());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>histo_id</column-name><column-value><![CDATA[");
		sb.append(getHisto_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>workplace_id</column-name><column-value><![CDATA[");
		sb.append(getWorkplace_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>order_id</column-name><column-value><![CDATA[");
		sb.append(getOrder_id());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = History.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			History.class
		};
	private long _historyId;
	private long _action;
	private Date _time;
	private long _histo_id;
	private long _workplace_id;
	private long _order_id;
	private History _escapedModel;
}