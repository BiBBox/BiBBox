/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package at.graz.meduni.liferay.portlet.bbmriat.service.model.impl;

import at.graz.meduni.liferay.portlet.bbmriat.service.model.Organizationlink;
import at.graz.meduni.liferay.portlet.bbmriat.service.model.OrganizationlinkModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the Organizationlink service. Represents a row in the &quot;bbmriat.organizationlink&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link at.graz.meduni.liferay.portlet.bbmriat.service.model.OrganizationlinkModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link OrganizationlinkImpl}.
 * </p>
 *
 * @author Reihs Robert
 * @see OrganizationlinkImpl
 * @see at.graz.meduni.liferay.portlet.bbmriat.service.model.Organizationlink
 * @see at.graz.meduni.liferay.portlet.bbmriat.service.model.OrganizationlinkModel
 * @generated
 */
public class OrganizationlinkModelImpl extends BaseModelImpl<Organizationlink>
	implements OrganizationlinkModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a organizationlink model instance should use the {@link at.graz.meduni.liferay.portlet.bbmriat.service.model.Organizationlink} interface instead.
	 */
	public static final String TABLE_NAME = "bbmriat.organizationlink";
	public static final Object[][] TABLE_COLUMNS = {
			{ "organizationlinkId", Types.BIGINT },
			{ "parentorganizationId", Types.BIGINT },
			{ "organizationId", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table bbmriat.organizationlink (organizationlinkId LONG not null primary key,parentorganizationId LONG,organizationId LONG)";
	public static final String TABLE_SQL_DROP = "drop table bbmriat.organizationlink";
	public static final String ORDER_BY_JPQL = " ORDER BY organizationlink.organizationlinkId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY bbmriat.organizationlink.organizationlinkId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.at.graz.meduni.liferay.portlet.bbmriat.service.model.Organizationlink"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.at.graz.meduni.liferay.portlet.bbmriat.service.model.Organizationlink"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.at.graz.meduni.liferay.portlet.bbmriat.service.model.Organizationlink"),
			true);
	public static long ORGANIZATIONID_COLUMN_BITMASK = 1L;
	public static long PARENTORGANIZATIONID_COLUMN_BITMASK = 2L;
	public static long ORGANIZATIONLINKID_COLUMN_BITMASK = 4L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.at.graz.meduni.liferay.portlet.bbmriat.service.model.Organizationlink"));

	public OrganizationlinkModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _organizationlinkId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setOrganizationlinkId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _organizationlinkId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Organizationlink.class;
	}

	@Override
	public String getModelClassName() {
		return Organizationlink.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("organizationlinkId", getOrganizationlinkId());
		attributes.put("parentorganizationId", getParentorganizationId());
		attributes.put("organizationId", getOrganizationId());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long organizationlinkId = (Long)attributes.get("organizationlinkId");

		if (organizationlinkId != null) {
			setOrganizationlinkId(organizationlinkId);
		}

		Long parentorganizationId = (Long)attributes.get("parentorganizationId");

		if (parentorganizationId != null) {
			setParentorganizationId(parentorganizationId);
		}

		Long organizationId = (Long)attributes.get("organizationId");

		if (organizationId != null) {
			setOrganizationId(organizationId);
		}
	}

	@Override
	public long getOrganizationlinkId() {
		return _organizationlinkId;
	}

	@Override
	public void setOrganizationlinkId(long organizationlinkId) {
		_organizationlinkId = organizationlinkId;
	}

	@Override
	public long getParentorganizationId() {
		return _parentorganizationId;
	}

	@Override
	public void setParentorganizationId(long parentorganizationId) {
		_columnBitmask |= PARENTORGANIZATIONID_COLUMN_BITMASK;

		if (!_setOriginalParentorganizationId) {
			_setOriginalParentorganizationId = true;

			_originalParentorganizationId = _parentorganizationId;
		}

		_parentorganizationId = parentorganizationId;
	}

	public long getOriginalParentorganizationId() {
		return _originalParentorganizationId;
	}

	@Override
	public long getOrganizationId() {
		return _organizationId;
	}

	@Override
	public void setOrganizationId(long organizationId) {
		_columnBitmask |= ORGANIZATIONID_COLUMN_BITMASK;

		if (!_setOriginalOrganizationId) {
			_setOriginalOrganizationId = true;

			_originalOrganizationId = _organizationId;
		}

		_organizationId = organizationId;
	}

	public long getOriginalOrganizationId() {
		return _originalOrganizationId;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			Organizationlink.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Organizationlink toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Organizationlink)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		OrganizationlinkImpl organizationlinkImpl = new OrganizationlinkImpl();

		organizationlinkImpl.setOrganizationlinkId(getOrganizationlinkId());
		organizationlinkImpl.setParentorganizationId(getParentorganizationId());
		organizationlinkImpl.setOrganizationId(getOrganizationId());

		organizationlinkImpl.resetOriginalValues();

		return organizationlinkImpl;
	}

	@Override
	public int compareTo(Organizationlink organizationlink) {
		long primaryKey = organizationlink.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Organizationlink)) {
			return false;
		}

		Organizationlink organizationlink = (Organizationlink)obj;

		long primaryKey = organizationlink.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		OrganizationlinkModelImpl organizationlinkModelImpl = this;

		organizationlinkModelImpl._originalParentorganizationId = organizationlinkModelImpl._parentorganizationId;

		organizationlinkModelImpl._setOriginalParentorganizationId = false;

		organizationlinkModelImpl._originalOrganizationId = organizationlinkModelImpl._organizationId;

		organizationlinkModelImpl._setOriginalOrganizationId = false;

		organizationlinkModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Organizationlink> toCacheModel() {
		OrganizationlinkCacheModel organizationlinkCacheModel = new OrganizationlinkCacheModel();

		organizationlinkCacheModel.organizationlinkId = getOrganizationlinkId();

		organizationlinkCacheModel.parentorganizationId = getParentorganizationId();

		organizationlinkCacheModel.organizationId = getOrganizationId();

		return organizationlinkCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(7);

		sb.append("{organizationlinkId=");
		sb.append(getOrganizationlinkId());
		sb.append(", parentorganizationId=");
		sb.append(getParentorganizationId());
		sb.append(", organizationId=");
		sb.append(getOrganizationId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(13);

		sb.append("<model><model-name>");
		sb.append(
			"at.graz.meduni.liferay.portlet.bbmriat.service.model.Organizationlink");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>organizationlinkId</column-name><column-value><![CDATA[");
		sb.append(getOrganizationlinkId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>parentorganizationId</column-name><column-value><![CDATA[");
		sb.append(getParentorganizationId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>organizationId</column-name><column-value><![CDATA[");
		sb.append(getOrganizationId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Organizationlink.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			Organizationlink.class
		};
	private long _organizationlinkId;
	private long _parentorganizationId;
	private long _originalParentorganizationId;
	private boolean _setOriginalParentorganizationId;
	private long _organizationId;
	private long _originalOrganizationId;
	private boolean _setOriginalOrganizationId;
	private long _columnBitmask;
	private Organizationlink _escapedModel;
}