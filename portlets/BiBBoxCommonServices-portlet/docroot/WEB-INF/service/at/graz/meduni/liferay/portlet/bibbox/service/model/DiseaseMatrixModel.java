/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package at.graz.meduni.liferay.portlet.bibbox.service.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the DiseaseMatrix service. Represents a row in the &quot;rdconnect.diseasematrix&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link at.graz.meduni.liferay.portlet.bibbox.service.model.impl.DiseaseMatrixModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link at.graz.meduni.liferay.portlet.bibbox.service.model.impl.DiseaseMatrixImpl}.
 * </p>
 *
 * @author reihsr
 * @see DiseaseMatrix
 * @see at.graz.meduni.liferay.portlet.bibbox.service.model.impl.DiseaseMatrixImpl
 * @see at.graz.meduni.liferay.portlet.bibbox.service.model.impl.DiseaseMatrixModelImpl
 * @generated
 */
public interface DiseaseMatrixModel extends BaseModel<DiseaseMatrix> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a disease matrix model instance should use the {@link DiseaseMatrix} interface instead.
	 */

	/**
	 * Returns the primary key of this disease matrix.
	 *
	 * @return the primary key of this disease matrix
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this disease matrix.
	 *
	 * @param primaryKey the primary key of this disease matrix
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the diseasematrix ID of this disease matrix.
	 *
	 * @return the diseasematrix ID of this disease matrix
	 */
	public long getDiseasematrixId();

	/**
	 * Sets the diseasematrix ID of this disease matrix.
	 *
	 * @param diseasematrixId the diseasematrix ID of this disease matrix
	 */
	public void setDiseasematrixId(long diseasematrixId);

	/**
	 * Returns the organization ID of this disease matrix.
	 *
	 * @return the organization ID of this disease matrix
	 */
	public long getOrganizationId();

	/**
	 * Sets the organization ID of this disease matrix.
	 *
	 * @param organizationId the organization ID of this disease matrix
	 */
	public void setOrganizationId(long organizationId);

	/**
	 * Returns the diseasename of this disease matrix.
	 *
	 * @return the diseasename of this disease matrix
	 */
	@AutoEscape
	public String getDiseasename();

	/**
	 * Sets the diseasename of this disease matrix.
	 *
	 * @param diseasename the diseasename of this disease matrix
	 */
	public void setDiseasename(String diseasename);

	/**
	 * Returns the patientcount of this disease matrix.
	 *
	 * @return the patientcount of this disease matrix
	 */
	@AutoEscape
	public String getPatientcount();

	/**
	 * Sets the patientcount of this disease matrix.
	 *
	 * @param patientcount the patientcount of this disease matrix
	 */
	public void setPatientcount(String patientcount);

	/**
	 * Returns the gene of this disease matrix.
	 *
	 * @return the gene of this disease matrix
	 */
	@AutoEscape
	public String getGene();

	/**
	 * Sets the gene of this disease matrix.
	 *
	 * @param gene the gene of this disease matrix
	 */
	public void setGene(String gene);

	/**
	 * Returns the orphanumber of this disease matrix.
	 *
	 * @return the orphanumber of this disease matrix
	 */
	@AutoEscape
	public String getOrphanumber();

	/**
	 * Sets the orphanumber of this disease matrix.
	 *
	 * @param orphanumber the orphanumber of this disease matrix
	 */
	public void setOrphanumber(String orphanumber);

	/**
	 * Returns the icd10 of this disease matrix.
	 *
	 * @return the icd10 of this disease matrix
	 */
	@AutoEscape
	public String getIcd10();

	/**
	 * Sets the icd10 of this disease matrix.
	 *
	 * @param icd10 the icd10 of this disease matrix
	 */
	public void setIcd10(String icd10);

	/**
	 * Returns the omim of this disease matrix.
	 *
	 * @return the omim of this disease matrix
	 */
	@AutoEscape
	public String getOmim();

	/**
	 * Sets the omim of this disease matrix.
	 *
	 * @param omim the omim of this disease matrix
	 */
	public void setOmim(String omim);

	/**
	 * Returns the synonym of this disease matrix.
	 *
	 * @return the synonym of this disease matrix
	 */
	@AutoEscape
	public String getSynonym();

	/**
	 * Sets the synonym of this disease matrix.
	 *
	 * @param synonym the synonym of this disease matrix
	 */
	public void setSynonym(String synonym);

	/**
	 * Returns the modifieddate of this disease matrix.
	 *
	 * @return the modifieddate of this disease matrix
	 */
	public Date getModifieddate();

	/**
	 * Sets the modifieddate of this disease matrix.
	 *
	 * @param modifieddate the modifieddate of this disease matrix
	 */
	public void setModifieddate(Date modifieddate);

	/**
	 * Returns the modifieduser of this disease matrix.
	 *
	 * @return the modifieduser of this disease matrix
	 */
	@AutoEscape
	public String getModifieduser();

	/**
	 * Sets the modifieduser of this disease matrix.
	 *
	 * @param modifieduser the modifieduser of this disease matrix
	 */
	public void setModifieduser(String modifieduser);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(
		at.graz.meduni.liferay.portlet.bibbox.service.model.DiseaseMatrix diseaseMatrix);

	@Override
	public int hashCode();

	@Override
	public CacheModel<at.graz.meduni.liferay.portlet.bibbox.service.model.DiseaseMatrix> toCacheModel();

	@Override
	public at.graz.meduni.liferay.portlet.bibbox.service.model.DiseaseMatrix toEscapedModel();

	@Override
	public at.graz.meduni.liferay.portlet.bibbox.service.model.DiseaseMatrix toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}