/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package at.meduni.liferay.portlet.rdconnect.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the MasterCandidate service. Represents a row in the &quot;rdconnect.master_candidate&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link at.meduni.liferay.portlet.rdconnect.model.impl.MasterCandidateModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link at.meduni.liferay.portlet.rdconnect.model.impl.MasterCandidateImpl}.
 * </p>
 *
 * @author Robert Reihs
 * @see MasterCandidate
 * @see at.meduni.liferay.portlet.rdconnect.model.impl.MasterCandidateImpl
 * @see at.meduni.liferay.portlet.rdconnect.model.impl.MasterCandidateModelImpl
 * @generated
 */
public interface MasterCandidateModel extends BaseModel<MasterCandidate> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a master candidate model instance should use the {@link MasterCandidate} interface instead.
	 */

	/**
	 * Returns the primary key of this master candidate.
	 *
	 * @return the primary key of this master candidate
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this master candidate.
	 *
	 * @param primaryKey the primary key of this master candidate
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the master candidate ID of this master candidate.
	 *
	 * @return the master candidate ID of this master candidate
	 */
	public long getMasterCandidateId();

	/**
	 * Sets the master candidate ID of this master candidate.
	 *
	 * @param masterCandidateId the master candidate ID of this master candidate
	 */
	public void setMasterCandidateId(long masterCandidateId);

	/**
	 * Returns the name of this master candidate.
	 *
	 * @return the name of this master candidate
	 */
	@AutoEscape
	public String getName();

	/**
	 * Sets the name of this master candidate.
	 *
	 * @param name the name of this master candidate
	 */
	public void setName(String name);

	/**
	 * Returns the url of this master candidate.
	 *
	 * @return the url of this master candidate
	 */
	@AutoEscape
	public String getUrl();

	/**
	 * Sets the url of this master candidate.
	 *
	 * @param url the url of this master candidate
	 */
	public void setUrl(String url);

	/**
	 * Returns the contactperson of this master candidate.
	 *
	 * @return the contactperson of this master candidate
	 */
	@AutoEscape
	public String getContactperson();

	/**
	 * Sets the contactperson of this master candidate.
	 *
	 * @param contactperson the contactperson of this master candidate
	 */
	public void setContactperson(String contactperson);

	/**
	 * Returns the candidatetype of this master candidate.
	 *
	 * @return the candidatetype of this master candidate
	 */
	@AutoEscape
	public String getCandidatetype();

	/**
	 * Sets the candidatetype of this master candidate.
	 *
	 * @param candidatetype the candidatetype of this master candidate
	 */
	public void setCandidatetype(String candidatetype);

	/**
	 * Returns the candidatesubtype of this master candidate.
	 *
	 * @return the candidatesubtype of this master candidate
	 */
	@AutoEscape
	public String getCandidatesubtype();

	/**
	 * Sets the candidatesubtype of this master candidate.
	 *
	 * @param candidatesubtype the candidatesubtype of this master candidate
	 */
	public void setCandidatesubtype(String candidatesubtype);

	/**
	 * Returns the country of this master candidate.
	 *
	 * @return the country of this master candidate
	 */
	@AutoEscape
	public String getCountry();

	/**
	 * Sets the country of this master candidate.
	 *
	 * @param country the country of this master candidate
	 */
	public void setCountry(String country);

	/**
	 * Returns the diseasescodes of this master candidate.
	 *
	 * @return the diseasescodes of this master candidate
	 */
	@AutoEscape
	public String getDiseasescodes();

	/**
	 * Sets the diseasescodes of this master candidate.
	 *
	 * @param diseasescodes the diseasescodes of this master candidate
	 */
	public void setDiseasescodes(String diseasescodes);

	/**
	 * Returns the diseasesfreetext of this master candidate.
	 *
	 * @return the diseasesfreetext of this master candidate
	 */
	@AutoEscape
	public String getDiseasesfreetext();

	/**
	 * Sets the diseasesfreetext of this master candidate.
	 *
	 * @param diseasesfreetext the diseasesfreetext of this master candidate
	 */
	public void setDiseasesfreetext(String diseasesfreetext);

	/**
	 * Returns the comment of this master candidate.
	 *
	 * @return the comment of this master candidate
	 */
	@AutoEscape
	public String getComment();

	/**
	 * Sets the comment of this master candidate.
	 *
	 * @param comment the comment of this master candidate
	 */
	public void setComment(String comment);

	/**
	 * Returns the address of this master candidate.
	 *
	 * @return the address of this master candidate
	 */
	@AutoEscape
	public String getAddress();

	/**
	 * Sets the address of this master candidate.
	 *
	 * @param address the address of this master candidate
	 */
	public void setAddress(String address);

	/**
	 * Returns the date of this master candidate.
	 *
	 * @return the date of this master candidate
	 */
	public Date getDate();

	/**
	 * Sets the date of this master candidate.
	 *
	 * @param date the date of this master candidate
	 */
	public void setDate(Date date);

	/**
	 * Returns the mail of this master candidate.
	 *
	 * @return the mail of this master candidate
	 */
	@AutoEscape
	public String getMail();

	/**
	 * Sets the mail of this master candidate.
	 *
	 * @param mail the mail of this master candidate
	 */
	public void setMail(String mail);

	/**
	 * Returns the head of this master candidate.
	 *
	 * @return the head of this master candidate
	 */
	@AutoEscape
	public String getHead();

	/**
	 * Sets the head of this master candidate.
	 *
	 * @param head the head of this master candidate
	 */
	public void setHead(String head);

	/**
	 * Returns the groupid of this master candidate.
	 *
	 * @return the groupid of this master candidate
	 */
	public long getGroupid();

	/**
	 * Sets the groupid of this master candidate.
	 *
	 * @param groupid the groupid of this master candidate
	 */
	public void setGroupid(long groupid);

	/**
	 * Returns the companyid of this master candidate.
	 *
	 * @return the companyid of this master candidate
	 */
	public long getCompanyid();

	/**
	 * Sets the companyid of this master candidate.
	 *
	 * @param companyid the companyid of this master candidate
	 */
	public void setCompanyid(long companyid);

	/**
	 * Returns the organisationid of this master candidate.
	 *
	 * @return the organisationid of this master candidate
	 */
	public long getOrganisationid();

	/**
	 * Sets the organisationid of this master candidate.
	 *
	 * @param organisationid the organisationid of this master candidate
	 */
	public void setOrganisationid(long organisationid);

	/**
	 * Returns the join ID of this master candidate.
	 *
	 * @return the join ID of this master candidate
	 */
	public long getJoinId();

	/**
	 * Sets the join ID of this master candidate.
	 *
	 * @param joinId the join ID of this master candidate
	 */
	public void setJoinId(long joinId);

	/**
	 * Returns the accepted of this master candidate.
	 *
	 * @return the accepted of this master candidate
	 */
	public boolean getAccepted();

	/**
	 * Returns <code>true</code> if this master candidate is accepted.
	 *
	 * @return <code>true</code> if this master candidate is accepted; <code>false</code> otherwise
	 */
	public boolean isAccepted();

	/**
	 * Sets whether this master candidate is accepted.
	 *
	 * @param accepted the accepted of this master candidate
	 */
	public void setAccepted(boolean accepted);

	/**
	 * Returns the state of this master candidate.
	 *
	 * @return the state of this master candidate
	 */
	@AutoEscape
	public String getState();

	/**
	 * Sets the state of this master candidate.
	 *
	 * @param state the state of this master candidate
	 */
	public void setState(String state);

	/**
	 * Returns the diseasescodesauto of this master candidate.
	 *
	 * @return the diseasescodesauto of this master candidate
	 */
	@AutoEscape
	public String getDiseasescodesauto();

	/**
	 * Sets the diseasescodesauto of this master candidate.
	 *
	 * @param diseasescodesauto the diseasescodesauto of this master candidate
	 */
	public void setDiseasescodesauto(String diseasescodesauto);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(MasterCandidate masterCandidate);

	@Override
	public int hashCode();

	@Override
	public CacheModel<MasterCandidate> toCacheModel();

	@Override
	public MasterCandidate toEscapedModel();

	@Override
	public MasterCandidate toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}