/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package at.meduni.liferay.portlet.rdconnect.service.base;

import at.meduni.liferay.portlet.rdconnect.model.AQRRating;
import at.meduni.liferay.portlet.rdconnect.service.AQRRatingLocalService;
import at.meduni.liferay.portlet.rdconnect.service.persistence.AQRRatingPersistence;
import at.meduni.liferay.portlet.rdconnect.service.persistence.CandidatePersistence;
import at.meduni.liferay.portlet.rdconnect.service.persistence.MasterCandidateLinkCandidatePersistence;
import at.meduni.liferay.portlet.rdconnect.service.persistence.MasterCandidatePersistence;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.bean.IdentifiableBean;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.dao.orm.DynamicQuery;
import com.liferay.portal.kernel.dao.orm.DynamicQueryFactoryUtil;
import com.liferay.portal.kernel.dao.orm.Projection;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.search.Indexable;
import com.liferay.portal.kernel.search.IndexableType;
import com.liferay.portal.kernel.util.OrderByComparator;
import com.liferay.portal.model.PersistedModel;
import com.liferay.portal.service.BaseLocalServiceImpl;
import com.liferay.portal.service.PersistedModelLocalServiceRegistryUtil;
import com.liferay.portal.service.persistence.UserPersistence;

import java.io.Serializable;

import java.util.List;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the a q r rating local service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link at.meduni.liferay.portlet.rdconnect.service.impl.AQRRatingLocalServiceImpl}.
 * </p>
 *
 * @author Robert Reihs
 * @see at.meduni.liferay.portlet.rdconnect.service.impl.AQRRatingLocalServiceImpl
 * @see at.meduni.liferay.portlet.rdconnect.service.AQRRatingLocalServiceUtil
 * @generated
 */
public abstract class AQRRatingLocalServiceBaseImpl extends BaseLocalServiceImpl
	implements AQRRatingLocalService, IdentifiableBean {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link at.meduni.liferay.portlet.rdconnect.service.AQRRatingLocalServiceUtil} to access the a q r rating local service.
	 */

	/**
	 * Adds the a q r rating to the database. Also notifies the appropriate model listeners.
	 *
	 * @param aqrRating the a q r rating
	 * @return the a q r rating that was added
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.REINDEX)
	@Override
	public AQRRating addAQRRating(AQRRating aqrRating)
		throws SystemException {
		aqrRating.setNew(true);

		return aqrRatingPersistence.update(aqrRating);
	}

	/**
	 * Creates a new a q r rating with the primary key. Does not add the a q r rating to the database.
	 *
	 * @param aqrId the primary key for the new a q r rating
	 * @return the new a q r rating
	 */
	@Override
	public AQRRating createAQRRating(long aqrId) {
		return aqrRatingPersistence.create(aqrId);
	}

	/**
	 * Deletes the a q r rating with the primary key from the database. Also notifies the appropriate model listeners.
	 *
	 * @param aqrId the primary key of the a q r rating
	 * @return the a q r rating that was removed
	 * @throws PortalException if a a q r rating with the primary key could not be found
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.DELETE)
	@Override
	public AQRRating deleteAQRRating(long aqrId)
		throws PortalException, SystemException {
		return aqrRatingPersistence.remove(aqrId);
	}

	/**
	 * Deletes the a q r rating from the database. Also notifies the appropriate model listeners.
	 *
	 * @param aqrRating the a q r rating
	 * @return the a q r rating that was removed
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.DELETE)
	@Override
	public AQRRating deleteAQRRating(AQRRating aqrRating)
		throws SystemException {
		return aqrRatingPersistence.remove(aqrRating);
	}

	@Override
	public DynamicQuery dynamicQuery() {
		Class<?> clazz = getClass();

		return DynamicQueryFactoryUtil.forClass(AQRRating.class,
			clazz.getClassLoader());
	}

	/**
	 * Performs a dynamic query on the database and returns the matching rows.
	 *
	 * @param dynamicQuery the dynamic query
	 * @return the matching rows
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	@SuppressWarnings("rawtypes")
	public List dynamicQuery(DynamicQuery dynamicQuery)
		throws SystemException {
		return aqrRatingPersistence.findWithDynamicQuery(dynamicQuery);
	}

	/**
	 * Performs a dynamic query on the database and returns a range of the matching rows.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link at.meduni.liferay.portlet.rdconnect.model.impl.AQRRatingModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param dynamicQuery the dynamic query
	 * @param start the lower bound of the range of model instances
	 * @param end the upper bound of the range of model instances (not inclusive)
	 * @return the range of matching rows
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	@SuppressWarnings("rawtypes")
	public List dynamicQuery(DynamicQuery dynamicQuery, int start, int end)
		throws SystemException {
		return aqrRatingPersistence.findWithDynamicQuery(dynamicQuery, start,
			end);
	}

	/**
	 * Performs a dynamic query on the database and returns an ordered range of the matching rows.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link at.meduni.liferay.portlet.rdconnect.model.impl.AQRRatingModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param dynamicQuery the dynamic query
	 * @param start the lower bound of the range of model instances
	 * @param end the upper bound of the range of model instances (not inclusive)
	 * @param orderByComparator the comparator to order the results by (optionally <code>null</code>)
	 * @return the ordered range of matching rows
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	@SuppressWarnings("rawtypes")
	public List dynamicQuery(DynamicQuery dynamicQuery, int start, int end,
		OrderByComparator orderByComparator) throws SystemException {
		return aqrRatingPersistence.findWithDynamicQuery(dynamicQuery, start,
			end, orderByComparator);
	}

	/**
	 * Returns the number of rows that match the dynamic query.
	 *
	 * @param dynamicQuery the dynamic query
	 * @return the number of rows that match the dynamic query
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public long dynamicQueryCount(DynamicQuery dynamicQuery)
		throws SystemException {
		return aqrRatingPersistence.countWithDynamicQuery(dynamicQuery);
	}

	/**
	 * Returns the number of rows that match the dynamic query.
	 *
	 * @param dynamicQuery the dynamic query
	 * @param projection the projection to apply to the query
	 * @return the number of rows that match the dynamic query
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public long dynamicQueryCount(DynamicQuery dynamicQuery,
		Projection projection) throws SystemException {
		return aqrRatingPersistence.countWithDynamicQuery(dynamicQuery,
			projection);
	}

	@Override
	public AQRRating fetchAQRRating(long aqrId) throws SystemException {
		return aqrRatingPersistence.fetchByPrimaryKey(aqrId);
	}

	/**
	 * Returns the a q r rating with the primary key.
	 *
	 * @param aqrId the primary key of the a q r rating
	 * @return the a q r rating
	 * @throws PortalException if a a q r rating with the primary key could not be found
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public AQRRating getAQRRating(long aqrId)
		throws PortalException, SystemException {
		return aqrRatingPersistence.findByPrimaryKey(aqrId);
	}

	@Override
	public PersistedModel getPersistedModel(Serializable primaryKeyObj)
		throws PortalException, SystemException {
		return aqrRatingPersistence.findByPrimaryKey(primaryKeyObj);
	}

	/**
	 * Returns a range of all the a q r ratings.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link at.meduni.liferay.portlet.rdconnect.model.impl.AQRRatingModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param start the lower bound of the range of a q r ratings
	 * @param end the upper bound of the range of a q r ratings (not inclusive)
	 * @return the range of a q r ratings
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public List<AQRRating> getAQRRatings(int start, int end)
		throws SystemException {
		return aqrRatingPersistence.findAll(start, end);
	}

	/**
	 * Returns the number of a q r ratings.
	 *
	 * @return the number of a q r ratings
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public int getAQRRatingsCount() throws SystemException {
		return aqrRatingPersistence.countAll();
	}

	/**
	 * Updates the a q r rating in the database or adds it if it does not yet exist. Also notifies the appropriate model listeners.
	 *
	 * @param aqrRating the a q r rating
	 * @return the a q r rating that was updated
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.REINDEX)
	@Override
	public AQRRating updateAQRRating(AQRRating aqrRating)
		throws SystemException {
		return aqrRatingPersistence.update(aqrRating);
	}

	/**
	 * Returns the a q r rating local service.
	 *
	 * @return the a q r rating local service
	 */
	public at.meduni.liferay.portlet.rdconnect.service.AQRRatingLocalService getAQRRatingLocalService() {
		return aqrRatingLocalService;
	}

	/**
	 * Sets the a q r rating local service.
	 *
	 * @param aqrRatingLocalService the a q r rating local service
	 */
	public void setAQRRatingLocalService(
		at.meduni.liferay.portlet.rdconnect.service.AQRRatingLocalService aqrRatingLocalService) {
		this.aqrRatingLocalService = aqrRatingLocalService;
	}

	/**
	 * Returns the a q r rating persistence.
	 *
	 * @return the a q r rating persistence
	 */
	public AQRRatingPersistence getAQRRatingPersistence() {
		return aqrRatingPersistence;
	}

	/**
	 * Sets the a q r rating persistence.
	 *
	 * @param aqrRatingPersistence the a q r rating persistence
	 */
	public void setAQRRatingPersistence(
		AQRRatingPersistence aqrRatingPersistence) {
		this.aqrRatingPersistence = aqrRatingPersistence;
	}

	/**
	 * Returns the candidate local service.
	 *
	 * @return the candidate local service
	 */
	public at.meduni.liferay.portlet.rdconnect.service.CandidateLocalService getCandidateLocalService() {
		return candidateLocalService;
	}

	/**
	 * Sets the candidate local service.
	 *
	 * @param candidateLocalService the candidate local service
	 */
	public void setCandidateLocalService(
		at.meduni.liferay.portlet.rdconnect.service.CandidateLocalService candidateLocalService) {
		this.candidateLocalService = candidateLocalService;
	}

	/**
	 * Returns the candidate persistence.
	 *
	 * @return the candidate persistence
	 */
	public CandidatePersistence getCandidatePersistence() {
		return candidatePersistence;
	}

	/**
	 * Sets the candidate persistence.
	 *
	 * @param candidatePersistence the candidate persistence
	 */
	public void setCandidatePersistence(
		CandidatePersistence candidatePersistence) {
		this.candidatePersistence = candidatePersistence;
	}

	/**
	 * Returns the master candidate local service.
	 *
	 * @return the master candidate local service
	 */
	public at.meduni.liferay.portlet.rdconnect.service.MasterCandidateLocalService getMasterCandidateLocalService() {
		return masterCandidateLocalService;
	}

	/**
	 * Sets the master candidate local service.
	 *
	 * @param masterCandidateLocalService the master candidate local service
	 */
	public void setMasterCandidateLocalService(
		at.meduni.liferay.portlet.rdconnect.service.MasterCandidateLocalService masterCandidateLocalService) {
		this.masterCandidateLocalService = masterCandidateLocalService;
	}

	/**
	 * Returns the master candidate persistence.
	 *
	 * @return the master candidate persistence
	 */
	public MasterCandidatePersistence getMasterCandidatePersistence() {
		return masterCandidatePersistence;
	}

	/**
	 * Sets the master candidate persistence.
	 *
	 * @param masterCandidatePersistence the master candidate persistence
	 */
	public void setMasterCandidatePersistence(
		MasterCandidatePersistence masterCandidatePersistence) {
		this.masterCandidatePersistence = masterCandidatePersistence;
	}

	/**
	 * Returns the master candidate link candidate local service.
	 *
	 * @return the master candidate link candidate local service
	 */
	public at.meduni.liferay.portlet.rdconnect.service.MasterCandidateLinkCandidateLocalService getMasterCandidateLinkCandidateLocalService() {
		return masterCandidateLinkCandidateLocalService;
	}

	/**
	 * Sets the master candidate link candidate local service.
	 *
	 * @param masterCandidateLinkCandidateLocalService the master candidate link candidate local service
	 */
	public void setMasterCandidateLinkCandidateLocalService(
		at.meduni.liferay.portlet.rdconnect.service.MasterCandidateLinkCandidateLocalService masterCandidateLinkCandidateLocalService) {
		this.masterCandidateLinkCandidateLocalService = masterCandidateLinkCandidateLocalService;
	}

	/**
	 * Returns the master candidate link candidate persistence.
	 *
	 * @return the master candidate link candidate persistence
	 */
	public MasterCandidateLinkCandidatePersistence getMasterCandidateLinkCandidatePersistence() {
		return masterCandidateLinkCandidatePersistence;
	}

	/**
	 * Sets the master candidate link candidate persistence.
	 *
	 * @param masterCandidateLinkCandidatePersistence the master candidate link candidate persistence
	 */
	public void setMasterCandidateLinkCandidatePersistence(
		MasterCandidateLinkCandidatePersistence masterCandidateLinkCandidatePersistence) {
		this.masterCandidateLinkCandidatePersistence = masterCandidateLinkCandidatePersistence;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.service.CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.service.CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public com.liferay.portal.service.ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		com.liferay.portal.service.ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public com.liferay.portal.service.UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(
		com.liferay.portal.service.UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user remote service.
	 *
	 * @return the user remote service
	 */
	public com.liferay.portal.service.UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(
		com.liferay.portal.service.UserService userService) {
		this.userService = userService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
		Class<?> clazz = getClass();

		_classLoader = clazz.getClassLoader();

		PersistedModelLocalServiceRegistryUtil.register("at.meduni.liferay.portlet.rdconnect.model.AQRRating",
			aqrRatingLocalService);
	}

	public void destroy() {
		PersistedModelLocalServiceRegistryUtil.unregister(
			"at.meduni.liferay.portlet.rdconnect.model.AQRRating");
	}

	/**
	 * Returns the Spring bean ID for this bean.
	 *
	 * @return the Spring bean ID for this bean
	 */
	@Override
	public String getBeanIdentifier() {
		return _beanIdentifier;
	}

	/**
	 * Sets the Spring bean ID for this bean.
	 *
	 * @param beanIdentifier the Spring bean ID for this bean
	 */
	@Override
	public void setBeanIdentifier(String beanIdentifier) {
		_beanIdentifier = beanIdentifier;
	}

	@Override
	public Object invokeMethod(String name, String[] parameterTypes,
		Object[] arguments) throws Throwable {
		Thread currentThread = Thread.currentThread();

		ClassLoader contextClassLoader = currentThread.getContextClassLoader();

		if (contextClassLoader != _classLoader) {
			currentThread.setContextClassLoader(_classLoader);
		}

		try {
			return _clpInvoker.invokeMethod(name, parameterTypes, arguments);
		}
		finally {
			if (contextClassLoader != _classLoader) {
				currentThread.setContextClassLoader(contextClassLoader);
			}
		}
	}

	protected Class<?> getModelClass() {
		return AQRRating.class;
	}

	protected String getModelClassName() {
		return AQRRating.class.getName();
	}

	/**
	 * Performs an SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) throws SystemException {
		try {
			DataSource dataSource = aqrRatingPersistence.getDataSource();

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql, new int[0]);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = at.meduni.liferay.portlet.rdconnect.service.AQRRatingLocalService.class)
	protected at.meduni.liferay.portlet.rdconnect.service.AQRRatingLocalService aqrRatingLocalService;
	@BeanReference(type = AQRRatingPersistence.class)
	protected AQRRatingPersistence aqrRatingPersistence;
	@BeanReference(type = at.meduni.liferay.portlet.rdconnect.service.CandidateLocalService.class)
	protected at.meduni.liferay.portlet.rdconnect.service.CandidateLocalService candidateLocalService;
	@BeanReference(type = CandidatePersistence.class)
	protected CandidatePersistence candidatePersistence;
	@BeanReference(type = at.meduni.liferay.portlet.rdconnect.service.MasterCandidateLocalService.class)
	protected at.meduni.liferay.portlet.rdconnect.service.MasterCandidateLocalService masterCandidateLocalService;
	@BeanReference(type = MasterCandidatePersistence.class)
	protected MasterCandidatePersistence masterCandidatePersistence;
	@BeanReference(type = at.meduni.liferay.portlet.rdconnect.service.MasterCandidateLinkCandidateLocalService.class)
	protected at.meduni.liferay.portlet.rdconnect.service.MasterCandidateLinkCandidateLocalService masterCandidateLinkCandidateLocalService;
	@BeanReference(type = MasterCandidateLinkCandidatePersistence.class)
	protected MasterCandidateLinkCandidatePersistence masterCandidateLinkCandidatePersistence;
	@BeanReference(type = com.liferay.counter.service.CounterLocalService.class)
	protected com.liferay.counter.service.CounterLocalService counterLocalService;
	@BeanReference(type = com.liferay.portal.service.ResourceLocalService.class)
	protected com.liferay.portal.service.ResourceLocalService resourceLocalService;
	@BeanReference(type = com.liferay.portal.service.UserLocalService.class)
	protected com.liferay.portal.service.UserLocalService userLocalService;
	@BeanReference(type = com.liferay.portal.service.UserService.class)
	protected com.liferay.portal.service.UserService userService;
	@BeanReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
	private String _beanIdentifier;
	private ClassLoader _classLoader;
	private AQRRatingLocalServiceClpInvoker _clpInvoker = new AQRRatingLocalServiceClpInvoker();
}