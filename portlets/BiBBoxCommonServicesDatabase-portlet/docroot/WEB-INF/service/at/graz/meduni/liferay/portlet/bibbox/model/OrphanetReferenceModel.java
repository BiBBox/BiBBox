/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package at.graz.meduni.liferay.portlet.bibbox.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

/**
 * The base model interface for the OrphanetReference service. Represents a row in the &quot;ontologies.orphanetreference&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link at.graz.meduni.liferay.portlet.bibbox.model.impl.OrphanetReferenceModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link at.graz.meduni.liferay.portlet.bibbox.model.impl.OrphanetReferenceImpl}.
 * </p>
 *
 * @author reihsr
 * @see OrphanetReference
 * @see at.graz.meduni.liferay.portlet.bibbox.model.impl.OrphanetReferenceImpl
 * @see at.graz.meduni.liferay.portlet.bibbox.model.impl.OrphanetReferenceModelImpl
 * @generated
 */
public interface OrphanetReferenceModel extends BaseModel<OrphanetReference> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a orphanet reference model instance should use the {@link OrphanetReference} interface instead.
	 */

	/**
	 * Returns the primary key of this orphanet reference.
	 *
	 * @return the primary key of this orphanet reference
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this orphanet reference.
	 *
	 * @param primaryKey the primary key of this orphanet reference
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the orphanetreference ID of this orphanet reference.
	 *
	 * @return the orphanetreference ID of this orphanet reference
	 */
	public long getOrphanetreferenceId();

	/**
	 * Sets the orphanetreference ID of this orphanet reference.
	 *
	 * @param orphanetreferenceId the orphanetreference ID of this orphanet reference
	 */
	public void setOrphanetreferenceId(long orphanetreferenceId);

	/**
	 * Returns the orphanetdisorder ID of this orphanet reference.
	 *
	 * @return the orphanetdisorder ID of this orphanet reference
	 */
	public long getOrphanetdisorderId();

	/**
	 * Sets the orphanetdisorder ID of this orphanet reference.
	 *
	 * @param orphanetdisorderId the orphanetdisorder ID of this orphanet reference
	 */
	public void setOrphanetdisorderId(long orphanetdisorderId);

	/**
	 * Returns the source of this orphanet reference.
	 *
	 * @return the source of this orphanet reference
	 */
	@AutoEscape
	public String getSource();

	/**
	 * Sets the source of this orphanet reference.
	 *
	 * @param source the source of this orphanet reference
	 */
	public void setSource(String source);

	/**
	 * Returns the reference of this orphanet reference.
	 *
	 * @return the reference of this orphanet reference
	 */
	@AutoEscape
	public String getReference();

	/**
	 * Sets the reference of this orphanet reference.
	 *
	 * @param reference the reference of this orphanet reference
	 */
	public void setReference(String reference);

	/**
	 * Returns the disordermappingrelation of this orphanet reference.
	 *
	 * @return the disordermappingrelation of this orphanet reference
	 */
	public long getDisordermappingrelation();

	/**
	 * Sets the disordermappingrelation of this orphanet reference.
	 *
	 * @param disordermappingrelation the disordermappingrelation of this orphanet reference
	 */
	public void setDisordermappingrelation(long disordermappingrelation);

	/**
	 * Returns the disordermappingrelationorphanumber of this orphanet reference.
	 *
	 * @return the disordermappingrelationorphanumber of this orphanet reference
	 */
	public long getDisordermappingrelationorphanumber();

	/**
	 * Sets the disordermappingrelationorphanumber of this orphanet reference.
	 *
	 * @param disordermappingrelationorphanumber the disordermappingrelationorphanumber of this orphanet reference
	 */
	public void setDisordermappingrelationorphanumber(
		long disordermappingrelationorphanumber);

	/**
	 * Returns the disordermappingrelationname of this orphanet reference.
	 *
	 * @return the disordermappingrelationname of this orphanet reference
	 */
	@AutoEscape
	public String getDisordermappingrelationname();

	/**
	 * Sets the disordermappingrelationname of this orphanet reference.
	 *
	 * @param disordermappingrelationname the disordermappingrelationname of this orphanet reference
	 */
	public void setDisordermappingrelationname(
		String disordermappingrelationname);

	/**
	 * Returns the disordermappingicdrelation of this orphanet reference.
	 *
	 * @return the disordermappingicdrelation of this orphanet reference
	 */
	public long getDisordermappingicdrelation();

	/**
	 * Sets the disordermappingicdrelation of this orphanet reference.
	 *
	 * @param disordermappingicdrelation the disordermappingicdrelation of this orphanet reference
	 */
	public void setDisordermappingicdrelation(long disordermappingicdrelation);

	/**
	 * Returns the disordermappingicdrelationorphanumber of this orphanet reference.
	 *
	 * @return the disordermappingicdrelationorphanumber of this orphanet reference
	 */
	public long getDisordermappingicdrelationorphanumber();

	/**
	 * Sets the disordermappingicdrelationorphanumber of this orphanet reference.
	 *
	 * @param disordermappingicdrelationorphanumber the disordermappingicdrelationorphanumber of this orphanet reference
	 */
	public void setDisordermappingicdrelationorphanumber(
		long disordermappingicdrelationorphanumber);

	/**
	 * Returns the disordermappingicdrelationname of this orphanet reference.
	 *
	 * @return the disordermappingicdrelationname of this orphanet reference
	 */
	@AutoEscape
	public String getDisordermappingicdrelationname();

	/**
	 * Sets the disordermappingicdrelationname of this orphanet reference.
	 *
	 * @param disordermappingicdrelationname the disordermappingicdrelationname of this orphanet reference
	 */
	public void setDisordermappingicdrelationname(
		String disordermappingicdrelationname);

	/**
	 * Returns the disordermappingvalidationstatus of this orphanet reference.
	 *
	 * @return the disordermappingvalidationstatus of this orphanet reference
	 */
	public long getDisordermappingvalidationstatus();

	/**
	 * Sets the disordermappingvalidationstatus of this orphanet reference.
	 *
	 * @param disordermappingvalidationstatus the disordermappingvalidationstatus of this orphanet reference
	 */
	public void setDisordermappingvalidationstatus(
		long disordermappingvalidationstatus);

	/**
	 * Returns the disordermappingvalidationstatusorphanumber of this orphanet reference.
	 *
	 * @return the disordermappingvalidationstatusorphanumber of this orphanet reference
	 */
	public long getDisordermappingvalidationstatusorphanumber();

	/**
	 * Sets the disordermappingvalidationstatusorphanumber of this orphanet reference.
	 *
	 * @param disordermappingvalidationstatusorphanumber the disordermappingvalidationstatusorphanumber of this orphanet reference
	 */
	public void setDisordermappingvalidationstatusorphanumber(
		long disordermappingvalidationstatusorphanumber);

	/**
	 * Returns the disordermappingvalidationstatusname of this orphanet reference.
	 *
	 * @return the disordermappingvalidationstatusname of this orphanet reference
	 */
	@AutoEscape
	public String getDisordermappingvalidationstatusname();

	/**
	 * Sets the disordermappingvalidationstatusname of this orphanet reference.
	 *
	 * @param disordermappingvalidationstatusname the disordermappingvalidationstatusname of this orphanet reference
	 */
	public void setDisordermappingvalidationstatusname(
		String disordermappingvalidationstatusname);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(OrphanetReference orphanetReference);

	@Override
	public int hashCode();

	@Override
	public CacheModel<OrphanetReference> toCacheModel();

	@Override
	public OrphanetReference toEscapedModel();

	@Override
	public OrphanetReference toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}