/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package at.graz.meduni.liferay.portlet.bibbox.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

/**
 * The base model interface for the DDLConfiguration service. Represents a row in the &quot;bibboxcs.ddlconfiguration&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link at.graz.meduni.liferay.portlet.bibbox.model.impl.DDLConfigurationModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link at.graz.meduni.liferay.portlet.bibbox.model.impl.DDLConfigurationImpl}.
 * </p>
 *
 * @author reihsr
 * @see DDLConfiguration
 * @see at.graz.meduni.liferay.portlet.bibbox.model.impl.DDLConfigurationImpl
 * @see at.graz.meduni.liferay.portlet.bibbox.model.impl.DDLConfigurationModelImpl
 * @generated
 */
public interface DDLConfigurationModel extends BaseModel<DDLConfiguration> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a d d l configuration model instance should use the {@link DDLConfiguration} interface instead.
	 */

	/**
	 * Returns the primary key of this d d l configuration.
	 *
	 * @return the primary key of this d d l configuration
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this d d l configuration.
	 *
	 * @param primaryKey the primary key of this d d l configuration
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the ddlconfiguration ID of this d d l configuration.
	 *
	 * @return the ddlconfiguration ID of this d d l configuration
	 */
	public long getDdlconfigurationId();

	/**
	 * Sets the ddlconfiguration ID of this d d l configuration.
	 *
	 * @param ddlconfigurationId the ddlconfiguration ID of this d d l configuration
	 */
	public void setDdlconfigurationId(long ddlconfigurationId);

	/**
	 * Returns the ddmstructure ID of this d d l configuration.
	 *
	 * @return the ddmstructure ID of this d d l configuration
	 */
	public long getDdmstructureId();

	/**
	 * Sets the ddmstructure ID of this d d l configuration.
	 *
	 * @param ddmstructureId the ddmstructure ID of this d d l configuration
	 */
	public void setDdmstructureId(long ddmstructureId);

	/**
	 * Returns the fieldname of this d d l configuration.
	 *
	 * @return the fieldname of this d d l configuration
	 */
	@AutoEscape
	public String getFieldname();

	/**
	 * Sets the fieldname of this d d l configuration.
	 *
	 * @param fieldname the fieldname of this d d l configuration
	 */
	public void setFieldname(String fieldname);

	/**
	 * Returns the group of this d d l configuration.
	 *
	 * @return the group of this d d l configuration
	 */
	@AutoEscape
	public String getGroup();

	/**
	 * Sets the group of this d d l configuration.
	 *
	 * @param group the group of this d d l configuration
	 */
	public void setGroup(String group);

	/**
	 * Returns the display of this d d l configuration.
	 *
	 * @return the display of this d d l configuration
	 */
	public boolean getDisplay();

	/**
	 * Returns <code>true</code> if this d d l configuration is display.
	 *
	 * @return <code>true</code> if this d d l configuration is display; <code>false</code> otherwise
	 */
	public boolean isDisplay();

	/**
	 * Sets whether this d d l configuration is display.
	 *
	 * @param display the display of this d d l configuration
	 */
	public void setDisplay(boolean display);

	/**
	 * Returns the viewscript of this d d l configuration.
	 *
	 * @return the viewscript of this d d l configuration
	 */
	@AutoEscape
	public String getViewscript();

	/**
	 * Sets the viewscript of this d d l configuration.
	 *
	 * @param viewscript the viewscript of this d d l configuration
	 */
	public void setViewscript(String viewscript);

	/**
	 * Returns the displaytip of this d d l configuration.
	 *
	 * @return the displaytip of this d d l configuration
	 */
	@AutoEscape
	public String getDisplaytip();

	/**
	 * Sets the displaytip of this d d l configuration.
	 *
	 * @param displaytip the displaytip of this d d l configuration
	 */
	public void setDisplaytip(String displaytip);

	/**
	 * Returns the viewtitlecss of this d d l configuration.
	 *
	 * @return the viewtitlecss of this d d l configuration
	 */
	@AutoEscape
	public String getViewtitlecss();

	/**
	 * Sets the viewtitlecss of this d d l configuration.
	 *
	 * @param viewtitlecss the viewtitlecss of this d d l configuration
	 */
	public void setViewtitlecss(String viewtitlecss);

	/**
	 * Returns the viewvaluecss of this d d l configuration.
	 *
	 * @return the viewvaluecss of this d d l configuration
	 */
	@AutoEscape
	public String getViewvaluecss();

	/**
	 * Sets the viewvaluecss of this d d l configuration.
	 *
	 * @param viewvaluecss the viewvaluecss of this d d l configuration
	 */
	public void setViewvaluecss(String viewvaluecss);

	/**
	 * Returns the columwidth of this d d l configuration.
	 *
	 * @return the columwidth of this d d l configuration
	 */
	public long getColumwidth();

	/**
	 * Sets the columwidth of this d d l configuration.
	 *
	 * @param columwidth the columwidth of this d d l configuration
	 */
	public void setColumwidth(long columwidth);

	/**
	 * Returns the editscript of this d d l configuration.
	 *
	 * @return the editscript of this d d l configuration
	 */
	@AutoEscape
	public String getEditscript();

	/**
	 * Sets the editscript of this d d l configuration.
	 *
	 * @param editscript the editscript of this d d l configuration
	 */
	public void setEditscript(String editscript);

	/**
	 * Returns the edittip of this d d l configuration.
	 *
	 * @return the edittip of this d d l configuration
	 */
	@AutoEscape
	public String getEdittip();

	/**
	 * Sets the edittip of this d d l configuration.
	 *
	 * @param edittip the edittip of this d d l configuration
	 */
	public void setEdittip(String edittip);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(DDLConfiguration ddlConfiguration);

	@Override
	public int hashCode();

	@Override
	public CacheModel<DDLConfiguration> toCacheModel();

	@Override
	public DDLConfiguration toEscapedModel();

	@Override
	public DDLConfiguration toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}