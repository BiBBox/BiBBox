/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package at.graz.meduni.liferay.portlet.saat.service.base;

import at.graz.meduni.liferay.portlet.saat.model.ICD10;
import at.graz.meduni.liferay.portlet.saat.service.ICD10LocalService;
import at.graz.meduni.liferay.portlet.saat.service.persistence.DictionaryDictionaryLinkPersistence;
import at.graz.meduni.liferay.portlet.saat.service.persistence.DictionaryPersistence;
import at.graz.meduni.liferay.portlet.saat.service.persistence.ICD10Persistence;
import at.graz.meduni.liferay.portlet.saat.service.persistence.ICDO3Persistence;
import at.graz.meduni.liferay.portlet.saat.service.persistence.SCGPersistence;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.bean.IdentifiableBean;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.dao.orm.DynamicQuery;
import com.liferay.portal.kernel.dao.orm.DynamicQueryFactoryUtil;
import com.liferay.portal.kernel.dao.orm.Projection;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.search.Indexable;
import com.liferay.portal.kernel.search.IndexableType;
import com.liferay.portal.kernel.util.OrderByComparator;
import com.liferay.portal.model.PersistedModel;
import com.liferay.portal.service.BaseLocalServiceImpl;
import com.liferay.portal.service.PersistedModelLocalServiceRegistryUtil;
import com.liferay.portal.service.persistence.UserPersistence;

import java.io.Serializable;

import java.util.List;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the i c d10 local service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link at.graz.meduni.liferay.portlet.saat.service.impl.ICD10LocalServiceImpl}.
 * </p>
 *
 * @author reihsr
 * @see at.graz.meduni.liferay.portlet.saat.service.impl.ICD10LocalServiceImpl
 * @see at.graz.meduni.liferay.portlet.saat.service.ICD10LocalServiceUtil
 * @generated
 */
public abstract class ICD10LocalServiceBaseImpl extends BaseLocalServiceImpl
	implements ICD10LocalService, IdentifiableBean {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link at.graz.meduni.liferay.portlet.saat.service.ICD10LocalServiceUtil} to access the i c d10 local service.
	 */

	/**
	 * Adds the i c d10 to the database. Also notifies the appropriate model listeners.
	 *
	 * @param icd10 the i c d10
	 * @return the i c d10 that was added
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.REINDEX)
	@Override
	public ICD10 addICD10(ICD10 icd10) throws SystemException {
		icd10.setNew(true);

		return icd10Persistence.update(icd10);
	}

	/**
	 * Creates a new i c d10 with the primary key. Does not add the i c d10 to the database.
	 *
	 * @param icd10Id the primary key for the new i c d10
	 * @return the new i c d10
	 */
	@Override
	public ICD10 createICD10(long icd10Id) {
		return icd10Persistence.create(icd10Id);
	}

	/**
	 * Deletes the i c d10 with the primary key from the database. Also notifies the appropriate model listeners.
	 *
	 * @param icd10Id the primary key of the i c d10
	 * @return the i c d10 that was removed
	 * @throws PortalException if a i c d10 with the primary key could not be found
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.DELETE)
	@Override
	public ICD10 deleteICD10(long icd10Id)
		throws PortalException, SystemException {
		return icd10Persistence.remove(icd10Id);
	}

	/**
	 * Deletes the i c d10 from the database. Also notifies the appropriate model listeners.
	 *
	 * @param icd10 the i c d10
	 * @return the i c d10 that was removed
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.DELETE)
	@Override
	public ICD10 deleteICD10(ICD10 icd10) throws SystemException {
		return icd10Persistence.remove(icd10);
	}

	@Override
	public DynamicQuery dynamicQuery() {
		Class<?> clazz = getClass();

		return DynamicQueryFactoryUtil.forClass(ICD10.class,
			clazz.getClassLoader());
	}

	/**
	 * Performs a dynamic query on the database and returns the matching rows.
	 *
	 * @param dynamicQuery the dynamic query
	 * @return the matching rows
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	@SuppressWarnings("rawtypes")
	public List dynamicQuery(DynamicQuery dynamicQuery)
		throws SystemException {
		return icd10Persistence.findWithDynamicQuery(dynamicQuery);
	}

	/**
	 * Performs a dynamic query on the database and returns a range of the matching rows.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link at.graz.meduni.liferay.portlet.saat.model.impl.ICD10ModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param dynamicQuery the dynamic query
	 * @param start the lower bound of the range of model instances
	 * @param end the upper bound of the range of model instances (not inclusive)
	 * @return the range of matching rows
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	@SuppressWarnings("rawtypes")
	public List dynamicQuery(DynamicQuery dynamicQuery, int start, int end)
		throws SystemException {
		return icd10Persistence.findWithDynamicQuery(dynamicQuery, start, end);
	}

	/**
	 * Performs a dynamic query on the database and returns an ordered range of the matching rows.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link at.graz.meduni.liferay.portlet.saat.model.impl.ICD10ModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param dynamicQuery the dynamic query
	 * @param start the lower bound of the range of model instances
	 * @param end the upper bound of the range of model instances (not inclusive)
	 * @param orderByComparator the comparator to order the results by (optionally <code>null</code>)
	 * @return the ordered range of matching rows
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	@SuppressWarnings("rawtypes")
	public List dynamicQuery(DynamicQuery dynamicQuery, int start, int end,
		OrderByComparator orderByComparator) throws SystemException {
		return icd10Persistence.findWithDynamicQuery(dynamicQuery, start, end,
			orderByComparator);
	}

	/**
	 * Returns the number of rows that match the dynamic query.
	 *
	 * @param dynamicQuery the dynamic query
	 * @return the number of rows that match the dynamic query
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public long dynamicQueryCount(DynamicQuery dynamicQuery)
		throws SystemException {
		return icd10Persistence.countWithDynamicQuery(dynamicQuery);
	}

	/**
	 * Returns the number of rows that match the dynamic query.
	 *
	 * @param dynamicQuery the dynamic query
	 * @param projection the projection to apply to the query
	 * @return the number of rows that match the dynamic query
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public long dynamicQueryCount(DynamicQuery dynamicQuery,
		Projection projection) throws SystemException {
		return icd10Persistence.countWithDynamicQuery(dynamicQuery, projection);
	}

	@Override
	public ICD10 fetchICD10(long icd10Id) throws SystemException {
		return icd10Persistence.fetchByPrimaryKey(icd10Id);
	}

	/**
	 * Returns the i c d10 with the primary key.
	 *
	 * @param icd10Id the primary key of the i c d10
	 * @return the i c d10
	 * @throws PortalException if a i c d10 with the primary key could not be found
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public ICD10 getICD10(long icd10Id) throws PortalException, SystemException {
		return icd10Persistence.findByPrimaryKey(icd10Id);
	}

	@Override
	public PersistedModel getPersistedModel(Serializable primaryKeyObj)
		throws PortalException, SystemException {
		return icd10Persistence.findByPrimaryKey(primaryKeyObj);
	}

	/**
	 * Returns a range of all the i c d10s.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link at.graz.meduni.liferay.portlet.saat.model.impl.ICD10ModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param start the lower bound of the range of i c d10s
	 * @param end the upper bound of the range of i c d10s (not inclusive)
	 * @return the range of i c d10s
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public List<ICD10> getICD10s(int start, int end) throws SystemException {
		return icd10Persistence.findAll(start, end);
	}

	/**
	 * Returns the number of i c d10s.
	 *
	 * @return the number of i c d10s
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public int getICD10sCount() throws SystemException {
		return icd10Persistence.countAll();
	}

	/**
	 * Updates the i c d10 in the database or adds it if it does not yet exist. Also notifies the appropriate model listeners.
	 *
	 * @param icd10 the i c d10
	 * @return the i c d10 that was updated
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.REINDEX)
	@Override
	public ICD10 updateICD10(ICD10 icd10) throws SystemException {
		return icd10Persistence.update(icd10);
	}

	/**
	 * Returns the dictionary local service.
	 *
	 * @return the dictionary local service
	 */
	public at.graz.meduni.liferay.portlet.saat.service.DictionaryLocalService getDictionaryLocalService() {
		return dictionaryLocalService;
	}

	/**
	 * Sets the dictionary local service.
	 *
	 * @param dictionaryLocalService the dictionary local service
	 */
	public void setDictionaryLocalService(
		at.graz.meduni.liferay.portlet.saat.service.DictionaryLocalService dictionaryLocalService) {
		this.dictionaryLocalService = dictionaryLocalService;
	}

	/**
	 * Returns the dictionary remote service.
	 *
	 * @return the dictionary remote service
	 */
	public at.graz.meduni.liferay.portlet.saat.service.DictionaryService getDictionaryService() {
		return dictionaryService;
	}

	/**
	 * Sets the dictionary remote service.
	 *
	 * @param dictionaryService the dictionary remote service
	 */
	public void setDictionaryService(
		at.graz.meduni.liferay.portlet.saat.service.DictionaryService dictionaryService) {
		this.dictionaryService = dictionaryService;
	}

	/**
	 * Returns the dictionary persistence.
	 *
	 * @return the dictionary persistence
	 */
	public DictionaryPersistence getDictionaryPersistence() {
		return dictionaryPersistence;
	}

	/**
	 * Sets the dictionary persistence.
	 *
	 * @param dictionaryPersistence the dictionary persistence
	 */
	public void setDictionaryPersistence(
		DictionaryPersistence dictionaryPersistence) {
		this.dictionaryPersistence = dictionaryPersistence;
	}

	/**
	 * Returns the dictionary dictionary link local service.
	 *
	 * @return the dictionary dictionary link local service
	 */
	public at.graz.meduni.liferay.portlet.saat.service.DictionaryDictionaryLinkLocalService getDictionaryDictionaryLinkLocalService() {
		return dictionaryDictionaryLinkLocalService;
	}

	/**
	 * Sets the dictionary dictionary link local service.
	 *
	 * @param dictionaryDictionaryLinkLocalService the dictionary dictionary link local service
	 */
	public void setDictionaryDictionaryLinkLocalService(
		at.graz.meduni.liferay.portlet.saat.service.DictionaryDictionaryLinkLocalService dictionaryDictionaryLinkLocalService) {
		this.dictionaryDictionaryLinkLocalService = dictionaryDictionaryLinkLocalService;
	}

	/**
	 * Returns the dictionary dictionary link remote service.
	 *
	 * @return the dictionary dictionary link remote service
	 */
	public at.graz.meduni.liferay.portlet.saat.service.DictionaryDictionaryLinkService getDictionaryDictionaryLinkService() {
		return dictionaryDictionaryLinkService;
	}

	/**
	 * Sets the dictionary dictionary link remote service.
	 *
	 * @param dictionaryDictionaryLinkService the dictionary dictionary link remote service
	 */
	public void setDictionaryDictionaryLinkService(
		at.graz.meduni.liferay.portlet.saat.service.DictionaryDictionaryLinkService dictionaryDictionaryLinkService) {
		this.dictionaryDictionaryLinkService = dictionaryDictionaryLinkService;
	}

	/**
	 * Returns the dictionary dictionary link persistence.
	 *
	 * @return the dictionary dictionary link persistence
	 */
	public DictionaryDictionaryLinkPersistence getDictionaryDictionaryLinkPersistence() {
		return dictionaryDictionaryLinkPersistence;
	}

	/**
	 * Sets the dictionary dictionary link persistence.
	 *
	 * @param dictionaryDictionaryLinkPersistence the dictionary dictionary link persistence
	 */
	public void setDictionaryDictionaryLinkPersistence(
		DictionaryDictionaryLinkPersistence dictionaryDictionaryLinkPersistence) {
		this.dictionaryDictionaryLinkPersistence = dictionaryDictionaryLinkPersistence;
	}

	/**
	 * Returns the i c d10 local service.
	 *
	 * @return the i c d10 local service
	 */
	public at.graz.meduni.liferay.portlet.saat.service.ICD10LocalService getICD10LocalService() {
		return icd10LocalService;
	}

	/**
	 * Sets the i c d10 local service.
	 *
	 * @param icd10LocalService the i c d10 local service
	 */
	public void setICD10LocalService(
		at.graz.meduni.liferay.portlet.saat.service.ICD10LocalService icd10LocalService) {
		this.icd10LocalService = icd10LocalService;
	}

	/**
	 * Returns the i c d10 remote service.
	 *
	 * @return the i c d10 remote service
	 */
	public at.graz.meduni.liferay.portlet.saat.service.ICD10Service getICD10Service() {
		return icd10Service;
	}

	/**
	 * Sets the i c d10 remote service.
	 *
	 * @param icd10Service the i c d10 remote service
	 */
	public void setICD10Service(
		at.graz.meduni.liferay.portlet.saat.service.ICD10Service icd10Service) {
		this.icd10Service = icd10Service;
	}

	/**
	 * Returns the i c d10 persistence.
	 *
	 * @return the i c d10 persistence
	 */
	public ICD10Persistence getICD10Persistence() {
		return icd10Persistence;
	}

	/**
	 * Sets the i c d10 persistence.
	 *
	 * @param icd10Persistence the i c d10 persistence
	 */
	public void setICD10Persistence(ICD10Persistence icd10Persistence) {
		this.icd10Persistence = icd10Persistence;
	}

	/**
	 * Returns the i c d o3 local service.
	 *
	 * @return the i c d o3 local service
	 */
	public at.graz.meduni.liferay.portlet.saat.service.ICDO3LocalService getICDO3LocalService() {
		return icdo3LocalService;
	}

	/**
	 * Sets the i c d o3 local service.
	 *
	 * @param icdo3LocalService the i c d o3 local service
	 */
	public void setICDO3LocalService(
		at.graz.meduni.liferay.portlet.saat.service.ICDO3LocalService icdo3LocalService) {
		this.icdo3LocalService = icdo3LocalService;
	}

	/**
	 * Returns the i c d o3 remote service.
	 *
	 * @return the i c d o3 remote service
	 */
	public at.graz.meduni.liferay.portlet.saat.service.ICDO3Service getICDO3Service() {
		return icdo3Service;
	}

	/**
	 * Sets the i c d o3 remote service.
	 *
	 * @param icdo3Service the i c d o3 remote service
	 */
	public void setICDO3Service(
		at.graz.meduni.liferay.portlet.saat.service.ICDO3Service icdo3Service) {
		this.icdo3Service = icdo3Service;
	}

	/**
	 * Returns the i c d o3 persistence.
	 *
	 * @return the i c d o3 persistence
	 */
	public ICDO3Persistence getICDO3Persistence() {
		return icdo3Persistence;
	}

	/**
	 * Sets the i c d o3 persistence.
	 *
	 * @param icdo3Persistence the i c d o3 persistence
	 */
	public void setICDO3Persistence(ICDO3Persistence icdo3Persistence) {
		this.icdo3Persistence = icdo3Persistence;
	}

	/**
	 * Returns the s c g local service.
	 *
	 * @return the s c g local service
	 */
	public at.graz.meduni.liferay.portlet.saat.service.SCGLocalService getSCGLocalService() {
		return scgLocalService;
	}

	/**
	 * Sets the s c g local service.
	 *
	 * @param scgLocalService the s c g local service
	 */
	public void setSCGLocalService(
		at.graz.meduni.liferay.portlet.saat.service.SCGLocalService scgLocalService) {
		this.scgLocalService = scgLocalService;
	}

	/**
	 * Returns the s c g remote service.
	 *
	 * @return the s c g remote service
	 */
	public at.graz.meduni.liferay.portlet.saat.service.SCGService getSCGService() {
		return scgService;
	}

	/**
	 * Sets the s c g remote service.
	 *
	 * @param scgService the s c g remote service
	 */
	public void setSCGService(
		at.graz.meduni.liferay.portlet.saat.service.SCGService scgService) {
		this.scgService = scgService;
	}

	/**
	 * Returns the s c g persistence.
	 *
	 * @return the s c g persistence
	 */
	public SCGPersistence getSCGPersistence() {
		return scgPersistence;
	}

	/**
	 * Sets the s c g persistence.
	 *
	 * @param scgPersistence the s c g persistence
	 */
	public void setSCGPersistence(SCGPersistence scgPersistence) {
		this.scgPersistence = scgPersistence;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.service.CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.service.CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public com.liferay.portal.service.ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		com.liferay.portal.service.ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public com.liferay.portal.service.UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(
		com.liferay.portal.service.UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user remote service.
	 *
	 * @return the user remote service
	 */
	public com.liferay.portal.service.UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(
		com.liferay.portal.service.UserService userService) {
		this.userService = userService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
		Class<?> clazz = getClass();

		_classLoader = clazz.getClassLoader();

		PersistedModelLocalServiceRegistryUtil.register("at.graz.meduni.liferay.portlet.saat.model.ICD10",
			icd10LocalService);
	}

	public void destroy() {
		PersistedModelLocalServiceRegistryUtil.unregister(
			"at.graz.meduni.liferay.portlet.saat.model.ICD10");
	}

	/**
	 * Returns the Spring bean ID for this bean.
	 *
	 * @return the Spring bean ID for this bean
	 */
	@Override
	public String getBeanIdentifier() {
		return _beanIdentifier;
	}

	/**
	 * Sets the Spring bean ID for this bean.
	 *
	 * @param beanIdentifier the Spring bean ID for this bean
	 */
	@Override
	public void setBeanIdentifier(String beanIdentifier) {
		_beanIdentifier = beanIdentifier;
	}

	@Override
	public Object invokeMethod(String name, String[] parameterTypes,
		Object[] arguments) throws Throwable {
		Thread currentThread = Thread.currentThread();

		ClassLoader contextClassLoader = currentThread.getContextClassLoader();

		if (contextClassLoader != _classLoader) {
			currentThread.setContextClassLoader(_classLoader);
		}

		try {
			return _clpInvoker.invokeMethod(name, parameterTypes, arguments);
		}
		finally {
			if (contextClassLoader != _classLoader) {
				currentThread.setContextClassLoader(contextClassLoader);
			}
		}
	}

	protected Class<?> getModelClass() {
		return ICD10.class;
	}

	protected String getModelClassName() {
		return ICD10.class.getName();
	}

	/**
	 * Performs an SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) throws SystemException {
		try {
			DataSource dataSource = icd10Persistence.getDataSource();

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql, new int[0]);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = at.graz.meduni.liferay.portlet.saat.service.DictionaryLocalService.class)
	protected at.graz.meduni.liferay.portlet.saat.service.DictionaryLocalService dictionaryLocalService;
	@BeanReference(type = at.graz.meduni.liferay.portlet.saat.service.DictionaryService.class)
	protected at.graz.meduni.liferay.portlet.saat.service.DictionaryService dictionaryService;
	@BeanReference(type = DictionaryPersistence.class)
	protected DictionaryPersistence dictionaryPersistence;
	@BeanReference(type = at.graz.meduni.liferay.portlet.saat.service.DictionaryDictionaryLinkLocalService.class)
	protected at.graz.meduni.liferay.portlet.saat.service.DictionaryDictionaryLinkLocalService dictionaryDictionaryLinkLocalService;
	@BeanReference(type = at.graz.meduni.liferay.portlet.saat.service.DictionaryDictionaryLinkService.class)
	protected at.graz.meduni.liferay.portlet.saat.service.DictionaryDictionaryLinkService dictionaryDictionaryLinkService;
	@BeanReference(type = DictionaryDictionaryLinkPersistence.class)
	protected DictionaryDictionaryLinkPersistence dictionaryDictionaryLinkPersistence;
	@BeanReference(type = at.graz.meduni.liferay.portlet.saat.service.ICD10LocalService.class)
	protected at.graz.meduni.liferay.portlet.saat.service.ICD10LocalService icd10LocalService;
	@BeanReference(type = at.graz.meduni.liferay.portlet.saat.service.ICD10Service.class)
	protected at.graz.meduni.liferay.portlet.saat.service.ICD10Service icd10Service;
	@BeanReference(type = ICD10Persistence.class)
	protected ICD10Persistence icd10Persistence;
	@BeanReference(type = at.graz.meduni.liferay.portlet.saat.service.ICDO3LocalService.class)
	protected at.graz.meduni.liferay.portlet.saat.service.ICDO3LocalService icdo3LocalService;
	@BeanReference(type = at.graz.meduni.liferay.portlet.saat.service.ICDO3Service.class)
	protected at.graz.meduni.liferay.portlet.saat.service.ICDO3Service icdo3Service;
	@BeanReference(type = ICDO3Persistence.class)
	protected ICDO3Persistence icdo3Persistence;
	@BeanReference(type = at.graz.meduni.liferay.portlet.saat.service.SCGLocalService.class)
	protected at.graz.meduni.liferay.portlet.saat.service.SCGLocalService scgLocalService;
	@BeanReference(type = at.graz.meduni.liferay.portlet.saat.service.SCGService.class)
	protected at.graz.meduni.liferay.portlet.saat.service.SCGService scgService;
	@BeanReference(type = SCGPersistence.class)
	protected SCGPersistence scgPersistence;
	@BeanReference(type = com.liferay.counter.service.CounterLocalService.class)
	protected com.liferay.counter.service.CounterLocalService counterLocalService;
	@BeanReference(type = com.liferay.portal.service.ResourceLocalService.class)
	protected com.liferay.portal.service.ResourceLocalService resourceLocalService;
	@BeanReference(type = com.liferay.portal.service.UserLocalService.class)
	protected com.liferay.portal.service.UserLocalService userLocalService;
	@BeanReference(type = com.liferay.portal.service.UserService.class)
	protected com.liferay.portal.service.UserService userService;
	@BeanReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
	private String _beanIdentifier;
	private ClassLoader _classLoader;
	private ICD10LocalServiceClpInvoker _clpInvoker = new ICD10LocalServiceClpInvoker();
}