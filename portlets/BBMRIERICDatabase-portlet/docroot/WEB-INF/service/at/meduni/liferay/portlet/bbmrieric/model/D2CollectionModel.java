/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package at.meduni.liferay.portlet.bbmrieric.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.StagedGroupedModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the D2Collection service. Represents a row in the &quot;bbmrieric.d2collection&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link at.meduni.liferay.portlet.bbmrieric.model.impl.D2CollectionModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link at.meduni.liferay.portlet.bbmrieric.model.impl.D2CollectionImpl}.
 * </p>
 *
 * @author reihsr
 * @see D2Collection
 * @see at.meduni.liferay.portlet.bbmrieric.model.impl.D2CollectionImpl
 * @see at.meduni.liferay.portlet.bbmrieric.model.impl.D2CollectionModelImpl
 * @generated
 */
public interface D2CollectionModel extends BaseModel<D2Collection>,
	StagedGroupedModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a d2 collection model instance should use the {@link D2Collection} interface instead.
	 */

	/**
	 * Returns the primary key of this d2 collection.
	 *
	 * @return the primary key of this d2 collection
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this d2 collection.
	 *
	 * @param primaryKey the primary key of this d2 collection
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the uuid of this d2 collection.
	 *
	 * @return the uuid of this d2 collection
	 */
	@AutoEscape
	@Override
	public String getUuid();

	/**
	 * Sets the uuid of this d2 collection.
	 *
	 * @param uuid the uuid of this d2 collection
	 */
	@Override
	public void setUuid(String uuid);

	/**
	 * Returns the d2collection ID of this d2 collection.
	 *
	 * @return the d2collection ID of this d2 collection
	 */
	public long getD2collectionId();

	/**
	 * Sets the d2collection ID of this d2 collection.
	 *
	 * @param d2collectionId the d2collection ID of this d2 collection
	 */
	public void setD2collectionId(long d2collectionId);

	/**
	 * Returns the biobank ID of this d2 collection.
	 *
	 * @return the biobank ID of this d2 collection
	 */
	public long getBiobankId();

	/**
	 * Sets the biobank ID of this d2 collection.
	 *
	 * @param biobankId the biobank ID of this d2 collection
	 */
	public void setBiobankId(long biobankId);

	/**
	 * Returns the parentd2collection ID of this d2 collection.
	 *
	 * @return the parentd2collection ID of this d2 collection
	 */
	public long getParentd2collectionId();

	/**
	 * Sets the parentd2collection ID of this d2 collection.
	 *
	 * @param parentd2collectionId the parentd2collection ID of this d2 collection
	 */
	public void setParentd2collectionId(long parentd2collectionId);

	/**
	 * Returns the company ID of this d2 collection.
	 *
	 * @return the company ID of this d2 collection
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this d2 collection.
	 *
	 * @param companyId the company ID of this d2 collection
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the group ID of this d2 collection.
	 *
	 * @return the group ID of this d2 collection
	 */
	@Override
	public long getGroupId();

	/**
	 * Sets the group ID of this d2 collection.
	 *
	 * @param groupId the group ID of this d2 collection
	 */
	@Override
	public void setGroupId(long groupId);

	/**
	 * Returns the user ID of this d2 collection.
	 *
	 * @return the user ID of this d2 collection
	 */
	@Override
	public long getUserId();

	/**
	 * Sets the user ID of this d2 collection.
	 *
	 * @param userId the user ID of this d2 collection
	 */
	@Override
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this d2 collection.
	 *
	 * @return the user uuid of this d2 collection
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public String getUserUuid() throws SystemException;

	/**
	 * Sets the user uuid of this d2 collection.
	 *
	 * @param userUuid the user uuid of this d2 collection
	 */
	@Override
	public void setUserUuid(String userUuid);

	/**
	 * Returns the user name of this d2 collection.
	 *
	 * @return the user name of this d2 collection
	 */
	@AutoEscape
	@Override
	public String getUserName();

	/**
	 * Sets the user name of this d2 collection.
	 *
	 * @param userName the user name of this d2 collection
	 */
	@Override
	public void setUserName(String userName);

	/**
	 * Returns the create date of this d2 collection.
	 *
	 * @return the create date of this d2 collection
	 */
	@Override
	public Date getCreateDate();

	/**
	 * Sets the create date of this d2 collection.
	 *
	 * @param createDate the create date of this d2 collection
	 */
	@Override
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this d2 collection.
	 *
	 * @return the modified date of this d2 collection
	 */
	@Override
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this d2 collection.
	 *
	 * @param modifiedDate the modified date of this d2 collection
	 */
	@Override
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the updateuuid of this d2 collection.
	 *
	 * @return the updateuuid of this d2 collection
	 */
	@AutoEscape
	public String getUpdateuuid();

	/**
	 * Sets the updateuuid of this d2 collection.
	 *
	 * @param updateuuid the updateuuid of this d2 collection
	 */
	public void setUpdateuuid(String updateuuid);

	/**
	 * Returns the bbmricollection i d of this d2 collection.
	 *
	 * @return the bbmricollection i d of this d2 collection
	 */
	@AutoEscape
	public String getBbmricollectionID();

	/**
	 * Sets the bbmricollection i d of this d2 collection.
	 *
	 * @param bbmricollectionID the bbmricollection i d of this d2 collection
	 */
	public void setBbmricollectionID(String bbmricollectionID);

	/**
	 * Returns the bbmriparentcollection i d of this d2 collection.
	 *
	 * @return the bbmriparentcollection i d of this d2 collection
	 */
	@AutoEscape
	public String getBbmriparentcollectionID();

	/**
	 * Sets the bbmriparentcollection i d of this d2 collection.
	 *
	 * @param bbmriparentcollectionID the bbmriparentcollection i d of this d2 collection
	 */
	public void setBbmriparentcollectionID(String bbmriparentcollectionID);

	/**
	 * Returns the bbmribiobank i d of this d2 collection.
	 *
	 * @return the bbmribiobank i d of this d2 collection
	 */
	@AutoEscape
	public String getBbmribiobankID();

	/**
	 * Sets the bbmribiobank i d of this d2 collection.
	 *
	 * @param bbmribiobankID the bbmribiobank i d of this d2 collection
	 */
	public void setBbmribiobankID(String bbmribiobankID);

	/**
	 * Returns the collection name of this d2 collection.
	 *
	 * @return the collection name of this d2 collection
	 */
	@AutoEscape
	public String getCollectionName();

	/**
	 * Sets the collection name of this d2 collection.
	 *
	 * @param collectionName the collection name of this d2 collection
	 */
	public void setCollectionName(String collectionName);

	/**
	 * Returns the material stored d n a of this d2 collection.
	 *
	 * @return the material stored d n a of this d2 collection
	 */
	public boolean getMaterialStoredDNA();

	/**
	 * Returns <code>true</code> if this d2 collection is material stored d n a.
	 *
	 * @return <code>true</code> if this d2 collection is material stored d n a; <code>false</code> otherwise
	 */
	public boolean isMaterialStoredDNA();

	/**
	 * Sets whether this d2 collection is material stored d n a.
	 *
	 * @param materialStoredDNA the material stored d n a of this d2 collection
	 */
	public void setMaterialStoredDNA(boolean materialStoredDNA);

	/**
	 * Returns the material stored plasma of this d2 collection.
	 *
	 * @return the material stored plasma of this d2 collection
	 */
	public boolean getMaterialStoredPlasma();

	/**
	 * Returns <code>true</code> if this d2 collection is material stored plasma.
	 *
	 * @return <code>true</code> if this d2 collection is material stored plasma; <code>false</code> otherwise
	 */
	public boolean isMaterialStoredPlasma();

	/**
	 * Sets whether this d2 collection is material stored plasma.
	 *
	 * @param materialStoredPlasma the material stored plasma of this d2 collection
	 */
	public void setMaterialStoredPlasma(boolean materialStoredPlasma);

	/**
	 * Returns the material stored serum of this d2 collection.
	 *
	 * @return the material stored serum of this d2 collection
	 */
	public boolean getMaterialStoredSerum();

	/**
	 * Returns <code>true</code> if this d2 collection is material stored serum.
	 *
	 * @return <code>true</code> if this d2 collection is material stored serum; <code>false</code> otherwise
	 */
	public boolean isMaterialStoredSerum();

	/**
	 * Sets whether this d2 collection is material stored serum.
	 *
	 * @param materialStoredSerum the material stored serum of this d2 collection
	 */
	public void setMaterialStoredSerum(boolean materialStoredSerum);

	/**
	 * Returns the material stored urine of this d2 collection.
	 *
	 * @return the material stored urine of this d2 collection
	 */
	public boolean getMaterialStoredUrine();

	/**
	 * Returns <code>true</code> if this d2 collection is material stored urine.
	 *
	 * @return <code>true</code> if this d2 collection is material stored urine; <code>false</code> otherwise
	 */
	public boolean isMaterialStoredUrine();

	/**
	 * Sets whether this d2 collection is material stored urine.
	 *
	 * @param materialStoredUrine the material stored urine of this d2 collection
	 */
	public void setMaterialStoredUrine(boolean materialStoredUrine);

	/**
	 * Returns the material stored saliva of this d2 collection.
	 *
	 * @return the material stored saliva of this d2 collection
	 */
	public boolean getMaterialStoredSaliva();

	/**
	 * Returns <code>true</code> if this d2 collection is material stored saliva.
	 *
	 * @return <code>true</code> if this d2 collection is material stored saliva; <code>false</code> otherwise
	 */
	public boolean isMaterialStoredSaliva();

	/**
	 * Sets whether this d2 collection is material stored saliva.
	 *
	 * @param materialStoredSaliva the material stored saliva of this d2 collection
	 */
	public void setMaterialStoredSaliva(boolean materialStoredSaliva);

	/**
	 * Returns the material stored faeces of this d2 collection.
	 *
	 * @return the material stored faeces of this d2 collection
	 */
	public boolean getMaterialStoredFaeces();

	/**
	 * Returns <code>true</code> if this d2 collection is material stored faeces.
	 *
	 * @return <code>true</code> if this d2 collection is material stored faeces; <code>false</code> otherwise
	 */
	public boolean isMaterialStoredFaeces();

	/**
	 * Sets whether this d2 collection is material stored faeces.
	 *
	 * @param materialStoredFaeces the material stored faeces of this d2 collection
	 */
	public void setMaterialStoredFaeces(boolean materialStoredFaeces);

	/**
	 * Returns the material stored r n a of this d2 collection.
	 *
	 * @return the material stored r n a of this d2 collection
	 */
	public boolean getMaterialStoredRNA();

	/**
	 * Returns <code>true</code> if this d2 collection is material stored r n a.
	 *
	 * @return <code>true</code> if this d2 collection is material stored r n a; <code>false</code> otherwise
	 */
	public boolean isMaterialStoredRNA();

	/**
	 * Sets whether this d2 collection is material stored r n a.
	 *
	 * @param materialStoredRNA the material stored r n a of this d2 collection
	 */
	public void setMaterialStoredRNA(boolean materialStoredRNA);

	/**
	 * Returns the material stored blood of this d2 collection.
	 *
	 * @return the material stored blood of this d2 collection
	 */
	public boolean getMaterialStoredBlood();

	/**
	 * Returns <code>true</code> if this d2 collection is material stored blood.
	 *
	 * @return <code>true</code> if this d2 collection is material stored blood; <code>false</code> otherwise
	 */
	public boolean isMaterialStoredBlood();

	/**
	 * Sets whether this d2 collection is material stored blood.
	 *
	 * @param materialStoredBlood the material stored blood of this d2 collection
	 */
	public void setMaterialStoredBlood(boolean materialStoredBlood);

	/**
	 * Returns the material stored tissue frozen of this d2 collection.
	 *
	 * @return the material stored tissue frozen of this d2 collection
	 */
	public boolean getMaterialStoredTissueFrozen();

	/**
	 * Returns <code>true</code> if this d2 collection is material stored tissue frozen.
	 *
	 * @return <code>true</code> if this d2 collection is material stored tissue frozen; <code>false</code> otherwise
	 */
	public boolean isMaterialStoredTissueFrozen();

	/**
	 * Sets whether this d2 collection is material stored tissue frozen.
	 *
	 * @param materialStoredTissueFrozen the material stored tissue frozen of this d2 collection
	 */
	public void setMaterialStoredTissueFrozen(
		boolean materialStoredTissueFrozen);

	/**
	 * Returns the material stored tissue f f p e of this d2 collection.
	 *
	 * @return the material stored tissue f f p e of this d2 collection
	 */
	public boolean getMaterialStoredTissueFFPE();

	/**
	 * Returns <code>true</code> if this d2 collection is material stored tissue f f p e.
	 *
	 * @return <code>true</code> if this d2 collection is material stored tissue f f p e; <code>false</code> otherwise
	 */
	public boolean isMaterialStoredTissueFFPE();

	/**
	 * Sets whether this d2 collection is material stored tissue f f p e.
	 *
	 * @param materialStoredTissueFFPE the material stored tissue f f p e of this d2 collection
	 */
	public void setMaterialStoredTissueFFPE(boolean materialStoredTissueFFPE);

	/**
	 * Returns the material stored immortalized cell lines of this d2 collection.
	 *
	 * @return the material stored immortalized cell lines of this d2 collection
	 */
	public boolean getMaterialStoredImmortalizedCellLines();

	/**
	 * Returns <code>true</code> if this d2 collection is material stored immortalized cell lines.
	 *
	 * @return <code>true</code> if this d2 collection is material stored immortalized cell lines; <code>false</code> otherwise
	 */
	public boolean isMaterialStoredImmortalizedCellLines();

	/**
	 * Sets whether this d2 collection is material stored immortalized cell lines.
	 *
	 * @param materialStoredImmortalizedCellLines the material stored immortalized cell lines of this d2 collection
	 */
	public void setMaterialStoredImmortalizedCellLines(
		boolean materialStoredImmortalizedCellLines);

	/**
	 * Returns the material stored isolated pathogen of this d2 collection.
	 *
	 * @return the material stored isolated pathogen of this d2 collection
	 */
	public boolean getMaterialStoredIsolatedPathogen();

	/**
	 * Returns <code>true</code> if this d2 collection is material stored isolated pathogen.
	 *
	 * @return <code>true</code> if this d2 collection is material stored isolated pathogen; <code>false</code> otherwise
	 */
	public boolean isMaterialStoredIsolatedPathogen();

	/**
	 * Sets whether this d2 collection is material stored isolated pathogen.
	 *
	 * @param materialStoredIsolatedPathogen the material stored isolated pathogen of this d2 collection
	 */
	public void setMaterialStoredIsolatedPathogen(
		boolean materialStoredIsolatedPathogen);

	/**
	 * Returns the material stored other of this d2 collection.
	 *
	 * @return the material stored other of this d2 collection
	 */
	@AutoEscape
	public String getMaterialStoredOther();

	/**
	 * Sets the material stored other of this d2 collection.
	 *
	 * @param materialStoredOther the material stored other of this d2 collection
	 */
	public void setMaterialStoredOther(String materialStoredOther);

	/**
	 * Returns the collection type case control of this d2 collection.
	 *
	 * @return the collection type case control of this d2 collection
	 */
	public boolean getCollectionTypeCaseControl();

	/**
	 * Returns <code>true</code> if this d2 collection is collection type case control.
	 *
	 * @return <code>true</code> if this d2 collection is collection type case control; <code>false</code> otherwise
	 */
	public boolean isCollectionTypeCaseControl();

	/**
	 * Sets whether this d2 collection is collection type case control.
	 *
	 * @param collectionTypeCaseControl the collection type case control of this d2 collection
	 */
	public void setCollectionTypeCaseControl(boolean collectionTypeCaseControl);

	/**
	 * Returns the collection type cohort of this d2 collection.
	 *
	 * @return the collection type cohort of this d2 collection
	 */
	public boolean getCollectionTypeCohort();

	/**
	 * Returns <code>true</code> if this d2 collection is collection type cohort.
	 *
	 * @return <code>true</code> if this d2 collection is collection type cohort; <code>false</code> otherwise
	 */
	public boolean isCollectionTypeCohort();

	/**
	 * Sets whether this d2 collection is collection type cohort.
	 *
	 * @param collectionTypeCohort the collection type cohort of this d2 collection
	 */
	public void setCollectionTypeCohort(boolean collectionTypeCohort);

	/**
	 * Returns the collection type cross sectional of this d2 collection.
	 *
	 * @return the collection type cross sectional of this d2 collection
	 */
	public boolean getCollectionTypeCrossSectional();

	/**
	 * Returns <code>true</code> if this d2 collection is collection type cross sectional.
	 *
	 * @return <code>true</code> if this d2 collection is collection type cross sectional; <code>false</code> otherwise
	 */
	public boolean isCollectionTypeCrossSectional();

	/**
	 * Sets whether this d2 collection is collection type cross sectional.
	 *
	 * @param collectionTypeCrossSectional the collection type cross sectional of this d2 collection
	 */
	public void setCollectionTypeCrossSectional(
		boolean collectionTypeCrossSectional);

	/**
	 * Returns the collection type longitudinal of this d2 collection.
	 *
	 * @return the collection type longitudinal of this d2 collection
	 */
	public boolean getCollectionTypeLongitudinal();

	/**
	 * Returns <code>true</code> if this d2 collection is collection type longitudinal.
	 *
	 * @return <code>true</code> if this d2 collection is collection type longitudinal; <code>false</code> otherwise
	 */
	public boolean isCollectionTypeLongitudinal();

	/**
	 * Sets whether this d2 collection is collection type longitudinal.
	 *
	 * @param collectionTypeLongitudinal the collection type longitudinal of this d2 collection
	 */
	public void setCollectionTypeLongitudinal(
		boolean collectionTypeLongitudinal);

	/**
	 * Returns the collection type twin study of this d2 collection.
	 *
	 * @return the collection type twin study of this d2 collection
	 */
	public boolean getCollectionTypeTwinStudy();

	/**
	 * Returns <code>true</code> if this d2 collection is collection type twin study.
	 *
	 * @return <code>true</code> if this d2 collection is collection type twin study; <code>false</code> otherwise
	 */
	public boolean isCollectionTypeTwinStudy();

	/**
	 * Sets whether this d2 collection is collection type twin study.
	 *
	 * @param collectionTypeTwinStudy the collection type twin study of this d2 collection
	 */
	public void setCollectionTypeTwinStudy(boolean collectionTypeTwinStudy);

	/**
	 * Returns the collection type quality control of this d2 collection.
	 *
	 * @return the collection type quality control of this d2 collection
	 */
	public boolean getCollectionTypeQualityControl();

	/**
	 * Returns <code>true</code> if this d2 collection is collection type quality control.
	 *
	 * @return <code>true</code> if this d2 collection is collection type quality control; <code>false</code> otherwise
	 */
	public boolean isCollectionTypeQualityControl();

	/**
	 * Sets whether this d2 collection is collection type quality control.
	 *
	 * @param collectionTypeQualityControl the collection type quality control of this d2 collection
	 */
	public void setCollectionTypeQualityControl(
		boolean collectionTypeQualityControl);

	/**
	 * Returns the collection type population based of this d2 collection.
	 *
	 * @return the collection type population based of this d2 collection
	 */
	public boolean getCollectionTypePopulationBased();

	/**
	 * Returns <code>true</code> if this d2 collection is collection type population based.
	 *
	 * @return <code>true</code> if this d2 collection is collection type population based; <code>false</code> otherwise
	 */
	public boolean isCollectionTypePopulationBased();

	/**
	 * Sets whether this d2 collection is collection type population based.
	 *
	 * @param collectionTypePopulationBased the collection type population based of this d2 collection
	 */
	public void setCollectionTypePopulationBased(
		boolean collectionTypePopulationBased);

	/**
	 * Returns the collection type disease specific of this d2 collection.
	 *
	 * @return the collection type disease specific of this d2 collection
	 */
	public boolean getCollectionTypeDiseaseSpecific();

	/**
	 * Returns <code>true</code> if this d2 collection is collection type disease specific.
	 *
	 * @return <code>true</code> if this d2 collection is collection type disease specific; <code>false</code> otherwise
	 */
	public boolean isCollectionTypeDiseaseSpecific();

	/**
	 * Sets whether this d2 collection is collection type disease specific.
	 *
	 * @param collectionTypeDiseaseSpecific the collection type disease specific of this d2 collection
	 */
	public void setCollectionTypeDiseaseSpecific(
		boolean collectionTypeDiseaseSpecific);

	/**
	 * Returns the collection type birth cohort of this d2 collection.
	 *
	 * @return the collection type birth cohort of this d2 collection
	 */
	public boolean getCollectionTypeBirthCohort();

	/**
	 * Returns <code>true</code> if this d2 collection is collection type birth cohort.
	 *
	 * @return <code>true</code> if this d2 collection is collection type birth cohort; <code>false</code> otherwise
	 */
	public boolean isCollectionTypeBirthCohort();

	/**
	 * Sets whether this d2 collection is collection type birth cohort.
	 *
	 * @param collectionTypeBirthCohort the collection type birth cohort of this d2 collection
	 */
	public void setCollectionTypeBirthCohort(boolean collectionTypeBirthCohort);

	/**
	 * Returns the collection type other of this d2 collection.
	 *
	 * @return the collection type other of this d2 collection
	 */
	@AutoEscape
	public String getCollectionTypeOther();

	/**
	 * Sets the collection type other of this d2 collection.
	 *
	 * @param collectionTypeOther the collection type other of this d2 collection
	 */
	public void setCollectionTypeOther(String collectionTypeOther);

	/**
	 * Returns the collection order of magnitude of this d2 collection.
	 *
	 * @return the collection order of magnitude of this d2 collection
	 */
	public long getCollectionOrderOfMagnitude();

	/**
	 * Sets the collection order of magnitude of this d2 collection.
	 *
	 * @param collectionOrderOfMagnitude the collection order of magnitude of this d2 collection
	 */
	public void setCollectionOrderOfMagnitude(long collectionOrderOfMagnitude);

	/**
	 * Returns the bioresource reference of this d2 collection.
	 *
	 * @return the bioresource reference of this d2 collection
	 */
	@AutoEscape
	public String getBioresourceReference();

	/**
	 * Sets the bioresource reference of this d2 collection.
	 *
	 * @param bioresourceReference the bioresource reference of this d2 collection
	 */
	public void setBioresourceReference(String bioresourceReference);

	/**
	 * Returns the contact i d ref of this d2 collection.
	 *
	 * @return the contact i d ref of this d2 collection
	 */
	@AutoEscape
	public String getContactIDRef();

	/**
	 * Sets the contact i d ref of this d2 collection.
	 *
	 * @param contactIDRef the contact i d ref of this d2 collection
	 */
	public void setContactIDRef(String contactIDRef);

	/**
	 * Returns the contact priority of this d2 collection.
	 *
	 * @return the contact priority of this d2 collection
	 */
	public long getContactPriority();

	/**
	 * Sets the contact priority of this d2 collection.
	 *
	 * @param contactPriority the contact priority of this d2 collection
	 */
	public void setContactPriority(long contactPriority);

	/**
	 * Returns the biobank network i d ref of this d2 collection.
	 *
	 * @return the biobank network i d ref of this d2 collection
	 */
	@AutoEscape
	public String getBiobankNetworkIDRef();

	/**
	 * Sets the biobank network i d ref of this d2 collection.
	 *
	 * @param biobankNetworkIDRef the biobank network i d ref of this d2 collection
	 */
	public void setBiobankNetworkIDRef(String biobankNetworkIDRef);

	/**
	 * Returns the geo latitude of this d2 collection.
	 *
	 * @return the geo latitude of this d2 collection
	 */
	@AutoEscape
	public String getGeoLatitude();

	/**
	 * Sets the geo latitude of this d2 collection.
	 *
	 * @param geoLatitude the geo latitude of this d2 collection
	 */
	public void setGeoLatitude(String geoLatitude);

	/**
	 * Returns the geo longitude of this d2 collection.
	 *
	 * @return the geo longitude of this d2 collection
	 */
	@AutoEscape
	public String getGeoLongitude();

	/**
	 * Sets the geo longitude of this d2 collection.
	 *
	 * @param geoLongitude the geo longitude of this d2 collection
	 */
	public void setGeoLongitude(String geoLongitude);

	/**
	 * Returns the collaboration partners commercial of this d2 collection.
	 *
	 * @return the collaboration partners commercial of this d2 collection
	 */
	public boolean getCollaborationPartnersCommercial();

	/**
	 * Returns <code>true</code> if this d2 collection is collaboration partners commercial.
	 *
	 * @return <code>true</code> if this d2 collection is collaboration partners commercial; <code>false</code> otherwise
	 */
	public boolean isCollaborationPartnersCommercial();

	/**
	 * Sets whether this d2 collection is collaboration partners commercial.
	 *
	 * @param collaborationPartnersCommercial the collaboration partners commercial of this d2 collection
	 */
	public void setCollaborationPartnersCommercial(
		boolean collaborationPartnersCommercial);

	/**
	 * Returns the collaboration partners nonforprofit of this d2 collection.
	 *
	 * @return the collaboration partners nonforprofit of this d2 collection
	 */
	public boolean getCollaborationPartnersNonforprofit();

	/**
	 * Returns <code>true</code> if this d2 collection is collaboration partners nonforprofit.
	 *
	 * @return <code>true</code> if this d2 collection is collaboration partners nonforprofit; <code>false</code> otherwise
	 */
	public boolean isCollaborationPartnersNonforprofit();

	/**
	 * Sets whether this d2 collection is collaboration partners nonforprofit.
	 *
	 * @param collaborationPartnersNonforprofit the collaboration partners nonforprofit of this d2 collection
	 */
	public void setCollaborationPartnersNonforprofit(
		boolean collaborationPartnersNonforprofit);

	/**
	 * Returns the collection acronym of this d2 collection.
	 *
	 * @return the collection acronym of this d2 collection
	 */
	@AutoEscape
	public String getCollectionAcronym();

	/**
	 * Sets the collection acronym of this d2 collection.
	 *
	 * @param collectionAcronym the collection acronym of this d2 collection
	 */
	public void setCollectionAcronym(String collectionAcronym);

	/**
	 * Returns the collection description of this d2 collection.
	 *
	 * @return the collection description of this d2 collection
	 */
	@AutoEscape
	public String getCollectionDescription();

	/**
	 * Sets the collection description of this d2 collection.
	 *
	 * @param collectionDescription the collection description of this d2 collection
	 */
	public void setCollectionDescription(String collectionDescription);

	/**
	 * Returns the collection sex male of this d2 collection.
	 *
	 * @return the collection sex male of this d2 collection
	 */
	public boolean getCollectionSexMale();

	/**
	 * Returns <code>true</code> if this d2 collection is collection sex male.
	 *
	 * @return <code>true</code> if this d2 collection is collection sex male; <code>false</code> otherwise
	 */
	public boolean isCollectionSexMale();

	/**
	 * Sets whether this d2 collection is collection sex male.
	 *
	 * @param collectionSexMale the collection sex male of this d2 collection
	 */
	public void setCollectionSexMale(boolean collectionSexMale);

	/**
	 * Returns the collection sex female of this d2 collection.
	 *
	 * @return the collection sex female of this d2 collection
	 */
	public boolean getCollectionSexFemale();

	/**
	 * Returns <code>true</code> if this d2 collection is collection sex female.
	 *
	 * @return <code>true</code> if this d2 collection is collection sex female; <code>false</code> otherwise
	 */
	public boolean isCollectionSexFemale();

	/**
	 * Sets whether this d2 collection is collection sex female.
	 *
	 * @param collectionSexFemale the collection sex female of this d2 collection
	 */
	public void setCollectionSexFemale(boolean collectionSexFemale);

	/**
	 * Returns the collection sex unknown of this d2 collection.
	 *
	 * @return the collection sex unknown of this d2 collection
	 */
	public boolean getCollectionSexUnknown();

	/**
	 * Returns <code>true</code> if this d2 collection is collection sex unknown.
	 *
	 * @return <code>true</code> if this d2 collection is collection sex unknown; <code>false</code> otherwise
	 */
	public boolean isCollectionSexUnknown();

	/**
	 * Sets whether this d2 collection is collection sex unknown.
	 *
	 * @param collectionSexUnknown the collection sex unknown of this d2 collection
	 */
	public void setCollectionSexUnknown(boolean collectionSexUnknown);

	/**
	 * Returns the collection sex undiferrentiated of this d2 collection.
	 *
	 * @return the collection sex undiferrentiated of this d2 collection
	 */
	public boolean getCollectionSexUndiferrentiated();

	/**
	 * Returns <code>true</code> if this d2 collection is collection sex undiferrentiated.
	 *
	 * @return <code>true</code> if this d2 collection is collection sex undiferrentiated; <code>false</code> otherwise
	 */
	public boolean isCollectionSexUndiferrentiated();

	/**
	 * Sets whether this d2 collection is collection sex undiferrentiated.
	 *
	 * @param collectionSexUndiferrentiated the collection sex undiferrentiated of this d2 collection
	 */
	public void setCollectionSexUndiferrentiated(
		boolean collectionSexUndiferrentiated);

	/**
	 * Returns the collection age low of this d2 collection.
	 *
	 * @return the collection age low of this d2 collection
	 */
	public long getCollectionAgeLow();

	/**
	 * Sets the collection age low of this d2 collection.
	 *
	 * @param collectionAgeLow the collection age low of this d2 collection
	 */
	public void setCollectionAgeLow(long collectionAgeLow);

	/**
	 * Returns the collection age high of this d2 collection.
	 *
	 * @return the collection age high of this d2 collection
	 */
	public long getCollectionAgeHigh();

	/**
	 * Sets the collection age high of this d2 collection.
	 *
	 * @param collectionAgeHigh the collection age high of this d2 collection
	 */
	public void setCollectionAgeHigh(long collectionAgeHigh);

	/**
	 * Returns the collection age unit of this d2 collection.
	 *
	 * @return the collection age unit of this d2 collection
	 */
	@AutoEscape
	public String getCollectionAgeUnit();

	/**
	 * Sets the collection age unit of this d2 collection.
	 *
	 * @param collectionAgeUnit the collection age unit of this d2 collection
	 */
	public void setCollectionAgeUnit(String collectionAgeUnit);

	/**
	 * Returns the collection available biological samples of this d2 collection.
	 *
	 * @return the collection available biological samples of this d2 collection
	 */
	public boolean getCollectionAvailableBiologicalSamples();

	/**
	 * Returns <code>true</code> if this d2 collection is collection available biological samples.
	 *
	 * @return <code>true</code> if this d2 collection is collection available biological samples; <code>false</code> otherwise
	 */
	public boolean isCollectionAvailableBiologicalSamples();

	/**
	 * Sets whether this d2 collection is collection available biological samples.
	 *
	 * @param collectionAvailableBiologicalSamples the collection available biological samples of this d2 collection
	 */
	public void setCollectionAvailableBiologicalSamples(
		boolean collectionAvailableBiologicalSamples);

	/**
	 * Returns the collection available survey data of this d2 collection.
	 *
	 * @return the collection available survey data of this d2 collection
	 */
	public boolean getCollectionAvailableSurveyData();

	/**
	 * Returns <code>true</code> if this d2 collection is collection available survey data.
	 *
	 * @return <code>true</code> if this d2 collection is collection available survey data; <code>false</code> otherwise
	 */
	public boolean isCollectionAvailableSurveyData();

	/**
	 * Sets whether this d2 collection is collection available survey data.
	 *
	 * @param collectionAvailableSurveyData the collection available survey data of this d2 collection
	 */
	public void setCollectionAvailableSurveyData(
		boolean collectionAvailableSurveyData);

	/**
	 * Returns the collection available imaging data of this d2 collection.
	 *
	 * @return the collection available imaging data of this d2 collection
	 */
	public boolean getCollectionAvailableImagingData();

	/**
	 * Returns <code>true</code> if this d2 collection is collection available imaging data.
	 *
	 * @return <code>true</code> if this d2 collection is collection available imaging data; <code>false</code> otherwise
	 */
	public boolean isCollectionAvailableImagingData();

	/**
	 * Sets whether this d2 collection is collection available imaging data.
	 *
	 * @param collectionAvailableImagingData the collection available imaging data of this d2 collection
	 */
	public void setCollectionAvailableImagingData(
		boolean collectionAvailableImagingData);

	/**
	 * Returns the collection available medical records of this d2 collection.
	 *
	 * @return the collection available medical records of this d2 collection
	 */
	public boolean getCollectionAvailableMedicalRecords();

	/**
	 * Returns <code>true</code> if this d2 collection is collection available medical records.
	 *
	 * @return <code>true</code> if this d2 collection is collection available medical records; <code>false</code> otherwise
	 */
	public boolean isCollectionAvailableMedicalRecords();

	/**
	 * Sets whether this d2 collection is collection available medical records.
	 *
	 * @param collectionAvailableMedicalRecords the collection available medical records of this d2 collection
	 */
	public void setCollectionAvailableMedicalRecords(
		boolean collectionAvailableMedicalRecords);

	/**
	 * Returns the collection available national registries of this d2 collection.
	 *
	 * @return the collection available national registries of this d2 collection
	 */
	public boolean getCollectionAvailableNationalRegistries();

	/**
	 * Returns <code>true</code> if this d2 collection is collection available national registries.
	 *
	 * @return <code>true</code> if this d2 collection is collection available national registries; <code>false</code> otherwise
	 */
	public boolean isCollectionAvailableNationalRegistries();

	/**
	 * Sets whether this d2 collection is collection available national registries.
	 *
	 * @param collectionAvailableNationalRegistries the collection available national registries of this d2 collection
	 */
	public void setCollectionAvailableNationalRegistries(
		boolean collectionAvailableNationalRegistries);

	/**
	 * Returns the collection available genealogical records of this d2 collection.
	 *
	 * @return the collection available genealogical records of this d2 collection
	 */
	public boolean getCollectionAvailableGenealogicalRecords();

	/**
	 * Returns <code>true</code> if this d2 collection is collection available genealogical records.
	 *
	 * @return <code>true</code> if this d2 collection is collection available genealogical records; <code>false</code> otherwise
	 */
	public boolean isCollectionAvailableGenealogicalRecords();

	/**
	 * Sets whether this d2 collection is collection available genealogical records.
	 *
	 * @param collectionAvailableGenealogicalRecords the collection available genealogical records of this d2 collection
	 */
	public void setCollectionAvailableGenealogicalRecords(
		boolean collectionAvailableGenealogicalRecords);

	/**
	 * Returns the collection available physio biochem measurements of this d2 collection.
	 *
	 * @return the collection available physio biochem measurements of this d2 collection
	 */
	public boolean getCollectionAvailablePhysioBiochemMeasurements();

	/**
	 * Returns <code>true</code> if this d2 collection is collection available physio biochem measurements.
	 *
	 * @return <code>true</code> if this d2 collection is collection available physio biochem measurements; <code>false</code> otherwise
	 */
	public boolean isCollectionAvailablePhysioBiochemMeasurements();

	/**
	 * Sets whether this d2 collection is collection available physio biochem measurements.
	 *
	 * @param collectionAvailablePhysioBiochemMeasurements the collection available physio biochem measurements of this d2 collection
	 */
	public void setCollectionAvailablePhysioBiochemMeasurements(
		boolean collectionAvailablePhysioBiochemMeasurements);

	/**
	 * Returns the collection available other of this d2 collection.
	 *
	 * @return the collection available other of this d2 collection
	 */
	@AutoEscape
	public String getCollectionAvailableOther();

	/**
	 * Sets the collection available other of this d2 collection.
	 *
	 * @param collectionAvailableOther the collection available other of this d2 collection
	 */
	public void setCollectionAvailableOther(String collectionAvailableOther);

	/**
	 * Returns the temperature room of this d2 collection.
	 *
	 * @return the temperature room of this d2 collection
	 */
	public boolean getTemperatureRoom();

	/**
	 * Returns <code>true</code> if this d2 collection is temperature room.
	 *
	 * @return <code>true</code> if this d2 collection is temperature room; <code>false</code> otherwise
	 */
	public boolean isTemperatureRoom();

	/**
	 * Sets whether this d2 collection is temperature room.
	 *
	 * @param temperatureRoom the temperature room of this d2 collection
	 */
	public void setTemperatureRoom(boolean temperatureRoom);

	/**
	 * Returns the temperature2to10 of this d2 collection.
	 *
	 * @return the temperature2to10 of this d2 collection
	 */
	public boolean getTemperature2to10();

	/**
	 * Returns <code>true</code> if this d2 collection is temperature2to10.
	 *
	 * @return <code>true</code> if this d2 collection is temperature2to10; <code>false</code> otherwise
	 */
	public boolean isTemperature2to10();

	/**
	 * Sets whether this d2 collection is temperature2to10.
	 *
	 * @param temperature2to10 the temperature2to10 of this d2 collection
	 */
	public void setTemperature2to10(boolean temperature2to10);

	/**
	 * Returns the temperature18to35 of this d2 collection.
	 *
	 * @return the temperature18to35 of this d2 collection
	 */
	public boolean getTemperature18to35();

	/**
	 * Returns <code>true</code> if this d2 collection is temperature18to35.
	 *
	 * @return <code>true</code> if this d2 collection is temperature18to35; <code>false</code> otherwise
	 */
	public boolean isTemperature18to35();

	/**
	 * Sets whether this d2 collection is temperature18to35.
	 *
	 * @param temperature18to35 the temperature18to35 of this d2 collection
	 */
	public void setTemperature18to35(boolean temperature18to35);

	/**
	 * Returns the temperature60to85 of this d2 collection.
	 *
	 * @return the temperature60to85 of this d2 collection
	 */
	public boolean getTemperature60to85();

	/**
	 * Returns <code>true</code> if this d2 collection is temperature60to85.
	 *
	 * @return <code>true</code> if this d2 collection is temperature60to85; <code>false</code> otherwise
	 */
	public boolean isTemperature60to85();

	/**
	 * Sets whether this d2 collection is temperature60to85.
	 *
	 * @param temperature60to85 the temperature60to85 of this d2 collection
	 */
	public void setTemperature60to85(boolean temperature60to85);

	/**
	 * Returns the temperature l n of this d2 collection.
	 *
	 * @return the temperature l n of this d2 collection
	 */
	public boolean getTemperatureLN();

	/**
	 * Returns <code>true</code> if this d2 collection is temperature l n.
	 *
	 * @return <code>true</code> if this d2 collection is temperature l n; <code>false</code> otherwise
	 */
	public boolean isTemperatureLN();

	/**
	 * Sets whether this d2 collection is temperature l n.
	 *
	 * @param temperatureLN the temperature l n of this d2 collection
	 */
	public void setTemperatureLN(boolean temperatureLN);

	/**
	 * Returns the temperature other of this d2 collection.
	 *
	 * @return the temperature other of this d2 collection
	 */
	@AutoEscape
	public String getTemperatureOther();

	/**
	 * Sets the temperature other of this d2 collection.
	 *
	 * @param temperatureOther the temperature other of this d2 collection
	 */
	public void setTemperatureOther(String temperatureOther);

	/**
	 * Returns the diagnosis available of this d2 collection.
	 *
	 * @return the diagnosis available of this d2 collection
	 */
	@AutoEscape
	public String getDiagnosisAvailable();

	/**
	 * Sets the diagnosis available of this d2 collection.
	 *
	 * @param diagnosisAvailable the diagnosis available of this d2 collection
	 */
	public void setDiagnosisAvailable(String diagnosisAvailable);

	/**
	 * Returns the collection head first name of this d2 collection.
	 *
	 * @return the collection head first name of this d2 collection
	 */
	@AutoEscape
	public String getCollectionHeadFirstName();

	/**
	 * Sets the collection head first name of this d2 collection.
	 *
	 * @param collectionHeadFirstName the collection head first name of this d2 collection
	 */
	public void setCollectionHeadFirstName(String collectionHeadFirstName);

	/**
	 * Returns the collection head last name of this d2 collection.
	 *
	 * @return the collection head last name of this d2 collection
	 */
	@AutoEscape
	public String getCollectionHeadLastName();

	/**
	 * Sets the collection head last name of this d2 collection.
	 *
	 * @param collectionHeadLastName the collection head last name of this d2 collection
	 */
	public void setCollectionHeadLastName(String collectionHeadLastName);

	/**
	 * Returns the collection head role of this d2 collection.
	 *
	 * @return the collection head role of this d2 collection
	 */
	@AutoEscape
	public String getCollectionHeadRole();

	/**
	 * Sets the collection head role of this d2 collection.
	 *
	 * @param collectionHeadRole the collection head role of this d2 collection
	 */
	public void setCollectionHeadRole(String collectionHeadRole);

	/**
	 * Returns the collection sample access fee of this d2 collection.
	 *
	 * @return the collection sample access fee of this d2 collection
	 */
	public boolean getCollectionSampleAccessFee();

	/**
	 * Returns <code>true</code> if this d2 collection is collection sample access fee.
	 *
	 * @return <code>true</code> if this d2 collection is collection sample access fee; <code>false</code> otherwise
	 */
	public boolean isCollectionSampleAccessFee();

	/**
	 * Sets whether this d2 collection is collection sample access fee.
	 *
	 * @param collectionSampleAccessFee the collection sample access fee of this d2 collection
	 */
	public void setCollectionSampleAccessFee(boolean collectionSampleAccessFee);

	/**
	 * Returns the collection sample access joint projects of this d2 collection.
	 *
	 * @return the collection sample access joint projects of this d2 collection
	 */
	public boolean getCollectionSampleAccessJointProjects();

	/**
	 * Returns <code>true</code> if this d2 collection is collection sample access joint projects.
	 *
	 * @return <code>true</code> if this d2 collection is collection sample access joint projects; <code>false</code> otherwise
	 */
	public boolean isCollectionSampleAccessJointProjects();

	/**
	 * Sets whether this d2 collection is collection sample access joint projects.
	 *
	 * @param collectionSampleAccessJointProjects the collection sample access joint projects of this d2 collection
	 */
	public void setCollectionSampleAccessJointProjects(
		boolean collectionSampleAccessJointProjects);

	/**
	 * Returns the collection sample access description of this d2 collection.
	 *
	 * @return the collection sample access description of this d2 collection
	 */
	@AutoEscape
	public String getCollectionSampleAccessDescription();

	/**
	 * Sets the collection sample access description of this d2 collection.
	 *
	 * @param collectionSampleAccessDescription the collection sample access description of this d2 collection
	 */
	public void setCollectionSampleAccessDescription(
		String collectionSampleAccessDescription);

	/**
	 * Returns the collection sample access u r i of this d2 collection.
	 *
	 * @return the collection sample access u r i of this d2 collection
	 */
	@AutoEscape
	public String getCollectionSampleAccessURI();

	/**
	 * Sets the collection sample access u r i of this d2 collection.
	 *
	 * @param collectionSampleAccessURI the collection sample access u r i of this d2 collection
	 */
	public void setCollectionSampleAccessURI(String collectionSampleAccessURI);

	/**
	 * Returns the collection data access fee of this d2 collection.
	 *
	 * @return the collection data access fee of this d2 collection
	 */
	public boolean getCollectionDataAccessFee();

	/**
	 * Returns <code>true</code> if this d2 collection is collection data access fee.
	 *
	 * @return <code>true</code> if this d2 collection is collection data access fee; <code>false</code> otherwise
	 */
	public boolean isCollectionDataAccessFee();

	/**
	 * Sets whether this d2 collection is collection data access fee.
	 *
	 * @param collectionDataAccessFee the collection data access fee of this d2 collection
	 */
	public void setCollectionDataAccessFee(boolean collectionDataAccessFee);

	/**
	 * Returns the collection data access joint projects of this d2 collection.
	 *
	 * @return the collection data access joint projects of this d2 collection
	 */
	public boolean getCollectionDataAccessJointProjects();

	/**
	 * Returns <code>true</code> if this d2 collection is collection data access joint projects.
	 *
	 * @return <code>true</code> if this d2 collection is collection data access joint projects; <code>false</code> otherwise
	 */
	public boolean isCollectionDataAccessJointProjects();

	/**
	 * Sets whether this d2 collection is collection data access joint projects.
	 *
	 * @param collectionDataAccessJointProjects the collection data access joint projects of this d2 collection
	 */
	public void setCollectionDataAccessJointProjects(
		boolean collectionDataAccessJointProjects);

	/**
	 * Returns the collection data access description of this d2 collection.
	 *
	 * @return the collection data access description of this d2 collection
	 */
	@AutoEscape
	public String getCollectionDataAccessDescription();

	/**
	 * Sets the collection data access description of this d2 collection.
	 *
	 * @param collectionDataAccessDescription the collection data access description of this d2 collection
	 */
	public void setCollectionDataAccessDescription(
		String collectionDataAccessDescription);

	/**
	 * Returns the collection data access u r i of this d2 collection.
	 *
	 * @return the collection data access u r i of this d2 collection
	 */
	@AutoEscape
	public String getCollectionDataAccessURI();

	/**
	 * Sets the collection data access u r i of this d2 collection.
	 *
	 * @param collectionDataAccessURI the collection data access u r i of this d2 collection
	 */
	public void setCollectionDataAccessURI(String collectionDataAccessURI);

	/**
	 * Returns the collection size of this d2 collection.
	 *
	 * @return the collection size of this d2 collection
	 */
	public long getCollectionSize();

	/**
	 * Sets the collection size of this d2 collection.
	 *
	 * @param collectionSize the collection size of this d2 collection
	 */
	public void setCollectionSize(long collectionSize);

	/**
	 * Returns the collection size timestamp of this d2 collection.
	 *
	 * @return the collection size timestamp of this d2 collection
	 */
	public long getCollectionSizeTimestamp();

	/**
	 * Sets the collection size timestamp of this d2 collection.
	 *
	 * @param collectionSizeTimestamp the collection size timestamp of this d2 collection
	 */
	public void setCollectionSizeTimestamp(long collectionSizeTimestamp);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(D2Collection d2Collection);

	@Override
	public int hashCode();

	@Override
	public CacheModel<D2Collection> toCacheModel();

	@Override
	public D2Collection toEscapedModel();

	@Override
	public D2Collection toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}