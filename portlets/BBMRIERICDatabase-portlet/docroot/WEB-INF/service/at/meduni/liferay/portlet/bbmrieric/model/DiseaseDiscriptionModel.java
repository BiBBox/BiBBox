/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package at.meduni.liferay.portlet.bbmrieric.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

/**
 * The base model interface for the DiseaseDiscription service. Represents a row in the &quot;bbmrieric.diseasediscription&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link at.meduni.liferay.portlet.bbmrieric.model.impl.DiseaseDiscriptionModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link at.meduni.liferay.portlet.bbmrieric.model.impl.DiseaseDiscriptionImpl}.
 * </p>
 *
 * @author reihsr
 * @see DiseaseDiscription
 * @see at.meduni.liferay.portlet.bbmrieric.model.impl.DiseaseDiscriptionImpl
 * @see at.meduni.liferay.portlet.bbmrieric.model.impl.DiseaseDiscriptionModelImpl
 * @generated
 */
public interface DiseaseDiscriptionModel extends BaseModel<DiseaseDiscription> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a disease discription model instance should use the {@link DiseaseDiscription} interface instead.
	 */

	/**
	 * Returns the primary key of this disease discription.
	 *
	 * @return the primary key of this disease discription
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this disease discription.
	 *
	 * @param primaryKey the primary key of this disease discription
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the diseasediscription ID of this disease discription.
	 *
	 * @return the diseasediscription ID of this disease discription
	 */
	public long getDiseasediscriptionId();

	/**
	 * Sets the diseasediscription ID of this disease discription.
	 *
	 * @param diseasediscriptionId the diseasediscription ID of this disease discription
	 */
	public void setDiseasediscriptionId(long diseasediscriptionId);

	/**
	 * Returns the diseasecode of this disease discription.
	 *
	 * @return the diseasecode of this disease discription
	 */
	@AutoEscape
	public String getDiseasecode();

	/**
	 * Sets the diseasecode of this disease discription.
	 *
	 * @param diseasecode the diseasecode of this disease discription
	 */
	public void setDiseasecode(String diseasecode);

	/**
	 * Returns the diseasegroup of this disease discription.
	 *
	 * @return the diseasegroup of this disease discription
	 */
	@AutoEscape
	public String getDiseasegroup();

	/**
	 * Sets the diseasegroup of this disease discription.
	 *
	 * @param diseasegroup the diseasegroup of this disease discription
	 */
	public void setDiseasegroup(String diseasegroup);

	/**
	 * Returns the diseasediscription of this disease discription.
	 *
	 * @return the diseasediscription of this disease discription
	 */
	@AutoEscape
	public String getDiseasediscription();

	/**
	 * Sets the diseasediscription of this disease discription.
	 *
	 * @param diseasediscription the diseasediscription of this disease discription
	 */
	public void setDiseasediscription(String diseasediscription);

	/**
	 * Returns the root of this disease discription.
	 *
	 * @return the root of this disease discription
	 */
	public boolean getRoot();

	/**
	 * Returns <code>true</code> if this disease discription is root.
	 *
	 * @return <code>true</code> if this disease discription is root; <code>false</code> otherwise
	 */
	public boolean isRoot();

	/**
	 * Sets whether this disease discription is root.
	 *
	 * @param root the root of this disease discription
	 */
	public void setRoot(boolean root);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(DiseaseDiscription diseaseDiscription);

	@Override
	public int hashCode();

	@Override
	public CacheModel<DiseaseDiscription> toCacheModel();

	@Override
	public DiseaseDiscription toEscapedModel();

	@Override
	public DiseaseDiscription toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}