/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package at.meduni.liferay.portlet.bbmrieric.model.impl;

import at.meduni.liferay.portlet.bbmrieric.model.D2BiobankNetworkLink;
import at.meduni.liferay.portlet.bbmrieric.model.D2BiobankNetworkLinkModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.lar.StagedModelType;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.kernel.workflow.WorkflowConstants;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the D2BiobankNetworkLink service. Represents a row in the &quot;bbmrieric.d2biobanknetworklink&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link at.meduni.liferay.portlet.bbmrieric.model.D2BiobankNetworkLinkModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link D2BiobankNetworkLinkImpl}.
 * </p>
 *
 * @author reihsr
 * @see D2BiobankNetworkLinkImpl
 * @see at.meduni.liferay.portlet.bbmrieric.model.D2BiobankNetworkLink
 * @see at.meduni.liferay.portlet.bbmrieric.model.D2BiobankNetworkLinkModel
 * @generated
 */
public class D2BiobankNetworkLinkModelImpl extends BaseModelImpl<D2BiobankNetworkLink>
	implements D2BiobankNetworkLinkModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a d2 biobank network link model instance should use the {@link at.meduni.liferay.portlet.bbmrieric.model.D2BiobankNetworkLink} interface instead.
	 */
	public static final String TABLE_NAME = "bbmrieric.d2biobanknetworklink";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "d2biobanknetworklinkId", Types.BIGINT },
			{ "d2biobanknetworkId", Types.BIGINT },
			{ "d2linkId", Types.BIGINT },
			{ "d2linktype", Types.VARCHAR },
			{ "status", Types.INTEGER },
			{ "statusByUserId", Types.BIGINT },
			{ "statusByUserName", Types.VARCHAR },
			{ "statusDate", Types.TIMESTAMP },
			{ "companyId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "updateuuid", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table bbmrieric.d2biobanknetworklink (uuid_ VARCHAR(75) null,d2biobanknetworklinkId LONG not null primary key,d2biobanknetworkId LONG,d2linkId LONG,d2linktype TEXT null,status INTEGER,statusByUserId LONG,statusByUserName TEXT null,statusDate DATE null,companyId LONG,groupId LONG,userId LONG,userName TEXT null,createDate DATE null,modifiedDate DATE null,updateuuid TEXT null)";
	public static final String TABLE_SQL_DROP = "drop table bbmrieric.d2biobanknetworklink";
	public static final String ORDER_BY_JPQL = " ORDER BY d2BiobankNetworkLink.d2biobanknetworklinkId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY bbmrieric.d2biobanknetworklink.d2biobanknetworklinkId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.at.meduni.liferay.portlet.bbmrieric.model.D2BiobankNetworkLink"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.at.meduni.liferay.portlet.bbmrieric.model.D2BiobankNetworkLink"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.at.meduni.liferay.portlet.bbmrieric.model.D2BiobankNetworkLink"),
			true);
	public static long COMPANYID_COLUMN_BITMASK = 1L;
	public static long D2BIOBANKNETWORKID_COLUMN_BITMASK = 2L;
	public static long D2LINKID_COLUMN_BITMASK = 4L;
	public static long D2LINKTYPE_COLUMN_BITMASK = 8L;
	public static long GROUPID_COLUMN_BITMASK = 16L;
	public static long UPDATEUUID_COLUMN_BITMASK = 32L;
	public static long UUID_COLUMN_BITMASK = 64L;
	public static long D2BIOBANKNETWORKLINKID_COLUMN_BITMASK = 128L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.at.meduni.liferay.portlet.bbmrieric.model.D2BiobankNetworkLink"));

	public D2BiobankNetworkLinkModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _d2biobanknetworklinkId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setD2biobanknetworklinkId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _d2biobanknetworklinkId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return D2BiobankNetworkLink.class;
	}

	@Override
	public String getModelClassName() {
		return D2BiobankNetworkLink.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("d2biobanknetworklinkId", getD2biobanknetworklinkId());
		attributes.put("d2biobanknetworkId", getD2biobanknetworkId());
		attributes.put("d2linkId", getD2linkId());
		attributes.put("d2linktype", getD2linktype());
		attributes.put("status", getStatus());
		attributes.put("statusByUserId", getStatusByUserId());
		attributes.put("statusByUserName", getStatusByUserName());
		attributes.put("statusDate", getStatusDate());
		attributes.put("companyId", getCompanyId());
		attributes.put("groupId", getGroupId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("updateuuid", getUpdateuuid());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long d2biobanknetworklinkId = (Long)attributes.get(
				"d2biobanknetworklinkId");

		if (d2biobanknetworklinkId != null) {
			setD2biobanknetworklinkId(d2biobanknetworklinkId);
		}

		Long d2biobanknetworkId = (Long)attributes.get("d2biobanknetworkId");

		if (d2biobanknetworkId != null) {
			setD2biobanknetworkId(d2biobanknetworkId);
		}

		Long d2linkId = (Long)attributes.get("d2linkId");

		if (d2linkId != null) {
			setD2linkId(d2linkId);
		}

		String d2linktype = (String)attributes.get("d2linktype");

		if (d2linktype != null) {
			setD2linktype(d2linktype);
		}

		Integer status = (Integer)attributes.get("status");

		if (status != null) {
			setStatus(status);
		}

		Long statusByUserId = (Long)attributes.get("statusByUserId");

		if (statusByUserId != null) {
			setStatusByUserId(statusByUserId);
		}

		String statusByUserName = (String)attributes.get("statusByUserName");

		if (statusByUserName != null) {
			setStatusByUserName(statusByUserName);
		}

		Date statusDate = (Date)attributes.get("statusDate");

		if (statusDate != null) {
			setStatusDate(statusDate);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String updateuuid = (String)attributes.get("updateuuid");

		if (updateuuid != null) {
			setUpdateuuid(updateuuid);
		}
	}

	@Override
	public String getUuid() {
		if (_uuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@Override
	public long getD2biobanknetworklinkId() {
		return _d2biobanknetworklinkId;
	}

	@Override
	public void setD2biobanknetworklinkId(long d2biobanknetworklinkId) {
		_d2biobanknetworklinkId = d2biobanknetworklinkId;
	}

	@Override
	public long getD2biobanknetworkId() {
		return _d2biobanknetworkId;
	}

	@Override
	public void setD2biobanknetworkId(long d2biobanknetworkId) {
		_columnBitmask |= D2BIOBANKNETWORKID_COLUMN_BITMASK;

		if (!_setOriginalD2biobanknetworkId) {
			_setOriginalD2biobanknetworkId = true;

			_originalD2biobanknetworkId = _d2biobanknetworkId;
		}

		_d2biobanknetworkId = d2biobanknetworkId;
	}

	public long getOriginalD2biobanknetworkId() {
		return _originalD2biobanknetworkId;
	}

	@Override
	public long getD2linkId() {
		return _d2linkId;
	}

	@Override
	public void setD2linkId(long d2linkId) {
		_columnBitmask |= D2LINKID_COLUMN_BITMASK;

		if (!_setOriginalD2linkId) {
			_setOriginalD2linkId = true;

			_originalD2linkId = _d2linkId;
		}

		_d2linkId = d2linkId;
	}

	public long getOriginalD2linkId() {
		return _originalD2linkId;
	}

	@Override
	public String getD2linktype() {
		if (_d2linktype == null) {
			return StringPool.BLANK;
		}
		else {
			return _d2linktype;
		}
	}

	@Override
	public void setD2linktype(String d2linktype) {
		_columnBitmask |= D2LINKTYPE_COLUMN_BITMASK;

		if (_originalD2linktype == null) {
			_originalD2linktype = _d2linktype;
		}

		_d2linktype = d2linktype;
	}

	public String getOriginalD2linktype() {
		return GetterUtil.getString(_originalD2linktype);
	}

	@Override
	public int getStatus() {
		return _status;
	}

	@Override
	public void setStatus(int status) {
		_status = status;
	}

	@Override
	public long getStatusByUserId() {
		return _statusByUserId;
	}

	@Override
	public void setStatusByUserId(long statusByUserId) {
		_statusByUserId = statusByUserId;
	}

	@Override
	public String getStatusByUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getStatusByUserId(), "uuid",
			_statusByUserUuid);
	}

	@Override
	public void setStatusByUserUuid(String statusByUserUuid) {
		_statusByUserUuid = statusByUserUuid;
	}

	@Override
	public String getStatusByUserName() {
		if (_statusByUserName == null) {
			return StringPool.BLANK;
		}
		else {
			return _statusByUserName;
		}
	}

	@Override
	public void setStatusByUserName(String statusByUserName) {
		_statusByUserName = statusByUserName;
	}

	@Override
	public Date getStatusDate() {
		return _statusDate;
	}

	@Override
	public void setStatusDate(Date statusDate) {
		_statusDate = statusDate;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public String getUpdateuuid() {
		if (_updateuuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _updateuuid;
		}
	}

	@Override
	public void setUpdateuuid(String updateuuid) {
		_columnBitmask |= UPDATEUUID_COLUMN_BITMASK;

		if (_originalUpdateuuid == null) {
			_originalUpdateuuid = _updateuuid;
		}

		_updateuuid = updateuuid;
	}

	public String getOriginalUpdateuuid() {
		return GetterUtil.getString(_originalUpdateuuid);
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(PortalUtil.getClassNameId(
				D2BiobankNetworkLink.class.getName()));
	}

	/**
	 * @deprecated As of 6.1.0, replaced by {@link #isApproved}
	 */
	@Override
	public boolean getApproved() {
		return isApproved();
	}

	@Override
	public boolean isApproved() {
		if (getStatus() == WorkflowConstants.STATUS_APPROVED) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isDenied() {
		if (getStatus() == WorkflowConstants.STATUS_DENIED) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isDraft() {
		if (getStatus() == WorkflowConstants.STATUS_DRAFT) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isExpired() {
		if (getStatus() == WorkflowConstants.STATUS_EXPIRED) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isInactive() {
		if (getStatus() == WorkflowConstants.STATUS_INACTIVE) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isIncomplete() {
		if (getStatus() == WorkflowConstants.STATUS_INCOMPLETE) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isPending() {
		if (getStatus() == WorkflowConstants.STATUS_PENDING) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isScheduled() {
		if (getStatus() == WorkflowConstants.STATUS_SCHEDULED) {
			return true;
		}
		else {
			return false;
		}
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			D2BiobankNetworkLink.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public D2BiobankNetworkLink toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (D2BiobankNetworkLink)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		D2BiobankNetworkLinkImpl d2BiobankNetworkLinkImpl = new D2BiobankNetworkLinkImpl();

		d2BiobankNetworkLinkImpl.setUuid(getUuid());
		d2BiobankNetworkLinkImpl.setD2biobanknetworklinkId(getD2biobanknetworklinkId());
		d2BiobankNetworkLinkImpl.setD2biobanknetworkId(getD2biobanknetworkId());
		d2BiobankNetworkLinkImpl.setD2linkId(getD2linkId());
		d2BiobankNetworkLinkImpl.setD2linktype(getD2linktype());
		d2BiobankNetworkLinkImpl.setStatus(getStatus());
		d2BiobankNetworkLinkImpl.setStatusByUserId(getStatusByUserId());
		d2BiobankNetworkLinkImpl.setStatusByUserName(getStatusByUserName());
		d2BiobankNetworkLinkImpl.setStatusDate(getStatusDate());
		d2BiobankNetworkLinkImpl.setCompanyId(getCompanyId());
		d2BiobankNetworkLinkImpl.setGroupId(getGroupId());
		d2BiobankNetworkLinkImpl.setUserId(getUserId());
		d2BiobankNetworkLinkImpl.setUserName(getUserName());
		d2BiobankNetworkLinkImpl.setCreateDate(getCreateDate());
		d2BiobankNetworkLinkImpl.setModifiedDate(getModifiedDate());
		d2BiobankNetworkLinkImpl.setUpdateuuid(getUpdateuuid());

		d2BiobankNetworkLinkImpl.resetOriginalValues();

		return d2BiobankNetworkLinkImpl;
	}

	@Override
	public int compareTo(D2BiobankNetworkLink d2BiobankNetworkLink) {
		long primaryKey = d2BiobankNetworkLink.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof D2BiobankNetworkLink)) {
			return false;
		}

		D2BiobankNetworkLink d2BiobankNetworkLink = (D2BiobankNetworkLink)obj;

		long primaryKey = d2BiobankNetworkLink.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		D2BiobankNetworkLinkModelImpl d2BiobankNetworkLinkModelImpl = this;

		d2BiobankNetworkLinkModelImpl._originalUuid = d2BiobankNetworkLinkModelImpl._uuid;

		d2BiobankNetworkLinkModelImpl._originalD2biobanknetworkId = d2BiobankNetworkLinkModelImpl._d2biobanknetworkId;

		d2BiobankNetworkLinkModelImpl._setOriginalD2biobanknetworkId = false;

		d2BiobankNetworkLinkModelImpl._originalD2linkId = d2BiobankNetworkLinkModelImpl._d2linkId;

		d2BiobankNetworkLinkModelImpl._setOriginalD2linkId = false;

		d2BiobankNetworkLinkModelImpl._originalD2linktype = d2BiobankNetworkLinkModelImpl._d2linktype;

		d2BiobankNetworkLinkModelImpl._originalCompanyId = d2BiobankNetworkLinkModelImpl._companyId;

		d2BiobankNetworkLinkModelImpl._setOriginalCompanyId = false;

		d2BiobankNetworkLinkModelImpl._originalGroupId = d2BiobankNetworkLinkModelImpl._groupId;

		d2BiobankNetworkLinkModelImpl._setOriginalGroupId = false;

		d2BiobankNetworkLinkModelImpl._originalUpdateuuid = d2BiobankNetworkLinkModelImpl._updateuuid;

		d2BiobankNetworkLinkModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<D2BiobankNetworkLink> toCacheModel() {
		D2BiobankNetworkLinkCacheModel d2BiobankNetworkLinkCacheModel = new D2BiobankNetworkLinkCacheModel();

		d2BiobankNetworkLinkCacheModel.uuid = getUuid();

		String uuid = d2BiobankNetworkLinkCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			d2BiobankNetworkLinkCacheModel.uuid = null;
		}

		d2BiobankNetworkLinkCacheModel.d2biobanknetworklinkId = getD2biobanknetworklinkId();

		d2BiobankNetworkLinkCacheModel.d2biobanknetworkId = getD2biobanknetworkId();

		d2BiobankNetworkLinkCacheModel.d2linkId = getD2linkId();

		d2BiobankNetworkLinkCacheModel.d2linktype = getD2linktype();

		String d2linktype = d2BiobankNetworkLinkCacheModel.d2linktype;

		if ((d2linktype != null) && (d2linktype.length() == 0)) {
			d2BiobankNetworkLinkCacheModel.d2linktype = null;
		}

		d2BiobankNetworkLinkCacheModel.status = getStatus();

		d2BiobankNetworkLinkCacheModel.statusByUserId = getStatusByUserId();

		d2BiobankNetworkLinkCacheModel.statusByUserName = getStatusByUserName();

		String statusByUserName = d2BiobankNetworkLinkCacheModel.statusByUserName;

		if ((statusByUserName != null) && (statusByUserName.length() == 0)) {
			d2BiobankNetworkLinkCacheModel.statusByUserName = null;
		}

		Date statusDate = getStatusDate();

		if (statusDate != null) {
			d2BiobankNetworkLinkCacheModel.statusDate = statusDate.getTime();
		}
		else {
			d2BiobankNetworkLinkCacheModel.statusDate = Long.MIN_VALUE;
		}

		d2BiobankNetworkLinkCacheModel.companyId = getCompanyId();

		d2BiobankNetworkLinkCacheModel.groupId = getGroupId();

		d2BiobankNetworkLinkCacheModel.userId = getUserId();

		d2BiobankNetworkLinkCacheModel.userName = getUserName();

		String userName = d2BiobankNetworkLinkCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			d2BiobankNetworkLinkCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			d2BiobankNetworkLinkCacheModel.createDate = createDate.getTime();
		}
		else {
			d2BiobankNetworkLinkCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			d2BiobankNetworkLinkCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			d2BiobankNetworkLinkCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		d2BiobankNetworkLinkCacheModel.updateuuid = getUpdateuuid();

		String updateuuid = d2BiobankNetworkLinkCacheModel.updateuuid;

		if ((updateuuid != null) && (updateuuid.length() == 0)) {
			d2BiobankNetworkLinkCacheModel.updateuuid = null;
		}

		return d2BiobankNetworkLinkCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(33);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", d2biobanknetworklinkId=");
		sb.append(getD2biobanknetworklinkId());
		sb.append(", d2biobanknetworkId=");
		sb.append(getD2biobanknetworkId());
		sb.append(", d2linkId=");
		sb.append(getD2linkId());
		sb.append(", d2linktype=");
		sb.append(getD2linktype());
		sb.append(", status=");
		sb.append(getStatus());
		sb.append(", statusByUserId=");
		sb.append(getStatusByUserId());
		sb.append(", statusByUserName=");
		sb.append(getStatusByUserName());
		sb.append(", statusDate=");
		sb.append(getStatusDate());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", updateuuid=");
		sb.append(getUpdateuuid());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(52);

		sb.append("<model><model-name>");
		sb.append(
			"at.meduni.liferay.portlet.bbmrieric.model.D2BiobankNetworkLink");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>d2biobanknetworklinkId</column-name><column-value><![CDATA[");
		sb.append(getD2biobanknetworklinkId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>d2biobanknetworkId</column-name><column-value><![CDATA[");
		sb.append(getD2biobanknetworkId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>d2linkId</column-name><column-value><![CDATA[");
		sb.append(getD2linkId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>d2linktype</column-name><column-value><![CDATA[");
		sb.append(getD2linktype());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>status</column-name><column-value><![CDATA[");
		sb.append(getStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>statusByUserId</column-name><column-value><![CDATA[");
		sb.append(getStatusByUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>statusByUserName</column-name><column-value><![CDATA[");
		sb.append(getStatusByUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>statusDate</column-name><column-value><![CDATA[");
		sb.append(getStatusDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>updateuuid</column-name><column-value><![CDATA[");
		sb.append(getUpdateuuid());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = D2BiobankNetworkLink.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			D2BiobankNetworkLink.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _d2biobanknetworklinkId;
	private long _d2biobanknetworkId;
	private long _originalD2biobanknetworkId;
	private boolean _setOriginalD2biobanknetworkId;
	private long _d2linkId;
	private long _originalD2linkId;
	private boolean _setOriginalD2linkId;
	private String _d2linktype;
	private String _originalD2linktype;
	private int _status;
	private long _statusByUserId;
	private String _statusByUserUuid;
	private String _statusByUserName;
	private Date _statusDate;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private String _updateuuid;
	private String _originalUpdateuuid;
	private long _columnBitmask;
	private D2BiobankNetworkLink _escapedModel;
}