/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package at.meduni.liferay.portlet.bbmrieric.model.impl;

import at.meduni.liferay.portlet.bbmrieric.model.D2BiobankNetwork;
import at.meduni.liferay.portlet.bbmrieric.model.D2BiobankNetworkModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.lar.StagedModelType;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.kernel.workflow.WorkflowConstants;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the D2BiobankNetwork service. Represents a row in the &quot;bbmrieric.d2biobanknetwork&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link at.meduni.liferay.portlet.bbmrieric.model.D2BiobankNetworkModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link D2BiobankNetworkImpl}.
 * </p>
 *
 * @author reihsr
 * @see D2BiobankNetworkImpl
 * @see at.meduni.liferay.portlet.bbmrieric.model.D2BiobankNetwork
 * @see at.meduni.liferay.portlet.bbmrieric.model.D2BiobankNetworkModel
 * @generated
 */
public class D2BiobankNetworkModelImpl extends BaseModelImpl<D2BiobankNetwork>
	implements D2BiobankNetworkModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a d2 biobank network model instance should use the {@link at.meduni.liferay.portlet.bbmrieric.model.D2BiobankNetwork} interface instead.
	 */
	public static final String TABLE_NAME = "bbmrieric.d2biobanknetwork";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "d2biobanknetworkId", Types.BIGINT },
			{ "parentd2biobanknetworkId", Types.BIGINT },
			{ "status", Types.INTEGER },
			{ "statusByUserId", Types.BIGINT },
			{ "statusByUserName", Types.VARCHAR },
			{ "statusDate", Types.TIMESTAMP },
			{ "companyId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "updateuuid", Types.VARCHAR },
			{ "contactIDRef", Types.VARCHAR },
			{ "contactPriority", Types.BIGINT },
			{ "bbmriBiobankNetworkID", Types.VARCHAR },
			{ "biobankNetworkName", Types.VARCHAR },
			{ "biobankNetworkCommonCollectionFocus", Types.BOOLEAN },
			{ "biobankNetworkCommonCharter", Types.BOOLEAN },
			{ "biobankNetworkCommonSOPs", Types.BOOLEAN },
			{ "biobankNetworkCommonDataAccessPolicy", Types.BOOLEAN },
			{ "biobankNetworkCommonSampleAccessPolicy", Types.BOOLEAN },
			{ "biobankNetworkCommonMTA", Types.BOOLEAN },
			{ "biobankNetworkCommonRepresentation", Types.BOOLEAN },
			{ "biobankNetworkCommonURL", Types.BOOLEAN },
			{ "biobankNetworkIDRef", Types.VARCHAR },
			{ "geoLatitude", Types.VARCHAR },
			{ "geoLongitude", Types.VARCHAR },
			{ "biobankNetworkAcronym", Types.VARCHAR },
			{ "biobankNetworkDescription", Types.VARCHAR },
			{ "biobankNetworkURL", Types.VARCHAR },
			{ "biobankNetworkJuridicalPerson", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table bbmrieric.d2biobanknetwork (uuid_ VARCHAR(75) null,d2biobanknetworkId LONG not null primary key,parentd2biobanknetworkId LONG,status INTEGER,statusByUserId LONG,statusByUserName TEXT null,statusDate DATE null,companyId LONG,groupId LONG,userId LONG,userName TEXT null,createDate DATE null,modifiedDate DATE null,updateuuid TEXT null,contactIDRef TEXT null,contactPriority LONG,bbmriBiobankNetworkID TEXT null,biobankNetworkName TEXT null,biobankNetworkCommonCollectionFocus BOOLEAN,biobankNetworkCommonCharter BOOLEAN,biobankNetworkCommonSOPs BOOLEAN,biobankNetworkCommonDataAccessPolicy BOOLEAN,biobankNetworkCommonSampleAccessPolicy BOOLEAN,biobankNetworkCommonMTA BOOLEAN,biobankNetworkCommonRepresentation BOOLEAN,biobankNetworkCommonURL BOOLEAN,biobankNetworkIDRef TEXT null,geoLatitude TEXT null,geoLongitude TEXT null,biobankNetworkAcronym TEXT null,biobankNetworkDescription TEXT null,biobankNetworkURL TEXT null,biobankNetworkJuridicalPerson TEXT null)";
	public static final String TABLE_SQL_DROP = "drop table bbmrieric.d2biobanknetwork";
	public static final String ORDER_BY_JPQL = " ORDER BY d2BiobankNetwork.d2biobanknetworkId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY bbmrieric.d2biobanknetwork.d2biobanknetworkId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.at.meduni.liferay.portlet.bbmrieric.model.D2BiobankNetwork"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.at.meduni.liferay.portlet.bbmrieric.model.D2BiobankNetwork"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.at.meduni.liferay.portlet.bbmrieric.model.D2BiobankNetwork"),
			true);
	public static long BBMRIBIOBANKNETWORKID_COLUMN_BITMASK = 1L;
	public static long COMPANYID_COLUMN_BITMASK = 2L;
	public static long GROUPID_COLUMN_BITMASK = 4L;
	public static long UPDATEUUID_COLUMN_BITMASK = 8L;
	public static long UUID_COLUMN_BITMASK = 16L;
	public static long D2BIOBANKNETWORKID_COLUMN_BITMASK = 32L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.at.meduni.liferay.portlet.bbmrieric.model.D2BiobankNetwork"));

	public D2BiobankNetworkModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _d2biobanknetworkId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setD2biobanknetworkId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _d2biobanknetworkId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return D2BiobankNetwork.class;
	}

	@Override
	public String getModelClassName() {
		return D2BiobankNetwork.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("d2biobanknetworkId", getD2biobanknetworkId());
		attributes.put("parentd2biobanknetworkId", getParentd2biobanknetworkId());
		attributes.put("status", getStatus());
		attributes.put("statusByUserId", getStatusByUserId());
		attributes.put("statusByUserName", getStatusByUserName());
		attributes.put("statusDate", getStatusDate());
		attributes.put("companyId", getCompanyId());
		attributes.put("groupId", getGroupId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("updateuuid", getUpdateuuid());
		attributes.put("contactIDRef", getContactIDRef());
		attributes.put("contactPriority", getContactPriority());
		attributes.put("bbmriBiobankNetworkID", getBbmriBiobankNetworkID());
		attributes.put("biobankNetworkName", getBiobankNetworkName());
		attributes.put("biobankNetworkCommonCollectionFocus",
			getBiobankNetworkCommonCollectionFocus());
		attributes.put("biobankNetworkCommonCharter",
			getBiobankNetworkCommonCharter());
		attributes.put("biobankNetworkCommonSOPs", getBiobankNetworkCommonSOPs());
		attributes.put("biobankNetworkCommonDataAccessPolicy",
			getBiobankNetworkCommonDataAccessPolicy());
		attributes.put("biobankNetworkCommonSampleAccessPolicy",
			getBiobankNetworkCommonSampleAccessPolicy());
		attributes.put("biobankNetworkCommonMTA", getBiobankNetworkCommonMTA());
		attributes.put("biobankNetworkCommonRepresentation",
			getBiobankNetworkCommonRepresentation());
		attributes.put("biobankNetworkCommonURL", getBiobankNetworkCommonURL());
		attributes.put("biobankNetworkIDRef", getBiobankNetworkIDRef());
		attributes.put("geoLatitude", getGeoLatitude());
		attributes.put("geoLongitude", getGeoLongitude());
		attributes.put("biobankNetworkAcronym", getBiobankNetworkAcronym());
		attributes.put("biobankNetworkDescription",
			getBiobankNetworkDescription());
		attributes.put("biobankNetworkURL", getBiobankNetworkURL());
		attributes.put("biobankNetworkJuridicalPerson",
			getBiobankNetworkJuridicalPerson());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long d2biobanknetworkId = (Long)attributes.get("d2biobanknetworkId");

		if (d2biobanknetworkId != null) {
			setD2biobanknetworkId(d2biobanknetworkId);
		}

		Long parentd2biobanknetworkId = (Long)attributes.get(
				"parentd2biobanknetworkId");

		if (parentd2biobanknetworkId != null) {
			setParentd2biobanknetworkId(parentd2biobanknetworkId);
		}

		Integer status = (Integer)attributes.get("status");

		if (status != null) {
			setStatus(status);
		}

		Long statusByUserId = (Long)attributes.get("statusByUserId");

		if (statusByUserId != null) {
			setStatusByUserId(statusByUserId);
		}

		String statusByUserName = (String)attributes.get("statusByUserName");

		if (statusByUserName != null) {
			setStatusByUserName(statusByUserName);
		}

		Date statusDate = (Date)attributes.get("statusDate");

		if (statusDate != null) {
			setStatusDate(statusDate);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String updateuuid = (String)attributes.get("updateuuid");

		if (updateuuid != null) {
			setUpdateuuid(updateuuid);
		}

		String contactIDRef = (String)attributes.get("contactIDRef");

		if (contactIDRef != null) {
			setContactIDRef(contactIDRef);
		}

		Long contactPriority = (Long)attributes.get("contactPriority");

		if (contactPriority != null) {
			setContactPriority(contactPriority);
		}

		String bbmriBiobankNetworkID = (String)attributes.get(
				"bbmriBiobankNetworkID");

		if (bbmriBiobankNetworkID != null) {
			setBbmriBiobankNetworkID(bbmriBiobankNetworkID);
		}

		String biobankNetworkName = (String)attributes.get("biobankNetworkName");

		if (biobankNetworkName != null) {
			setBiobankNetworkName(biobankNetworkName);
		}

		Boolean biobankNetworkCommonCollectionFocus = (Boolean)attributes.get(
				"biobankNetworkCommonCollectionFocus");

		if (biobankNetworkCommonCollectionFocus != null) {
			setBiobankNetworkCommonCollectionFocus(biobankNetworkCommonCollectionFocus);
		}

		Boolean biobankNetworkCommonCharter = (Boolean)attributes.get(
				"biobankNetworkCommonCharter");

		if (biobankNetworkCommonCharter != null) {
			setBiobankNetworkCommonCharter(biobankNetworkCommonCharter);
		}

		Boolean biobankNetworkCommonSOPs = (Boolean)attributes.get(
				"biobankNetworkCommonSOPs");

		if (biobankNetworkCommonSOPs != null) {
			setBiobankNetworkCommonSOPs(biobankNetworkCommonSOPs);
		}

		Boolean biobankNetworkCommonDataAccessPolicy = (Boolean)attributes.get(
				"biobankNetworkCommonDataAccessPolicy");

		if (biobankNetworkCommonDataAccessPolicy != null) {
			setBiobankNetworkCommonDataAccessPolicy(biobankNetworkCommonDataAccessPolicy);
		}

		Boolean biobankNetworkCommonSampleAccessPolicy = (Boolean)attributes.get(
				"biobankNetworkCommonSampleAccessPolicy");

		if (biobankNetworkCommonSampleAccessPolicy != null) {
			setBiobankNetworkCommonSampleAccessPolicy(biobankNetworkCommonSampleAccessPolicy);
		}

		Boolean biobankNetworkCommonMTA = (Boolean)attributes.get(
				"biobankNetworkCommonMTA");

		if (biobankNetworkCommonMTA != null) {
			setBiobankNetworkCommonMTA(biobankNetworkCommonMTA);
		}

		Boolean biobankNetworkCommonRepresentation = (Boolean)attributes.get(
				"biobankNetworkCommonRepresentation");

		if (biobankNetworkCommonRepresentation != null) {
			setBiobankNetworkCommonRepresentation(biobankNetworkCommonRepresentation);
		}

		Boolean biobankNetworkCommonURL = (Boolean)attributes.get(
				"biobankNetworkCommonURL");

		if (biobankNetworkCommonURL != null) {
			setBiobankNetworkCommonURL(biobankNetworkCommonURL);
		}

		String biobankNetworkIDRef = (String)attributes.get(
				"biobankNetworkIDRef");

		if (biobankNetworkIDRef != null) {
			setBiobankNetworkIDRef(biobankNetworkIDRef);
		}

		String geoLatitude = (String)attributes.get("geoLatitude");

		if (geoLatitude != null) {
			setGeoLatitude(geoLatitude);
		}

		String geoLongitude = (String)attributes.get("geoLongitude");

		if (geoLongitude != null) {
			setGeoLongitude(geoLongitude);
		}

		String biobankNetworkAcronym = (String)attributes.get(
				"biobankNetworkAcronym");

		if (biobankNetworkAcronym != null) {
			setBiobankNetworkAcronym(biobankNetworkAcronym);
		}

		String biobankNetworkDescription = (String)attributes.get(
				"biobankNetworkDescription");

		if (biobankNetworkDescription != null) {
			setBiobankNetworkDescription(biobankNetworkDescription);
		}

		String biobankNetworkURL = (String)attributes.get("biobankNetworkURL");

		if (biobankNetworkURL != null) {
			setBiobankNetworkURL(biobankNetworkURL);
		}

		String biobankNetworkJuridicalPerson = (String)attributes.get(
				"biobankNetworkJuridicalPerson");

		if (biobankNetworkJuridicalPerson != null) {
			setBiobankNetworkJuridicalPerson(biobankNetworkJuridicalPerson);
		}
	}

	@Override
	public String getUuid() {
		if (_uuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@Override
	public long getD2biobanknetworkId() {
		return _d2biobanknetworkId;
	}

	@Override
	public void setD2biobanknetworkId(long d2biobanknetworkId) {
		_d2biobanknetworkId = d2biobanknetworkId;
	}

	@Override
	public long getParentd2biobanknetworkId() {
		return _parentd2biobanknetworkId;
	}

	@Override
	public void setParentd2biobanknetworkId(long parentd2biobanknetworkId) {
		_parentd2biobanknetworkId = parentd2biobanknetworkId;
	}

	@Override
	public int getStatus() {
		return _status;
	}

	@Override
	public void setStatus(int status) {
		_status = status;
	}

	@Override
	public long getStatusByUserId() {
		return _statusByUserId;
	}

	@Override
	public void setStatusByUserId(long statusByUserId) {
		_statusByUserId = statusByUserId;
	}

	@Override
	public String getStatusByUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getStatusByUserId(), "uuid",
			_statusByUserUuid);
	}

	@Override
	public void setStatusByUserUuid(String statusByUserUuid) {
		_statusByUserUuid = statusByUserUuid;
	}

	@Override
	public String getStatusByUserName() {
		if (_statusByUserName == null) {
			return StringPool.BLANK;
		}
		else {
			return _statusByUserName;
		}
	}

	@Override
	public void setStatusByUserName(String statusByUserName) {
		_statusByUserName = statusByUserName;
	}

	@Override
	public Date getStatusDate() {
		return _statusDate;
	}

	@Override
	public void setStatusDate(Date statusDate) {
		_statusDate = statusDate;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public String getUpdateuuid() {
		if (_updateuuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _updateuuid;
		}
	}

	@Override
	public void setUpdateuuid(String updateuuid) {
		_columnBitmask |= UPDATEUUID_COLUMN_BITMASK;

		if (_originalUpdateuuid == null) {
			_originalUpdateuuid = _updateuuid;
		}

		_updateuuid = updateuuid;
	}

	public String getOriginalUpdateuuid() {
		return GetterUtil.getString(_originalUpdateuuid);
	}

	@Override
	public String getContactIDRef() {
		if (_contactIDRef == null) {
			return StringPool.BLANK;
		}
		else {
			return _contactIDRef;
		}
	}

	@Override
	public void setContactIDRef(String contactIDRef) {
		_contactIDRef = contactIDRef;
	}

	@Override
	public long getContactPriority() {
		return _contactPriority;
	}

	@Override
	public void setContactPriority(long contactPriority) {
		_contactPriority = contactPriority;
	}

	@Override
	public String getBbmriBiobankNetworkID() {
		if (_bbmriBiobankNetworkID == null) {
			return StringPool.BLANK;
		}
		else {
			return _bbmriBiobankNetworkID;
		}
	}

	@Override
	public void setBbmriBiobankNetworkID(String bbmriBiobankNetworkID) {
		_columnBitmask |= BBMRIBIOBANKNETWORKID_COLUMN_BITMASK;

		if (_originalBbmriBiobankNetworkID == null) {
			_originalBbmriBiobankNetworkID = _bbmriBiobankNetworkID;
		}

		_bbmriBiobankNetworkID = bbmriBiobankNetworkID;
	}

	public String getOriginalBbmriBiobankNetworkID() {
		return GetterUtil.getString(_originalBbmriBiobankNetworkID);
	}

	@Override
	public String getBiobankNetworkName() {
		if (_biobankNetworkName == null) {
			return StringPool.BLANK;
		}
		else {
			return _biobankNetworkName;
		}
	}

	@Override
	public void setBiobankNetworkName(String biobankNetworkName) {
		_biobankNetworkName = biobankNetworkName;
	}

	@Override
	public boolean getBiobankNetworkCommonCollectionFocus() {
		return _biobankNetworkCommonCollectionFocus;
	}

	@Override
	public boolean isBiobankNetworkCommonCollectionFocus() {
		return _biobankNetworkCommonCollectionFocus;
	}

	@Override
	public void setBiobankNetworkCommonCollectionFocus(
		boolean biobankNetworkCommonCollectionFocus) {
		_biobankNetworkCommonCollectionFocus = biobankNetworkCommonCollectionFocus;
	}

	@Override
	public boolean getBiobankNetworkCommonCharter() {
		return _biobankNetworkCommonCharter;
	}

	@Override
	public boolean isBiobankNetworkCommonCharter() {
		return _biobankNetworkCommonCharter;
	}

	@Override
	public void setBiobankNetworkCommonCharter(
		boolean biobankNetworkCommonCharter) {
		_biobankNetworkCommonCharter = biobankNetworkCommonCharter;
	}

	@Override
	public boolean getBiobankNetworkCommonSOPs() {
		return _biobankNetworkCommonSOPs;
	}

	@Override
	public boolean isBiobankNetworkCommonSOPs() {
		return _biobankNetworkCommonSOPs;
	}

	@Override
	public void setBiobankNetworkCommonSOPs(boolean biobankNetworkCommonSOPs) {
		_biobankNetworkCommonSOPs = biobankNetworkCommonSOPs;
	}

	@Override
	public boolean getBiobankNetworkCommonDataAccessPolicy() {
		return _biobankNetworkCommonDataAccessPolicy;
	}

	@Override
	public boolean isBiobankNetworkCommonDataAccessPolicy() {
		return _biobankNetworkCommonDataAccessPolicy;
	}

	@Override
	public void setBiobankNetworkCommonDataAccessPolicy(
		boolean biobankNetworkCommonDataAccessPolicy) {
		_biobankNetworkCommonDataAccessPolicy = biobankNetworkCommonDataAccessPolicy;
	}

	@Override
	public boolean getBiobankNetworkCommonSampleAccessPolicy() {
		return _biobankNetworkCommonSampleAccessPolicy;
	}

	@Override
	public boolean isBiobankNetworkCommonSampleAccessPolicy() {
		return _biobankNetworkCommonSampleAccessPolicy;
	}

	@Override
	public void setBiobankNetworkCommonSampleAccessPolicy(
		boolean biobankNetworkCommonSampleAccessPolicy) {
		_biobankNetworkCommonSampleAccessPolicy = biobankNetworkCommonSampleAccessPolicy;
	}

	@Override
	public boolean getBiobankNetworkCommonMTA() {
		return _biobankNetworkCommonMTA;
	}

	@Override
	public boolean isBiobankNetworkCommonMTA() {
		return _biobankNetworkCommonMTA;
	}

	@Override
	public void setBiobankNetworkCommonMTA(boolean biobankNetworkCommonMTA) {
		_biobankNetworkCommonMTA = biobankNetworkCommonMTA;
	}

	@Override
	public boolean getBiobankNetworkCommonRepresentation() {
		return _biobankNetworkCommonRepresentation;
	}

	@Override
	public boolean isBiobankNetworkCommonRepresentation() {
		return _biobankNetworkCommonRepresentation;
	}

	@Override
	public void setBiobankNetworkCommonRepresentation(
		boolean biobankNetworkCommonRepresentation) {
		_biobankNetworkCommonRepresentation = biobankNetworkCommonRepresentation;
	}

	@Override
	public boolean getBiobankNetworkCommonURL() {
		return _biobankNetworkCommonURL;
	}

	@Override
	public boolean isBiobankNetworkCommonURL() {
		return _biobankNetworkCommonURL;
	}

	@Override
	public void setBiobankNetworkCommonURL(boolean biobankNetworkCommonURL) {
		_biobankNetworkCommonURL = biobankNetworkCommonURL;
	}

	@Override
	public String getBiobankNetworkIDRef() {
		if (_biobankNetworkIDRef == null) {
			return StringPool.BLANK;
		}
		else {
			return _biobankNetworkIDRef;
		}
	}

	@Override
	public void setBiobankNetworkIDRef(String biobankNetworkIDRef) {
		_biobankNetworkIDRef = biobankNetworkIDRef;
	}

	@Override
	public String getGeoLatitude() {
		if (_geoLatitude == null) {
			return StringPool.BLANK;
		}
		else {
			return _geoLatitude;
		}
	}

	@Override
	public void setGeoLatitude(String geoLatitude) {
		_geoLatitude = geoLatitude;
	}

	@Override
	public String getGeoLongitude() {
		if (_geoLongitude == null) {
			return StringPool.BLANK;
		}
		else {
			return _geoLongitude;
		}
	}

	@Override
	public void setGeoLongitude(String geoLongitude) {
		_geoLongitude = geoLongitude;
	}

	@Override
	public String getBiobankNetworkAcronym() {
		if (_biobankNetworkAcronym == null) {
			return StringPool.BLANK;
		}
		else {
			return _biobankNetworkAcronym;
		}
	}

	@Override
	public void setBiobankNetworkAcronym(String biobankNetworkAcronym) {
		_biobankNetworkAcronym = biobankNetworkAcronym;
	}

	@Override
	public String getBiobankNetworkDescription() {
		if (_biobankNetworkDescription == null) {
			return StringPool.BLANK;
		}
		else {
			return _biobankNetworkDescription;
		}
	}

	@Override
	public void setBiobankNetworkDescription(String biobankNetworkDescription) {
		_biobankNetworkDescription = biobankNetworkDescription;
	}

	@Override
	public String getBiobankNetworkURL() {
		if (_biobankNetworkURL == null) {
			return StringPool.BLANK;
		}
		else {
			return _biobankNetworkURL;
		}
	}

	@Override
	public void setBiobankNetworkURL(String biobankNetworkURL) {
		_biobankNetworkURL = biobankNetworkURL;
	}

	@Override
	public String getBiobankNetworkJuridicalPerson() {
		if (_biobankNetworkJuridicalPerson == null) {
			return StringPool.BLANK;
		}
		else {
			return _biobankNetworkJuridicalPerson;
		}
	}

	@Override
	public void setBiobankNetworkJuridicalPerson(
		String biobankNetworkJuridicalPerson) {
		_biobankNetworkJuridicalPerson = biobankNetworkJuridicalPerson;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(PortalUtil.getClassNameId(
				D2BiobankNetwork.class.getName()));
	}

	/**
	 * @deprecated As of 6.1.0, replaced by {@link #isApproved}
	 */
	@Override
	public boolean getApproved() {
		return isApproved();
	}

	@Override
	public boolean isApproved() {
		if (getStatus() == WorkflowConstants.STATUS_APPROVED) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isDenied() {
		if (getStatus() == WorkflowConstants.STATUS_DENIED) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isDraft() {
		if (getStatus() == WorkflowConstants.STATUS_DRAFT) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isExpired() {
		if (getStatus() == WorkflowConstants.STATUS_EXPIRED) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isInactive() {
		if (getStatus() == WorkflowConstants.STATUS_INACTIVE) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isIncomplete() {
		if (getStatus() == WorkflowConstants.STATUS_INCOMPLETE) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isPending() {
		if (getStatus() == WorkflowConstants.STATUS_PENDING) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isScheduled() {
		if (getStatus() == WorkflowConstants.STATUS_SCHEDULED) {
			return true;
		}
		else {
			return false;
		}
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			D2BiobankNetwork.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public D2BiobankNetwork toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (D2BiobankNetwork)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		D2BiobankNetworkImpl d2BiobankNetworkImpl = new D2BiobankNetworkImpl();

		d2BiobankNetworkImpl.setUuid(getUuid());
		d2BiobankNetworkImpl.setD2biobanknetworkId(getD2biobanknetworkId());
		d2BiobankNetworkImpl.setParentd2biobanknetworkId(getParentd2biobanknetworkId());
		d2BiobankNetworkImpl.setStatus(getStatus());
		d2BiobankNetworkImpl.setStatusByUserId(getStatusByUserId());
		d2BiobankNetworkImpl.setStatusByUserName(getStatusByUserName());
		d2BiobankNetworkImpl.setStatusDate(getStatusDate());
		d2BiobankNetworkImpl.setCompanyId(getCompanyId());
		d2BiobankNetworkImpl.setGroupId(getGroupId());
		d2BiobankNetworkImpl.setUserId(getUserId());
		d2BiobankNetworkImpl.setUserName(getUserName());
		d2BiobankNetworkImpl.setCreateDate(getCreateDate());
		d2BiobankNetworkImpl.setModifiedDate(getModifiedDate());
		d2BiobankNetworkImpl.setUpdateuuid(getUpdateuuid());
		d2BiobankNetworkImpl.setContactIDRef(getContactIDRef());
		d2BiobankNetworkImpl.setContactPriority(getContactPriority());
		d2BiobankNetworkImpl.setBbmriBiobankNetworkID(getBbmriBiobankNetworkID());
		d2BiobankNetworkImpl.setBiobankNetworkName(getBiobankNetworkName());
		d2BiobankNetworkImpl.setBiobankNetworkCommonCollectionFocus(getBiobankNetworkCommonCollectionFocus());
		d2BiobankNetworkImpl.setBiobankNetworkCommonCharter(getBiobankNetworkCommonCharter());
		d2BiobankNetworkImpl.setBiobankNetworkCommonSOPs(getBiobankNetworkCommonSOPs());
		d2BiobankNetworkImpl.setBiobankNetworkCommonDataAccessPolicy(getBiobankNetworkCommonDataAccessPolicy());
		d2BiobankNetworkImpl.setBiobankNetworkCommonSampleAccessPolicy(getBiobankNetworkCommonSampleAccessPolicy());
		d2BiobankNetworkImpl.setBiobankNetworkCommonMTA(getBiobankNetworkCommonMTA());
		d2BiobankNetworkImpl.setBiobankNetworkCommonRepresentation(getBiobankNetworkCommonRepresentation());
		d2BiobankNetworkImpl.setBiobankNetworkCommonURL(getBiobankNetworkCommonURL());
		d2BiobankNetworkImpl.setBiobankNetworkIDRef(getBiobankNetworkIDRef());
		d2BiobankNetworkImpl.setGeoLatitude(getGeoLatitude());
		d2BiobankNetworkImpl.setGeoLongitude(getGeoLongitude());
		d2BiobankNetworkImpl.setBiobankNetworkAcronym(getBiobankNetworkAcronym());
		d2BiobankNetworkImpl.setBiobankNetworkDescription(getBiobankNetworkDescription());
		d2BiobankNetworkImpl.setBiobankNetworkURL(getBiobankNetworkURL());
		d2BiobankNetworkImpl.setBiobankNetworkJuridicalPerson(getBiobankNetworkJuridicalPerson());

		d2BiobankNetworkImpl.resetOriginalValues();

		return d2BiobankNetworkImpl;
	}

	@Override
	public int compareTo(D2BiobankNetwork d2BiobankNetwork) {
		long primaryKey = d2BiobankNetwork.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof D2BiobankNetwork)) {
			return false;
		}

		D2BiobankNetwork d2BiobankNetwork = (D2BiobankNetwork)obj;

		long primaryKey = d2BiobankNetwork.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		D2BiobankNetworkModelImpl d2BiobankNetworkModelImpl = this;

		d2BiobankNetworkModelImpl._originalUuid = d2BiobankNetworkModelImpl._uuid;

		d2BiobankNetworkModelImpl._originalCompanyId = d2BiobankNetworkModelImpl._companyId;

		d2BiobankNetworkModelImpl._setOriginalCompanyId = false;

		d2BiobankNetworkModelImpl._originalGroupId = d2BiobankNetworkModelImpl._groupId;

		d2BiobankNetworkModelImpl._setOriginalGroupId = false;

		d2BiobankNetworkModelImpl._originalUpdateuuid = d2BiobankNetworkModelImpl._updateuuid;

		d2BiobankNetworkModelImpl._originalBbmriBiobankNetworkID = d2BiobankNetworkModelImpl._bbmriBiobankNetworkID;

		d2BiobankNetworkModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<D2BiobankNetwork> toCacheModel() {
		D2BiobankNetworkCacheModel d2BiobankNetworkCacheModel = new D2BiobankNetworkCacheModel();

		d2BiobankNetworkCacheModel.uuid = getUuid();

		String uuid = d2BiobankNetworkCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			d2BiobankNetworkCacheModel.uuid = null;
		}

		d2BiobankNetworkCacheModel.d2biobanknetworkId = getD2biobanknetworkId();

		d2BiobankNetworkCacheModel.parentd2biobanknetworkId = getParentd2biobanknetworkId();

		d2BiobankNetworkCacheModel.status = getStatus();

		d2BiobankNetworkCacheModel.statusByUserId = getStatusByUserId();

		d2BiobankNetworkCacheModel.statusByUserName = getStatusByUserName();

		String statusByUserName = d2BiobankNetworkCacheModel.statusByUserName;

		if ((statusByUserName != null) && (statusByUserName.length() == 0)) {
			d2BiobankNetworkCacheModel.statusByUserName = null;
		}

		Date statusDate = getStatusDate();

		if (statusDate != null) {
			d2BiobankNetworkCacheModel.statusDate = statusDate.getTime();
		}
		else {
			d2BiobankNetworkCacheModel.statusDate = Long.MIN_VALUE;
		}

		d2BiobankNetworkCacheModel.companyId = getCompanyId();

		d2BiobankNetworkCacheModel.groupId = getGroupId();

		d2BiobankNetworkCacheModel.userId = getUserId();

		d2BiobankNetworkCacheModel.userName = getUserName();

		String userName = d2BiobankNetworkCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			d2BiobankNetworkCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			d2BiobankNetworkCacheModel.createDate = createDate.getTime();
		}
		else {
			d2BiobankNetworkCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			d2BiobankNetworkCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			d2BiobankNetworkCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		d2BiobankNetworkCacheModel.updateuuid = getUpdateuuid();

		String updateuuid = d2BiobankNetworkCacheModel.updateuuid;

		if ((updateuuid != null) && (updateuuid.length() == 0)) {
			d2BiobankNetworkCacheModel.updateuuid = null;
		}

		d2BiobankNetworkCacheModel.contactIDRef = getContactIDRef();

		String contactIDRef = d2BiobankNetworkCacheModel.contactIDRef;

		if ((contactIDRef != null) && (contactIDRef.length() == 0)) {
			d2BiobankNetworkCacheModel.contactIDRef = null;
		}

		d2BiobankNetworkCacheModel.contactPriority = getContactPriority();

		d2BiobankNetworkCacheModel.bbmriBiobankNetworkID = getBbmriBiobankNetworkID();

		String bbmriBiobankNetworkID = d2BiobankNetworkCacheModel.bbmriBiobankNetworkID;

		if ((bbmriBiobankNetworkID != null) &&
				(bbmriBiobankNetworkID.length() == 0)) {
			d2BiobankNetworkCacheModel.bbmriBiobankNetworkID = null;
		}

		d2BiobankNetworkCacheModel.biobankNetworkName = getBiobankNetworkName();

		String biobankNetworkName = d2BiobankNetworkCacheModel.biobankNetworkName;

		if ((biobankNetworkName != null) && (biobankNetworkName.length() == 0)) {
			d2BiobankNetworkCacheModel.biobankNetworkName = null;
		}

		d2BiobankNetworkCacheModel.biobankNetworkCommonCollectionFocus = getBiobankNetworkCommonCollectionFocus();

		d2BiobankNetworkCacheModel.biobankNetworkCommonCharter = getBiobankNetworkCommonCharter();

		d2BiobankNetworkCacheModel.biobankNetworkCommonSOPs = getBiobankNetworkCommonSOPs();

		d2BiobankNetworkCacheModel.biobankNetworkCommonDataAccessPolicy = getBiobankNetworkCommonDataAccessPolicy();

		d2BiobankNetworkCacheModel.biobankNetworkCommonSampleAccessPolicy = getBiobankNetworkCommonSampleAccessPolicy();

		d2BiobankNetworkCacheModel.biobankNetworkCommonMTA = getBiobankNetworkCommonMTA();

		d2BiobankNetworkCacheModel.biobankNetworkCommonRepresentation = getBiobankNetworkCommonRepresentation();

		d2BiobankNetworkCacheModel.biobankNetworkCommonURL = getBiobankNetworkCommonURL();

		d2BiobankNetworkCacheModel.biobankNetworkIDRef = getBiobankNetworkIDRef();

		String biobankNetworkIDRef = d2BiobankNetworkCacheModel.biobankNetworkIDRef;

		if ((biobankNetworkIDRef != null) &&
				(biobankNetworkIDRef.length() == 0)) {
			d2BiobankNetworkCacheModel.biobankNetworkIDRef = null;
		}

		d2BiobankNetworkCacheModel.geoLatitude = getGeoLatitude();

		String geoLatitude = d2BiobankNetworkCacheModel.geoLatitude;

		if ((geoLatitude != null) && (geoLatitude.length() == 0)) {
			d2BiobankNetworkCacheModel.geoLatitude = null;
		}

		d2BiobankNetworkCacheModel.geoLongitude = getGeoLongitude();

		String geoLongitude = d2BiobankNetworkCacheModel.geoLongitude;

		if ((geoLongitude != null) && (geoLongitude.length() == 0)) {
			d2BiobankNetworkCacheModel.geoLongitude = null;
		}

		d2BiobankNetworkCacheModel.biobankNetworkAcronym = getBiobankNetworkAcronym();

		String biobankNetworkAcronym = d2BiobankNetworkCacheModel.biobankNetworkAcronym;

		if ((biobankNetworkAcronym != null) &&
				(biobankNetworkAcronym.length() == 0)) {
			d2BiobankNetworkCacheModel.biobankNetworkAcronym = null;
		}

		d2BiobankNetworkCacheModel.biobankNetworkDescription = getBiobankNetworkDescription();

		String biobankNetworkDescription = d2BiobankNetworkCacheModel.biobankNetworkDescription;

		if ((biobankNetworkDescription != null) &&
				(biobankNetworkDescription.length() == 0)) {
			d2BiobankNetworkCacheModel.biobankNetworkDescription = null;
		}

		d2BiobankNetworkCacheModel.biobankNetworkURL = getBiobankNetworkURL();

		String biobankNetworkURL = d2BiobankNetworkCacheModel.biobankNetworkURL;

		if ((biobankNetworkURL != null) && (biobankNetworkURL.length() == 0)) {
			d2BiobankNetworkCacheModel.biobankNetworkURL = null;
		}

		d2BiobankNetworkCacheModel.biobankNetworkJuridicalPerson = getBiobankNetworkJuridicalPerson();

		String biobankNetworkJuridicalPerson = d2BiobankNetworkCacheModel.biobankNetworkJuridicalPerson;

		if ((biobankNetworkJuridicalPerson != null) &&
				(biobankNetworkJuridicalPerson.length() == 0)) {
			d2BiobankNetworkCacheModel.biobankNetworkJuridicalPerson = null;
		}

		return d2BiobankNetworkCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(67);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", d2biobanknetworkId=");
		sb.append(getD2biobanknetworkId());
		sb.append(", parentd2biobanknetworkId=");
		sb.append(getParentd2biobanknetworkId());
		sb.append(", status=");
		sb.append(getStatus());
		sb.append(", statusByUserId=");
		sb.append(getStatusByUserId());
		sb.append(", statusByUserName=");
		sb.append(getStatusByUserName());
		sb.append(", statusDate=");
		sb.append(getStatusDate());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", updateuuid=");
		sb.append(getUpdateuuid());
		sb.append(", contactIDRef=");
		sb.append(getContactIDRef());
		sb.append(", contactPriority=");
		sb.append(getContactPriority());
		sb.append(", bbmriBiobankNetworkID=");
		sb.append(getBbmriBiobankNetworkID());
		sb.append(", biobankNetworkName=");
		sb.append(getBiobankNetworkName());
		sb.append(", biobankNetworkCommonCollectionFocus=");
		sb.append(getBiobankNetworkCommonCollectionFocus());
		sb.append(", biobankNetworkCommonCharter=");
		sb.append(getBiobankNetworkCommonCharter());
		sb.append(", biobankNetworkCommonSOPs=");
		sb.append(getBiobankNetworkCommonSOPs());
		sb.append(", biobankNetworkCommonDataAccessPolicy=");
		sb.append(getBiobankNetworkCommonDataAccessPolicy());
		sb.append(", biobankNetworkCommonSampleAccessPolicy=");
		sb.append(getBiobankNetworkCommonSampleAccessPolicy());
		sb.append(", biobankNetworkCommonMTA=");
		sb.append(getBiobankNetworkCommonMTA());
		sb.append(", biobankNetworkCommonRepresentation=");
		sb.append(getBiobankNetworkCommonRepresentation());
		sb.append(", biobankNetworkCommonURL=");
		sb.append(getBiobankNetworkCommonURL());
		sb.append(", biobankNetworkIDRef=");
		sb.append(getBiobankNetworkIDRef());
		sb.append(", geoLatitude=");
		sb.append(getGeoLatitude());
		sb.append(", geoLongitude=");
		sb.append(getGeoLongitude());
		sb.append(", biobankNetworkAcronym=");
		sb.append(getBiobankNetworkAcronym());
		sb.append(", biobankNetworkDescription=");
		sb.append(getBiobankNetworkDescription());
		sb.append(", biobankNetworkURL=");
		sb.append(getBiobankNetworkURL());
		sb.append(", biobankNetworkJuridicalPerson=");
		sb.append(getBiobankNetworkJuridicalPerson());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(103);

		sb.append("<model><model-name>");
		sb.append("at.meduni.liferay.portlet.bbmrieric.model.D2BiobankNetwork");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>d2biobanknetworkId</column-name><column-value><![CDATA[");
		sb.append(getD2biobanknetworkId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>parentd2biobanknetworkId</column-name><column-value><![CDATA[");
		sb.append(getParentd2biobanknetworkId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>status</column-name><column-value><![CDATA[");
		sb.append(getStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>statusByUserId</column-name><column-value><![CDATA[");
		sb.append(getStatusByUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>statusByUserName</column-name><column-value><![CDATA[");
		sb.append(getStatusByUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>statusDate</column-name><column-value><![CDATA[");
		sb.append(getStatusDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>updateuuid</column-name><column-value><![CDATA[");
		sb.append(getUpdateuuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>contactIDRef</column-name><column-value><![CDATA[");
		sb.append(getContactIDRef());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>contactPriority</column-name><column-value><![CDATA[");
		sb.append(getContactPriority());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>bbmriBiobankNetworkID</column-name><column-value><![CDATA[");
		sb.append(getBbmriBiobankNetworkID());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>biobankNetworkName</column-name><column-value><![CDATA[");
		sb.append(getBiobankNetworkName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>biobankNetworkCommonCollectionFocus</column-name><column-value><![CDATA[");
		sb.append(getBiobankNetworkCommonCollectionFocus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>biobankNetworkCommonCharter</column-name><column-value><![CDATA[");
		sb.append(getBiobankNetworkCommonCharter());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>biobankNetworkCommonSOPs</column-name><column-value><![CDATA[");
		sb.append(getBiobankNetworkCommonSOPs());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>biobankNetworkCommonDataAccessPolicy</column-name><column-value><![CDATA[");
		sb.append(getBiobankNetworkCommonDataAccessPolicy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>biobankNetworkCommonSampleAccessPolicy</column-name><column-value><![CDATA[");
		sb.append(getBiobankNetworkCommonSampleAccessPolicy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>biobankNetworkCommonMTA</column-name><column-value><![CDATA[");
		sb.append(getBiobankNetworkCommonMTA());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>biobankNetworkCommonRepresentation</column-name><column-value><![CDATA[");
		sb.append(getBiobankNetworkCommonRepresentation());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>biobankNetworkCommonURL</column-name><column-value><![CDATA[");
		sb.append(getBiobankNetworkCommonURL());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>biobankNetworkIDRef</column-name><column-value><![CDATA[");
		sb.append(getBiobankNetworkIDRef());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>geoLatitude</column-name><column-value><![CDATA[");
		sb.append(getGeoLatitude());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>geoLongitude</column-name><column-value><![CDATA[");
		sb.append(getGeoLongitude());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>biobankNetworkAcronym</column-name><column-value><![CDATA[");
		sb.append(getBiobankNetworkAcronym());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>biobankNetworkDescription</column-name><column-value><![CDATA[");
		sb.append(getBiobankNetworkDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>biobankNetworkURL</column-name><column-value><![CDATA[");
		sb.append(getBiobankNetworkURL());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>biobankNetworkJuridicalPerson</column-name><column-value><![CDATA[");
		sb.append(getBiobankNetworkJuridicalPerson());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = D2BiobankNetwork.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			D2BiobankNetwork.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _d2biobanknetworkId;
	private long _parentd2biobanknetworkId;
	private int _status;
	private long _statusByUserId;
	private String _statusByUserUuid;
	private String _statusByUserName;
	private Date _statusDate;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private String _updateuuid;
	private String _originalUpdateuuid;
	private String _contactIDRef;
	private long _contactPriority;
	private String _bbmriBiobankNetworkID;
	private String _originalBbmriBiobankNetworkID;
	private String _biobankNetworkName;
	private boolean _biobankNetworkCommonCollectionFocus;
	private boolean _biobankNetworkCommonCharter;
	private boolean _biobankNetworkCommonSOPs;
	private boolean _biobankNetworkCommonDataAccessPolicy;
	private boolean _biobankNetworkCommonSampleAccessPolicy;
	private boolean _biobankNetworkCommonMTA;
	private boolean _biobankNetworkCommonRepresentation;
	private boolean _biobankNetworkCommonURL;
	private String _biobankNetworkIDRef;
	private String _geoLatitude;
	private String _geoLongitude;
	private String _biobankNetworkAcronym;
	private String _biobankNetworkDescription;
	private String _biobankNetworkURL;
	private String _biobankNetworkJuridicalPerson;
	private long _columnBitmask;
	private D2BiobankNetwork _escapedModel;
}