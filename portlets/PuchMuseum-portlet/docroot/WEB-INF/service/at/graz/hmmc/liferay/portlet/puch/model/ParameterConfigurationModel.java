/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package at.graz.hmmc.liferay.portlet.puch.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

/**
 * The base model interface for the ParameterConfiguration service. Represents a row in the &quot;puchmuseum.parameterconfiguration&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link at.graz.hmmc.liferay.portlet.puch.model.impl.ParameterConfigurationModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link at.graz.hmmc.liferay.portlet.puch.model.impl.ParameterConfigurationImpl}.
 * </p>
 *
 * @author reihsr
 * @see ParameterConfiguration
 * @see at.graz.hmmc.liferay.portlet.puch.model.impl.ParameterConfigurationImpl
 * @see at.graz.hmmc.liferay.portlet.puch.model.impl.ParameterConfigurationModelImpl
 * @generated
 */
public interface ParameterConfigurationModel extends BaseModel<ParameterConfiguration> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a parameter configuration model instance should use the {@link ParameterConfiguration} interface instead.
	 */

	/**
	 * Returns the primary key of this parameter configuration.
	 *
	 * @return the primary key of this parameter configuration
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this parameter configuration.
	 *
	 * @param primaryKey the primary key of this parameter configuration
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the parameterconfiguration ID of this parameter configuration.
	 *
	 * @return the parameterconfiguration ID of this parameter configuration
	 */
	public long getParameterconfigurationId();

	/**
	 * Sets the parameterconfiguration ID of this parameter configuration.
	 *
	 * @param parameterconfigurationId the parameterconfiguration ID of this parameter configuration
	 */
	public void setParameterconfigurationId(long parameterconfigurationId);

	/**
	 * Returns the displaynameshort of this parameter configuration.
	 *
	 * @return the displaynameshort of this parameter configuration
	 */
	@AutoEscape
	public String getDisplaynameshort();

	/**
	 * Sets the displaynameshort of this parameter configuration.
	 *
	 * @param displaynameshort the displaynameshort of this parameter configuration
	 */
	public void setDisplaynameshort(String displaynameshort);

	/**
	 * Returns the displaynamelong of this parameter configuration.
	 *
	 * @return the displaynamelong of this parameter configuration
	 */
	@AutoEscape
	public String getDisplaynamelong();

	/**
	 * Sets the displaynamelong of this parameter configuration.
	 *
	 * @param displaynamelong the displaynamelong of this parameter configuration
	 */
	public void setDisplaynamelong(String displaynamelong);

	/**
	 * Returns the datatype of this parameter configuration.
	 *
	 * @return the datatype of this parameter configuration
	 */
	@AutoEscape
	public String getDatatype();

	/**
	 * Sets the datatype of this parameter configuration.
	 *
	 * @param datatype the datatype of this parameter configuration
	 */
	public void setDatatype(String datatype);

	/**
	 * Returns the group of this parameter configuration.
	 *
	 * @return the group of this parameter configuration
	 */
	@AutoEscape
	public String getGroup();

	/**
	 * Sets the group of this parameter configuration.
	 *
	 * @param group the group of this parameter configuration
	 */
	public void setGroup(String group);

	/**
	 * Returns the tab of this parameter configuration.
	 *
	 * @return the tab of this parameter configuration
	 */
	@AutoEscape
	public String getTab();

	/**
	 * Sets the tab of this parameter configuration.
	 *
	 * @param tab the tab of this parameter configuration
	 */
	public void setTab(String tab);

	/**
	 * Returns the viewscript of this parameter configuration.
	 *
	 * @return the viewscript of this parameter configuration
	 */
	@AutoEscape
	public String getViewscript();

	/**
	 * Sets the viewscript of this parameter configuration.
	 *
	 * @param viewscript the viewscript of this parameter configuration
	 */
	public void setViewscript(String viewscript);

	/**
	 * Returns the viewvisible of this parameter configuration.
	 *
	 * @return the viewvisible of this parameter configuration
	 */
	public boolean getViewvisible();

	/**
	 * Returns <code>true</code> if this parameter configuration is viewvisible.
	 *
	 * @return <code>true</code> if this parameter configuration is viewvisible; <code>false</code> otherwise
	 */
	public boolean isViewvisible();

	/**
	 * Sets whether this parameter configuration is viewvisible.
	 *
	 * @param viewvisible the viewvisible of this parameter configuration
	 */
	public void setViewvisible(boolean viewvisible);

	/**
	 * Returns the viewtip of this parameter configuration.
	 *
	 * @return the viewtip of this parameter configuration
	 */
	@AutoEscape
	public String getViewtip();

	/**
	 * Sets the viewtip of this parameter configuration.
	 *
	 * @param viewtip the viewtip of this parameter configuration
	 */
	public void setViewtip(String viewtip);

	/**
	 * Returns the viewtitlecss of this parameter configuration.
	 *
	 * @return the viewtitlecss of this parameter configuration
	 */
	@AutoEscape
	public String getViewtitlecss();

	/**
	 * Sets the viewtitlecss of this parameter configuration.
	 *
	 * @param viewtitlecss the viewtitlecss of this parameter configuration
	 */
	public void setViewtitlecss(String viewtitlecss);

	/**
	 * Returns the viewvaluecss of this parameter configuration.
	 *
	 * @return the viewvaluecss of this parameter configuration
	 */
	@AutoEscape
	public String getViewvaluecss();

	/**
	 * Sets the viewvaluecss of this parameter configuration.
	 *
	 * @param viewvaluecss the viewvaluecss of this parameter configuration
	 */
	public void setViewvaluecss(String viewvaluecss);

	/**
	 * Returns the viewcss of this parameter configuration.
	 *
	 * @return the viewcss of this parameter configuration
	 */
	@AutoEscape
	public String getViewcss();

	/**
	 * Sets the viewcss of this parameter configuration.
	 *
	 * @param viewcss the viewcss of this parameter configuration
	 */
	public void setViewcss(String viewcss);

	/**
	 * Returns the editscript of this parameter configuration.
	 *
	 * @return the editscript of this parameter configuration
	 */
	@AutoEscape
	public String getEditscript();

	/**
	 * Sets the editscript of this parameter configuration.
	 *
	 * @param editscript the editscript of this parameter configuration
	 */
	public void setEditscript(String editscript);

	/**
	 * Returns the editvisible of this parameter configuration.
	 *
	 * @return the editvisible of this parameter configuration
	 */
	public boolean getEditvisible();

	/**
	 * Returns <code>true</code> if this parameter configuration is editvisible.
	 *
	 * @return <code>true</code> if this parameter configuration is editvisible; <code>false</code> otherwise
	 */
	public boolean isEditvisible();

	/**
	 * Sets whether this parameter configuration is editvisible.
	 *
	 * @param editvisible the editvisible of this parameter configuration
	 */
	public void setEditvisible(boolean editvisible);

	/**
	 * Returns the edittip of this parameter configuration.
	 *
	 * @return the edittip of this parameter configuration
	 */
	@AutoEscape
	public String getEdittip();

	/**
	 * Sets the edittip of this parameter configuration.
	 *
	 * @param edittip the edittip of this parameter configuration
	 */
	public void setEdittip(String edittip);

	/**
	 * Returns the edittitlecss of this parameter configuration.
	 *
	 * @return the edittitlecss of this parameter configuration
	 */
	@AutoEscape
	public String getEdittitlecss();

	/**
	 * Sets the edittitlecss of this parameter configuration.
	 *
	 * @param edittitlecss the edittitlecss of this parameter configuration
	 */
	public void setEdittitlecss(String edittitlecss);

	/**
	 * Returns the editvaluecss of this parameter configuration.
	 *
	 * @return the editvaluecss of this parameter configuration
	 */
	@AutoEscape
	public String getEditvaluecss();

	/**
	 * Sets the editvaluecss of this parameter configuration.
	 *
	 * @param editvaluecss the editvaluecss of this parameter configuration
	 */
	public void setEditvaluecss(String editvaluecss);

	/**
	 * Returns the editcss of this parameter configuration.
	 *
	 * @return the editcss of this parameter configuration
	 */
	@AutoEscape
	public String getEditcss();

	/**
	 * Sets the editcss of this parameter configuration.
	 *
	 * @param editcss the editcss of this parameter configuration
	 */
	public void setEditcss(String editcss);

	/**
	 * Returns the editcolumnwidth of this parameter configuration.
	 *
	 * @return the editcolumnwidth of this parameter configuration
	 */
	public long getEditcolumnwidth();

	/**
	 * Sets the editcolumnwidth of this parameter configuration.
	 *
	 * @param editcolumnwidth the editcolumnwidth of this parameter configuration
	 */
	public void setEditcolumnwidth(long editcolumnwidth);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(ParameterConfiguration parameterConfiguration);

	@Override
	public int hashCode();

	@Override
	public CacheModel<ParameterConfiguration> toCacheModel();

	@Override
	public ParameterConfiguration toEscapedModel();

	@Override
	public ParameterConfiguration toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}