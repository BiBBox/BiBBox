/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package at.graz.hmmc.liferay.portlet.puch.model.impl;

import at.graz.hmmc.liferay.portlet.puch.model.ObjectData;
import at.graz.hmmc.liferay.portlet.puch.model.ObjectDataModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the ObjectData service. Represents a row in the &quot;puchmuseum.objectdata&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link at.graz.hmmc.liferay.portlet.puch.model.ObjectDataModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ObjectDataImpl}.
 * </p>
 *
 * @author reihsr
 * @see ObjectDataImpl
 * @see at.graz.hmmc.liferay.portlet.puch.model.ObjectData
 * @see at.graz.hmmc.liferay.portlet.puch.model.ObjectDataModel
 * @generated
 */
public class ObjectDataModelImpl extends BaseModelImpl<ObjectData>
	implements ObjectDataModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a object data model instance should use the {@link at.graz.hmmc.liferay.portlet.puch.model.ObjectData} interface instead.
	 */
	public static final String TABLE_NAME = "puchmuseum.objectdata";
	public static final Object[][] TABLE_COLUMNS = {
			{ "objectdataId", Types.BIGINT },
			{ "puchmuseumsobjectId", Types.BIGINT },
			{ "objectkey", Types.VARCHAR },
			{ "objectvalue", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table puchmuseum.objectdata (objectdataId LONG not null primary key,puchmuseumsobjectId LONG,objectkey TEXT null,objectvalue TEXT null)";
	public static final String TABLE_SQL_DROP = "drop table puchmuseum.objectdata";
	public static final String ORDER_BY_JPQL = " ORDER BY objectData.puchmuseumsobjectId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY puchmuseum.objectdata.puchmuseumsobjectId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.at.graz.hmmc.liferay.portlet.puch.model.ObjectData"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.at.graz.hmmc.liferay.portlet.puch.model.ObjectData"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.at.graz.hmmc.liferay.portlet.puch.model.ObjectData"),
			true);
	public static long OBJECTKEY_COLUMN_BITMASK = 1L;
	public static long PUCHMUSEUMSOBJECTID_COLUMN_BITMASK = 2L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.at.graz.hmmc.liferay.portlet.puch.model.ObjectData"));

	public ObjectDataModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _objectdataId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setObjectdataId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _objectdataId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return ObjectData.class;
	}

	@Override
	public String getModelClassName() {
		return ObjectData.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("objectdataId", getObjectdataId());
		attributes.put("puchmuseumsobjectId", getPuchmuseumsobjectId());
		attributes.put("objectkey", getObjectkey());
		attributes.put("objectvalue", getObjectvalue());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long objectdataId = (Long)attributes.get("objectdataId");

		if (objectdataId != null) {
			setObjectdataId(objectdataId);
		}

		Long puchmuseumsobjectId = (Long)attributes.get("puchmuseumsobjectId");

		if (puchmuseumsobjectId != null) {
			setPuchmuseumsobjectId(puchmuseumsobjectId);
		}

		String objectkey = (String)attributes.get("objectkey");

		if (objectkey != null) {
			setObjectkey(objectkey);
		}

		String objectvalue = (String)attributes.get("objectvalue");

		if (objectvalue != null) {
			setObjectvalue(objectvalue);
		}
	}

	@Override
	public long getObjectdataId() {
		return _objectdataId;
	}

	@Override
	public void setObjectdataId(long objectdataId) {
		_objectdataId = objectdataId;
	}

	@Override
	public long getPuchmuseumsobjectId() {
		return _puchmuseumsobjectId;
	}

	@Override
	public void setPuchmuseumsobjectId(long puchmuseumsobjectId) {
		_columnBitmask = -1L;

		if (!_setOriginalPuchmuseumsobjectId) {
			_setOriginalPuchmuseumsobjectId = true;

			_originalPuchmuseumsobjectId = _puchmuseumsobjectId;
		}

		_puchmuseumsobjectId = puchmuseumsobjectId;
	}

	public long getOriginalPuchmuseumsobjectId() {
		return _originalPuchmuseumsobjectId;
	}

	@Override
	public String getObjectkey() {
		if (_objectkey == null) {
			return StringPool.BLANK;
		}
		else {
			return _objectkey;
		}
	}

	@Override
	public void setObjectkey(String objectkey) {
		_columnBitmask |= OBJECTKEY_COLUMN_BITMASK;

		if (_originalObjectkey == null) {
			_originalObjectkey = _objectkey;
		}

		_objectkey = objectkey;
	}

	public String getOriginalObjectkey() {
		return GetterUtil.getString(_originalObjectkey);
	}

	@Override
	public String getObjectvalue() {
		if (_objectvalue == null) {
			return StringPool.BLANK;
		}
		else {
			return _objectvalue;
		}
	}

	@Override
	public void setObjectvalue(String objectvalue) {
		_objectvalue = objectvalue;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			ObjectData.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public ObjectData toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (ObjectData)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ObjectDataImpl objectDataImpl = new ObjectDataImpl();

		objectDataImpl.setObjectdataId(getObjectdataId());
		objectDataImpl.setPuchmuseumsobjectId(getPuchmuseumsobjectId());
		objectDataImpl.setObjectkey(getObjectkey());
		objectDataImpl.setObjectvalue(getObjectvalue());

		objectDataImpl.resetOriginalValues();

		return objectDataImpl;
	}

	@Override
	public int compareTo(ObjectData objectData) {
		int value = 0;

		if (getPuchmuseumsobjectId() < objectData.getPuchmuseumsobjectId()) {
			value = -1;
		}
		else if (getPuchmuseumsobjectId() > objectData.getPuchmuseumsobjectId()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof ObjectData)) {
			return false;
		}

		ObjectData objectData = (ObjectData)obj;

		long primaryKey = objectData.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		ObjectDataModelImpl objectDataModelImpl = this;

		objectDataModelImpl._originalPuchmuseumsobjectId = objectDataModelImpl._puchmuseumsobjectId;

		objectDataModelImpl._setOriginalPuchmuseumsobjectId = false;

		objectDataModelImpl._originalObjectkey = objectDataModelImpl._objectkey;

		objectDataModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<ObjectData> toCacheModel() {
		ObjectDataCacheModel objectDataCacheModel = new ObjectDataCacheModel();

		objectDataCacheModel.objectdataId = getObjectdataId();

		objectDataCacheModel.puchmuseumsobjectId = getPuchmuseumsobjectId();

		objectDataCacheModel.objectkey = getObjectkey();

		String objectkey = objectDataCacheModel.objectkey;

		if ((objectkey != null) && (objectkey.length() == 0)) {
			objectDataCacheModel.objectkey = null;
		}

		objectDataCacheModel.objectvalue = getObjectvalue();

		String objectvalue = objectDataCacheModel.objectvalue;

		if ((objectvalue != null) && (objectvalue.length() == 0)) {
			objectDataCacheModel.objectvalue = null;
		}

		return objectDataCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(9);

		sb.append("{objectdataId=");
		sb.append(getObjectdataId());
		sb.append(", puchmuseumsobjectId=");
		sb.append(getPuchmuseumsobjectId());
		sb.append(", objectkey=");
		sb.append(getObjectkey());
		sb.append(", objectvalue=");
		sb.append(getObjectvalue());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(16);

		sb.append("<model><model-name>");
		sb.append("at.graz.hmmc.liferay.portlet.puch.model.ObjectData");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>objectdataId</column-name><column-value><![CDATA[");
		sb.append(getObjectdataId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>puchmuseumsobjectId</column-name><column-value><![CDATA[");
		sb.append(getPuchmuseumsobjectId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>objectkey</column-name><column-value><![CDATA[");
		sb.append(getObjectkey());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>objectvalue</column-name><column-value><![CDATA[");
		sb.append(getObjectvalue());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = ObjectData.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			ObjectData.class
		};
	private long _objectdataId;
	private long _puchmuseumsobjectId;
	private long _originalPuchmuseumsobjectId;
	private boolean _setOriginalPuchmuseumsobjectId;
	private String _objectkey;
	private String _originalObjectkey;
	private String _objectvalue;
	private long _columnBitmask;
	private ObjectData _escapedModel;
}